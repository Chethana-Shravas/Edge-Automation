'USEUNIT DM
'USEUNIT EDGE_Util
'USEUNIT File_Repository
'USEUNIT FrameWork
'USEUNIT HTML
'USEUNIT Layout
'USEUNIT Master_Maintanance
'USEUNIT Release_Schedule
'USEUNIT Series_Search
'USEUNIT Source
'USEUNIT SourceSchedule
'USEUNIT STP
'USEUNIT To_Do_Panel

Sub sLaunchEDGE()

On Error Resume Next

    Dim objShell,WScript,objEdgeMDI,strObject,ObjCombo,objLoginOK,strObj,objsrc,strTemp,objTemp, objEDGEClient

    Set objTemp = Sys.FindChild("ProcessName","EdgeClient", 1,True)
    If objTemp.Exists then
      log.Message "EdgeClient application is already running"
      strTestCaseResult="PASS"
      strTCRemarks="EdgeClient application is already running"
      Exit Sub
    End If

    Set objShell = CreateObject("WScript.Shell")
     strTemp = """" & aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\CEIC Data\Edge Client.appref-ms" & """"
    objShell.Run(strTemp)
    Set objShell = Nothing
    Delay 15000,"Launching Edge..  Please wait.."

    Log.Message "Looking for Environment Combo"

    set objEDGEClient = Sys.WaitProcess("EdgeClient",600000,-1)

    If objEDGEClient.Exists = True Then
        Log.Message "Process 'EdgeClient' found " & objEDGEClient.Name 
    Else
        Log.Message "Unable to fetch 'EdgeClient' Process" 
        strTestCaseResult = "ABORT"
        strTCRemarks = "Unable to fetch 'EdgeClient' Process"
        Exit Sub                
    End If

    strTemp = "WPFObject(""ConnectionComboBox"")"
    Set objTemp=objEDGEClient.FindChild("Name",strTemp,15,True)
    If objTemp.Exists = True Then
      Log.Message "Combo box found " & objTemp.Name                 
      objTemp.Click
      objTemp.Keys "[Down][Down][Enter]"
      strTemp="WPFObject(""Button"", ""OK"", 1)"
      Set objTemp=objEDGEClient.FindChild("Name",strTemp,12,True)
      objTemp.Click  
    Else
      log.Message "Default Login"
    End If   
    strObject="WPFObject(""HwndSource: Shell"", """& strEnvi &""")"
    Set objEdgeMDI=Sys.Process("EdgeClient").WaitChild(strObject, 600000)
    If objEdgeMDI.Exists then
      Delay 10000,"Pls Wait.."
      strTemp="WPFObject(""HwndSource: Shell"", """& strEnvi &""")"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,25,True)
      If objTemp.Exists=True then
        Call objTemp.ClickR(614, 20)
        sys.Keys "[Down][Down][Down][Down][Down][Enter]"
        Delay 10000,"Pls Wait.."
      End If
    End If

    
    strTCRemarks = "EDGE is lauched"

    Set ObjCombo = Nothing
    Set ObjComboWindow = Nothing
   
End Sub
'***********************************************************************************************************************

Sub sHome_Source()
On Error Resume Next

  Call sOpenSourceDispalyViewer()
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sHome_Source()' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Sub
'************************************************************************************************************************************

Sub sOpenSourceDispalyViewer()

  On Error Resume Next
  Dim objEdgeMDI,strTemp,objTemp
  Delay 2000 , "Please Wait"
  
  'Open Source Workspace Viewer
  Set objEdgeMDI = Sys.Process("EdgeClient")
    If objEdgeMDI.Exists then
      strTemp = "WPFObject(""TextBlock"", ""Source"", 1)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
      If objTemp.Exists = False then      
        strTemp="WPFObject(""ContentControl"", ""Source"", 1)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        If objTemp.Exists = True then
          objTemp.Click
          Delay 2000,"Please wait Source window is opening..."
          Call sEdgeProcessor()
          log.Message "Opening Source Workspace.."
        End If
      Else
        log.Message "Source Window is already Opened.."            
     End If  
  End If
  
  If Err.Number > 0 Then
   Log.Warning("Error in 'sOpenSourceDispalyViewer()',Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'*******************************************************************************************************************************************

Sub sSourceModule(strParameters)
'Sub sSourceModule()

On Error Resume Next     

    Dim strSource_Name,strLevel2src_Name,objNewWrkSpace_okbtn,objNewWrkSpace_Name,strWrkSpaceName,strSourceWSV
    Dim objNewWrkSpace_Txtbox,objopenforEdit,objWrkspace_popup
    Dim strTemp,objTemp,intRow,barManager,intTotNodeCnt,Text,strDesc1,strDesc2
    Dim objWrkSpace,objwrkspacepop,objwrkspcUpload,objConfirm,objGridCell,DescLocalText,intSeriesID
    Dim layoutGroup
    Dim strTemp1,objNewWrkSpaceName
    

    strSource_Name=getSplitValue(strParameters,"SOURCE")
    strLevel2src_Name=getSplitValue(strParameters,"LEVEL2SOURCE")    
    intSeriesID=getSplitValue(strParameters,"SERIESID")
    strSourceWSV=getSplitValue(strParameters,"SourceWSV")
    strCategory=getSplitValue(strParameters,"CATEGORY")
    strType=getSplitValue(strParameters,"TYPE")
     
'     strSource_Name="Test"
'     strLevel2src_Name="Automation"    
'     intSeriesID="368765647"
'     strSourceWSV="True"
'     strEnvi = "Edge ( US Integration )" 

    
    strDesc1=aqDateTime.Now
    strDesc2=aqDateTime.Now
    strDate = Day(Date) & " "& Monthname(Month(date),true)&" " &Year(date)
    strDate = Day(Date) & " "& Monthname(Month(date),true)&" " &Year(date)
    strDate1 = Split(Now , " ")
    strWrkSpaceDate = strDate & " "& strDate1(1) & " "&  strDate1(2)
    DescText=Replace(strDesc1,"/","-")
    DescText=Replace(DescText,":","_")
    DescLocalText=DescText
    strWrkSpaceName=DescText 
        
    if intSeriesID=0 then
      Call sSourceseries
      intSeriesID=strSourceFileText
    End if 

   
    strTemp="WPFObject(""SourceTreeListView"")"
    Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    strTemp="WPFObject(""SourceTreeControl"")"
    Set GridSourceTree=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    Delay 3000,"Pls Wait.."
    ''Selecting Country Name
    intTotNodeCnt=GridControl.Nodes_2.Count
    
    For intI=0 to intTotNodeCnt-1     
      If Ucase(GridControl.Nodes_2.Item(intI).Content.Description) = Ucase(strSource_Name) then
          GridControl.Nodes_2.Item(intI).ExpandAll
          log.Message "Country Name - " & GridControl.Nodes_2.Item(intI).Content.Description       
          blnFlag=False  
          Exit For
        End If
    Next
    If blnFlag = True then
      strTCRemarks="Country Name not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If
  
    Delay 4000,"Pls Wait.."
    blnFlag = True 
    ''Selecting Level2Source_Name
    intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
  For intJ=0 to intTotNodeCnt-1
      If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then
        GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll  
        intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
        Call GridControl.ClearSelectionCore
        Call GridControl.FocusViewAndRow(GridControl,intRow)
        GridControl.SetFocusOnCurrentItem
        Call GridControl.SelectRowCore(intRow)
        log.Message "Level2 Source Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
        blnFlag = False 
        Exit For
      End If
    Next
    If blnFlag = True then
      log.Message "Level2 Source Name not found"
      strTCRemarks="Level2 Source Name not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If
    Delay 2000,"Pls Wait.."       

    ''Clicking on "New Workspace" Button and selecting "Open for Edit(Souce)" option 
    strTemp="WPFObject(""ContentControlEx"", ""New Workspace"", 2)"
    Set objNewWorkspace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    If objNewWorkspace.Exists = True then
      objNewWorkspace.Click
        strTemp="WPFObject(""ContentControlEx"", ""Open For Edit (Source)"", 2)"
        Set objopenforEdit=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        If objopenforEdit.Exists then
          objopenforEdit.Click    
        End If
  
      strTemp1="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
      Set objNewWrkSpaceName=Sys.Process("EdgeClient").WaitChild(strTemp1,50000)
      If objNewWrkSpaceName.Exists = True then
     
      ''Waiting for Workspace Name prompt
      strTemp="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
      Set objNewWrkSpace_Name=Sys.Process("EdgeClient").WaitChild(strTemp,60000)
        If objNewWrkSpace_Name.Exists = True then
          strTemp="WPFObject(""ChangeNameTextEdit"")"
          ''Entering Workspace Name
          Set objNewWrkSpace_Txtbox=objNewWrkSpace_Name.FindChild("Name",strTemp,9,True)
            If objNewWrkSpace_Txtbox.Exists = True then
              objNewWrkSpace_Txtbox.Click
              objNewWrkSpace_Txtbox.Text=strWrkSpaceName
              strDate = Day(Date) & " "& Monthname(Month(date),true)&" " &Year(date)
              strDate1 = Split(Now , " ")
              strWrkSpaceDateTime = strDate & " "& strDate1(1) & " "&  strDate1(2)
              strTemp="WPFObject(""OkButton"")"
              Set objNewWrkSpace_okbtn=objNewWrkSpace_Name.FindChild("Name",strTemp,9,True)
              If objNewWrkSpace_okbtn.Exists = True then
                objNewWrkSpace_okbtn.Click
              End If
            End If
        End If
      End if
    End If
 
    ''WorkSpace Edit Window
    strTemp="WPFObject(""LayoutPanel"", """", 2)"
    Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WaitChild(strTemp,15000)
    If objTemp.Exists then
        Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl").WPFObject("SourceTreeListView")
        Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl")
     
        ''Expanding First Node in Tree      
        intTotNodeCnt=GridControl.Nodes_2.Count  
        For intI=0 to intTotNodeCnt-1         
          If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
            GridControl.Nodes_2.Item(intI).ExpandAll
            blnFlag=False  
            Exit For
          End If
        Next
    
        ''Expanding Second Node in Tree
        intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
        For intJ=0 to intTotNodeCnt-1
          If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then
            GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
            intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(0).get_RowHandle
            GridControl.Keys "^[Home]"
            Call GridControl.ClearSelectionCore
            Call GridControl.FocusViewAndRow(GridControl,intRow-1)
            GridControl.SetFocusOnCurrentItem
            Call GridControl.SelectRowCore(intRow-1)        
            If objGridCell.Exists = True then
              objGridCell.Click
            End If
            blnFlag = False 
            Exit For
          End If
        Next
    
        ''Clicking on New Folder
        strTemp="WPFObject(""ContentControlEx"", ""Add Folder"", 2)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        If objTemp.Exists = True then
          Delay 3000,"New Folder..."
          objTemp.Click
          Delay 5000,"New Folder..."
        End If
    
        'Getting no. of Rows under level 2
        intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
        intK=intTotNodeCnt-1
    
        Set objDescCell=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl").WPFObject("SourceTreeListView").Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK)
        Call objDescCell.Content.set_Description(DescText)
        Call objDescCell.Content.set_DescriptionLocal(DescLocalText)
        
        ''Attach Series
        strTemp="WPFObject(""ContentControlEx"", ""Attach Series"", 2)"
        Set objAttachSeries=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        If objAttachSeries.Exists = True then
          objAttachSeries.DblClick
          ''Entering Series
          strTemp="WPFObject(""SeriesIdTextEdit"")"
          Set objTextEdit=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)   
             If objTextEdit.Exists = True then
             objTextEdit.Text=intSeriesID
             Delay(500)
             ''Clicking on OK Button
             strTemp="WPFObject(""OkButton"")"
             Set objOKButton=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
             If objOKButton.Exists = True then
                objOKButton.Click
             End If
          End If            
        End If

    
      ''Closing Source
      Call SClosesource()  
     Delay 1000    
      If strSourceWSV = "True" Then                      
          
           'Saving the Workspace
           strTemp="WPFObject(""ContentControlEx"", ""Workspace"", 2)"
          Set objWrkSpace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
          If objWrkSpace.Exists = True then
          objWrkSpace.Click
          If objWrkSpace.Exists = True then
          strTemp="WPFObject(""ContentControlEx"", ""Save Workspace"", 2)"
          set objwrkspcSave=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
          If objwrkspcSave.Exists = True then
            objwrkspcSave.Click
            Delay(1000)           
            
            'Clicking on Do you want to Save message box
              strTemp="WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Confirm save."")"
             Set objConfirm=Sys.Process("EdgeClient").WaitChild(strTemp,60000)          
              If objConfirm.Exists = True then
              strTemp="WPFObject(""TextBlock_Message"")"
              Set objText = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Confirm save.").FindChild("Name",strTemp,10,True)
              strText =  objText.Text
                If Ucase(Trim(strText)) = Ucase(Trim("Are you sure you want to save?")) Then
                  Sys.Keys "Y"              
                  Set objConfirm = Sys.Process("EdgeClient")._
                  Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", """")",600000)'._
                  If objConfirm.Exists = True then
                    Sys.Keys("O")                
                    Call sEdgeProcessor
                    Call SClosesource()
                    If Ucase(strType) = Ucase("NO") And strCategory ="TC_SOURCEWV_08" Then 
                     Set objConfirm = Sys.Process("EdgeClient")._
                      Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Edge"")",10000)'._
                     If objConfirm.Exists = False Then 
                        strTCRemarks = "TC_SOURCEWV_08_09  Pass"
                        strTestCaseResult="PASS"                   
                      Else 
                        Sys.Keys("Y") 
                       strTCRemarks = "TC_SOURCEWV_08_09  Fail"
                      strTestCaseResult="FAIL"    
                  End If
                End IF
                Delay 1000,"Closing SourceWorkspace for Edit..."
                End If
              End If
            End IF
           End If
        End If
       End If       
          strTestCaseResult="PASS" 
         Exit Sub
      End If
    ''Uploading WorkSpace
    strTemp="WPFObject(""ContentControlEx"", ""Workspace"", 2)"
    Set objWrkSpace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    If objWrkSpace.Exists = True then
    Delay(1000)
      objWrkSpace.Click
      Delay(1000)
       If objWrkSpace.Exists = True then
        strTemp="WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"
        set objwrkspcUpload=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        If objwrkspcUpload.Exists = True then
          objwrkspcUpload.Click
          strTemp="WPFObject(""HwndSource: WindowContentHolder"", ""Confirm"")"
          Set objConfirm=Sys.Process("EdgeClient").WaitChild(strTemp,60000)
           If objConfirm.Exists = True then
            objConfirm.Keys "[Enter]"
            Set objConfirm = Sys.Process("EdgeClient")._
            Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Upload Workspace"")",600000)'._
           If objConfirm.Exists = True then
              Sys.Keys("O")
              Call sEdgeProcessor
    
                  ''Reopen Source and Checking whether the new source is created              
                Call sHome_Source()
    
                strTemp="WPFObject(""SourceTreeListView"")"
                Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
                strTemp="WPFObject(""SourceTreeControl"")"
                Set GridSourceTree=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
            

                ''Selecting Country Name
                intTotNodeCnt=GridControl.Nodes_2.Count
                For intI=0 to intTotNodeCnt-1         
                    If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
                      GridControl.Nodes_2.Item(intI).ExpandAll
                      log.Message "Country Name - " & GridControl.Nodes_2.Item(intI).Content.Description       
                      blnFlag=False  
                      Exit For
                    End If
                Next
                If blnFlag = True then
                  strTCRemarks="Country Name not found"
                  strTestCaseResult="FAIL"
                  Exit Sub
                End If
  
                    blnFlag = True 
                ''Selecting Level2Source_Name
                intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
                For intJ=0 to intTotNodeCnt-1
                  If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then
                    GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
                    intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
                    Call GridControl.ClearSelectionCore
                    Call GridControl.FocusViewAndRow(GridControl,intRow)
                    GridControl.SetFocusOnCurrentItem
                    Call GridControl.SelectRowCore(intRow)
                    log.Message "Level2 Source Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
                    blnFlag = False 
                    Exit For
                  End If
                Next
                
                    blnFlag = True 
                ''Selecting Level2Source_Name
                intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
                For intJ=0 to intTotNodeCnt-1
                  If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then
                    GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
                    intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
                    Call GridControl.ClearSelectionCore
                    Call GridControl.FocusViewAndRow(GridControl,intRow)
                    GridControl.SetFocusOnCurrentItem
                    Call GridControl.SelectRowCore(intRow)
                    log.Message "Level2 Source Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
                    blnFlag = False 
                    Exit For
                  End If
                Next
    
                If blnFlag = True then
                  strTCRemarks="Level2 Source Name not found"
                  strTestCaseResult="FAIL"
                  Exit Sub
                End If
                
              strTemp="WPFObject(""ContentControlEx"", ""New Workspace"", 2)"
              Set objNewWorkspace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
              If objNewWorkspace.Exists = True then
                objNewWorkspace.Click
                If objNewWorkspace.Exists = True then
                  strTemp="WPFObject(""ContentControlEx"", ""Open For Edit (Source)"", 2)"
                  Set objopenforEdit=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
                  If objopenforEdit.Exists then
                    objopenforEdit.Click    
                  End If
                End If
                
                strTemp1="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
                Set objNewWrkSpaceName=Sys.Process("EdgeClient").WaitChild(strTemp1,50000)
                If objNewWrkSpaceName.Exists = True then
   
                  ''Waiting for Workspace Name prompt
                  strTemp="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
                  Set objNewWrkSpace_Name=Sys.Process("EdgeClient").WaitChild(strTemp,60000)
                  If objNewWrkSpace_Name.Exists = True then
                    strTemp="WPFObject(""ChangeNameTextEdit"")"
                    ''Entering Workspace Name
                    Set objNewWrkSpace_Txtbox=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
                      If objNewWrkSpace_Txtbox.Exists = True then
                        objNewWrkSpace_Txtbox.Click
                        objNewWrkSpace_Txtbox.Text=strWrkSpaceName
                        ''Clicking on Ok Button 
                        strTemp="WPFObject(""OkButton"")"
                        Set objNewWrkSpace_okbtn=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
                        If objNewWrkSpace_okbtn.Exists = True then
                          objNewWrkSpace_okbtn.Click
                           Call sEdgeProcessor
                        End If
                      End If
                  End If
                End if
            End If


          ''WorkSpace Edit Window
          strTemp="WPFObject(""LayoutPanel"", """", 2)"
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
          If objTemp.Exists then
              Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl").WPFObject("SourceTreeListView")
              Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl")
           
              intTotNodeCnt=GridControl.Nodes_2.Count  
              For intI=0 to intTotNodeCnt-1         
                If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
                  GridControl.Nodes_2.Item(intI).ExpandAll
                  blnFlag=False  
                  Exit For
                End If
              Next

              intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
              For intJ=0 to intTotNodeCnt-1
                If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then
                  GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
                  blnFlag = False 
                  Exit For
                End If
              Next
          
              intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
               For intK=0 to intTotNodeCnt-1
                  If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase( DescText) then
                      intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
                      GridControl.set_FocusedRowHandle(intRow)
                      log.Message "New Source Created"
                      'Checking for series Id
                      Dim objSourceSeriesTable,objRowControl
                      strTemp = "WPFObject(""SourceSeriesTableView"")"
                      objSourceSeriesTable = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
                      If objSourceSeriesTable.exists = True Then
                        strTemp="WPFObject(""RowControl"", """", 1)"
                        objRowControl = objSourceSeriesTable.FindChild("Name",strTemp,10,True)
                        If objRowControl.DataContext.Row.SeriesId = intSeriesID Then
                          strTCRemarks="Upload successful" & "<br />" & "Level3 Source Created - " & DescText & "<br />" & "Attach Series - " & intSeriesID
                        Else
                          strTCRemarks="Series not matching"
                        End If
                      Else
                        strTCRemarks="SourceSeriesTable does not exist"
                      End If
                      Exit For   
                  End If 
               Next
              End If
            End If
          End If
        End If
      End If
    End If
    End If

    ''Closing Opened Window
    
    Call sCloseLayout2()
    Call SClosesource()
    ''Dropping Workspace in Source Workspace viewer 
    Call SourceWorkSpacevwr()
    
    If Err.Number > 0 Then
    Log.Warning("Error in 'sSourceModule', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'***********************************************************************************************************************************************************

Sub sCloseLayout2()

  'strEnvi = "Edge ( US Integration )" 
  On Error Resume Next
  Dim objEdge,strTemp,objTemp, objStrClose
    strTemp = "WPFObject(""LayoutPanel"", """", 2)"
    Set objStrClose =Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).FindChild("Name",strTemp,10,True)
    objStrClose.Closed=true
    Delay 200,"Closing Layout2..."    
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sCloseLayout2', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If    
End Sub
'********************************************************************************************************************************************************************************

Sub SClosesource()

strEnvi = "Edge ( US Integration )"  
    On Error Resume Next 
    Dim objEdge,strTemp,objTemp, objStrClose , objClose  
    
     strTemp = "WPFObject(""LayoutPanel"", """", 1)" 
     Set objStrClose=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).FindChild("Name",strTemp,10,True)
     If objStrClose.Exists = True then       
       objStrClose.set_Closed(True)
      Delay 200,"Closing Form..."        
    End If  
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'SClosesource()' ,Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
  End If
     
End Sub

'************************************************************************************************************************************************************************************************

Sub SourceWorkSpacevwr()

On Error Resume Next
  strLocalname=getSplitValue(strParameters,"WORKSPACENAME")
   'strEnvi = "Edge ( US Integration )"  

    Dim strObject,objEdgeMDI,strTemp,objTemp,GridControl,intRowcnt,intI,intRow

    Set objEdgeMDI = Sys.Process("EdgeClient")
    If objEdgeMDI.Exists then
      strTemp="WPFObject(""TextBlock"", ""Layout"", 1)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
      If objTemp.Exists = False then
        strTemp="WPFObject(""ContentControl"", ""Source Workspace"", 1)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        If objTemp.Exists = True then
          objTemp.Click
        End If
        Call sEdgeProcessor
        log.Message "Opening Source Workspace.."
      Else
        log.Message "Source Workspace is opened"
      End If
  
      ''Selecting Records
      strTemp="WPFObject(""PendingChangeGridControl"")"
      Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      intRowcnt=GridControl.VisibleRowCount
     ' For intI=0 to intRowcnt-1
        Set objCell = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1)
        objCell.Click   
        'strWorkspaceNameActual = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText
        strTemp="WPFObject(""ContentControlEx"", ""Drop"", 2)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        If objTemp.Exists = True then
          objTemp.Click
        End If
        strTemp="WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Please Confirm."")"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        If objTemp.Exists = True then
          objTemp.Click
          Sys.Keys("Y")
          Call sEdgeProcessor
        End If 
   '   Next
      Call sCloseSource()
    Else
      log.Message "RibbonWindow not found"
    End If
    
    If Err.Number > 0 Then
    Log.Warning("Error in 'SourceWorkSpacevwr()' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'******************************************************************************************************************************************************************************

Sub sEdgeProcessor()

On Error Resume Next

  Dim objEdgeWait,strTemp,objTemp
  
  strTemp="WPFObject(""LoadingWaitControl"", """", 1)"
  Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50)
  Do until objTemp.Exists = False 
    If objTemp.Focusable=False then
      Delay 1000,"Pls Wait... Form is loading..." 
    End if 
  Loop  
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sEdgeProcessor()' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If  
End Sub

'******************************************************************************************************************************************************************************************
Sub sHome_Layout()

On Error Resume Next
   

    Dim objEdgeMDI,strObject,strObj,objsrc,strTemp

    strObject = "WPFObject(""HwndSource: Shell"", """& strEnvi &""")"
    Set objEdgeMDI = Sys.Process("EdgeClient").WaitChild(strObject, 600000)
    If objEdgeMDI.Exists then
      strTemp="WPFObject(""TextBlock"", ""Layout"", 1)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objTemp.Exists = False then
        call sCloseSource()
        strTemp="WPFObject(""ContentControl"", ""Layout"", 1)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        If objTemp.Exists = True then
          objTemp.Click
        End If
        Call sEdgeProcessor
        log.Message "Opened Layout"
      Else
        log.Message "Layout is opened"
      End If

    Else
      log.Message "RibbonWindow not found"
      strTestCaseResult = "FAIL"
      Exit Sub
    End If

    If Err.Number <> 0 then
      Log.Message Err.Description 
    End If

    Set ObjSys=Nothing
    Set objsrc=Nothing
    
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sHome_Layout()'  , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
    
End Sub

'*****************************************************************************************************************************************************

Sub sLayoutModule(strParameters)
'Sub sLayoutModule

On Error Resume Next 
    Dim strLevel1layout,strLevel2layout,strLevel3layout,strWrkSpaceName
    Dim objNewWrkSpace_okbtn,objNewWrkSpace_Name
    Dim objNewWrkSpace_Txtbox,objopenforEdit,objWrkspace_popup
    Dim strTemp,objTemp,intRow,barManager,intTotNodeCnt,Text,objCellText,intl,intK,strDesc1,strDesc2
    Dim objWrkSpace,objwrkspacepop,objwrkspcUpload,objConfirm,objGridCell,DescLocalText,intSeriesID

    strLevel1layout=getSplitValue(strParameters,"LEVEL1LAYOUT")
    strLevel2layout=getSplitValue(strParameters,"LEVEL2LAYOUT")
    strLevel3layout=getSplitValue(strParameters,"LEVEL3LAYOUT")
     intSeriesID=getSplitValue(strParameters,"SERIESID")
    
'    strLevel1layout="dX Non-Asia Database (Current Eng Version)"
'    strLevel2layout="Z-Testing Topic(IT-use only)"
'    strLevel3layout="Sandbox (Benny)"
'    intSeriesID="369145097"

    strDesc1=aqDateTime.Now
    strDesc2=aqDateTime.Now
    DescText=Replace(strDesc1,"/","-")
    DescText=Replace(DescText,":","_")
    DescLocalText=DescText
    strWrkSpaceName=DescText
   
    'For PRT testcase    
    if intSeriesID=0 then
      intSeriesID=strSeriesID
    End if 

    Delay 1000,"Please Wait..."

    ''Setting grid Objects
    strTemp="WPFObject(""LayoutTreeListView"")"
    Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    strTemp="WPFObject(""LayoutTreeControl"")"
    Set GridSourceTree=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    
    Delay 1000,"Please Wait..."
    ''Selecting Level1 layout
    intTotNodeCnt=GridControl.Nodes_2.Count
    For intI=0 to intTotNodeCnt-1         
        If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strLevel1layout) then
          GridControl.Nodes_2.Item(intI).ExpandAll
          log.Message "Level 1 Layout - " & GridControl.Nodes_2.Item(intI).Content.Description       
          blnFlag=False  
          Exit For
        End If
    Next
    Delay 3000,"Please Wait..."
    If blnFlag = True then
      strTCRemarks="Level 1 Layout not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If
  
    Delay 1000,"Please Wait..."
    blnFlag = True 
    ''Selecting Level2 Layout
    intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
    For intJ=0 to intTotNodeCnt-1
      If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2layout) then
        GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
        log.Message "Level2 layout Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
        blnFlag = False 
        Exit For
      End If
    Next
    If blnFlag = True then
      strTCRemarks="Level2 Source Name not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If

    Delay 5000,"Please Wait..."
    blnFlag = True    
    ''Selecting Level3 Layout
      intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
      For intK=0 to intTotNodeCnt-1
        If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel3layout) then
          GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).ExpandAll
          intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
          
            Call GridControl.ClearSelectionCore
            Call GridControl.FocusViewAndRow(GridControl,intRow)
            GridControl.SetFocusOnCurrentItem
            Call GridControl.SelectRowCore(intRow)
         
          log.Message "Level3 layout Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description
          blnFlag = False
          Exit For   
        End If 
      Next
      If blnFlag = True then
        strTCRemarks="Level3 Source Name not found"
        strTestCaseResult="FAIL"
        Exit Sub
      End If
      strTemp="WPFObject(""ContentControlEx"", ""New Workspace"", 2)"
      Set objNewWorkspace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objNewWorkspace.Exists = True then
      objNewWorkspace.Click
      If objNewWorkspace.Exists = True then
        strTemp="WPFObject(""ContentControlEx"", ""Open For Edit"", 2)"
        Set objopenforEdit=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        If objopenforEdit.Exists then
          objopenforEdit.Click    
        End If
      End If
      
      strTemp1="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
      Set objNewWrkSpaceName=Sys.Process("EdgeClient").WaitChild(strTemp1,80000)
      If objNewWrkSpaceName.Exists = True then

          Set objNewWrkSpace_Name=Sys.Process("EdgeClient").WPFObject("HwndSource: WorkspaceNamePrompt", "Please provide a new Workspace Name")'.WPFObject("WorkspaceNamePrompt", "Please provide a new Workspace Name", 1).WPFObject("Grid", "", 1).WaitChild(strTemp,1500000)
          If objNewWrkSpace_Name.Exists = True then
            strTemp="WPFObject(""ChangeNameTextEdit"")"
            ''Entering Workspace Name
            Set objNewWrkSpace_Txtbox=objNewWrkSpace_Name.FindChild("Name",strTemp,9,True)
              If objNewWrkSpace_Txtbox.Exists = True then
                objNewWrkSpace_Txtbox.Click
                objNewWrkSpace_Txtbox.Text=strWrkSpaceName
                ''Clicking on Ok Button 
                strTemp="WPFObject(""OkButton"")"
                Set objNewWrkSpace_okbtn=objNewWrkSpace_Name.FindChild("Name",strTemp,9,True)
                If objNewWrkSpace_okbtn.Exists = True then
                  objNewWrkSpace_okbtn.Click
                End If
               End If
          End If
      End if 
    End If

    Delay 2000, "Please Wait Form is loading...."
    
    
    ''WorkSpace Edit Window
    strTemp="WPFObject(""LayoutPanel"", """", 2)"
    Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WaitChild(strTemp,15000)
    If objTemp.Exists then
        Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("LayoutTreeListControl").WPFObject("LayoutTreeListView")
        Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("LayoutTreeListControl")
        ''Selecting Level1 layout
        intTotNodeCnt=GridControl.Nodes_2.Count
        For intI=0 to intTotNodeCnt-1         
            If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strLevel1layout) then
              GridControl.Nodes_2.Item(intI).ExpandAll
              log.Message "Level 1 Layout - " & GridControl.Nodes_2.Item(intI).Content.Description       
              blnFlag=False  
              Exit For
            End If
        Next
  
        blnFlag = True 
        ''Selecting Level2 Layout
        intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
        For intJ=0 to intTotNodeCnt-1
          If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2layout) then
            GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
            log.Message "Level2 layout Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
            blnFlag = False 
            Exit For
          End If
        Next
   
        ''Selecting Level3 Layout
          intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
          For intK=0 to intTotNodeCnt-1
            If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel3layout) then
              GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).ExpandAll
              intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
              GridControl.Keys "^[Home]"
              intRow=intRow+1
              
             Set objGridCell=GridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 3).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 2).WPFObject("InplaceBaseEdit", "", 1)
              If objGridCell.Exists = True then
                objGridCell.Click
              End If
              log.Message "Level3 layout Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description
              blnFlag = False
              Exit For   
            End If 
          Next
         
    
        ''Clicking on New Folder
        strTemp="WPFObject(""ContentControlEx"", ""Add Folder"", 2)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        If objTemp.Exists = True then    
          objTemp.Click  
          Call sEdgeProcessor
          Delay 1000,"New Folder..."
        End If
    
        ''Getting no. of Rows under level 3
        intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(0).Nodes.Count
        intl=intTotNodeCnt-1
        
        Set objCellText=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Nodes.Item(intL)
          Call objCellText.Content.set_Description(DescText)    
          Call objCellText.Content.set_DescriptionLocal(DescLocalText)
          Call objCellText.Content.set_DisabledFlag(True)
      
        
        ''Attach Series
        strTemp="WPFObject(""ContentControlEx"", ""Attach Series"", 2)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        If objTemp.Exists = True then
          objTemp.DblClick
          ''Entering Series      
          Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: LayoutSeriesPrompt", "Attach Layout Series").WPFObject("LayoutSeriesPrompt", "Attach Layout Series", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("StackPanel", "", 1).WPFObject("SeriesIdTextEdit")
          If objTemp.Exists = True then 
            If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_PRT_05"))Then
               objTemp.Text=strSeriesID
            Else
               objTemp.Text=intSeriesID
            End If

           
            Delay 1000
             Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: LayoutSeriesPrompt", "Attach Layout Series").WPFObject("LayoutSeriesPrompt", "Attach Layout Series", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("OkButton")
             If objTemp.Exists = True then
                objTemp.Click
             End If
          End If            
        End If
        Delay 2000, "Please Wait.."
        Call sEdgeProcessor()
         Delay 2000, "Please Wait.."
      Set objTemp =  Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("LayoutTreeListControl").WPFObject("LayoutTreeListView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 8).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 3).WPFObject("PART_Editor") 
       If objTemp.Exists Then 
          objTemp.clickButton(cbUnchecked)
          objTemp.clickButton(cbchecked)
        End If
    
      Call CloseWindow()
      Call sEdgeProcessor()
      Delay 500 , "Please Wait..."

    ''Uploading WorkSpace
    strTemp="WPFObject(""ContentControlEx"", ""Workspace"", 2)"
    Set objWrkSpace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    If objWrkSpace.Exists = True then
      objWrkSpace.Click
      If objWrkSpace.Exists = True then
        strTemp="WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"
        set objwrkspcUpload=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        If objwrkspcUpload.Exists = True then
          objwrkspcUpload.Click
          Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: WindowContentHolder", "Confirm")'.WPFObject("WindowContentHolder", "Confirm", 1).WPFObject("NonLogicalDecorator", "", 1).WPFObject("ThemedManagedContentPresenter", "", 1).WPFObject("Grid", "", 1).WPFObject("FloatingContainerBorder").WPFObject("FloatingContainerBackground").WPFObject("Grid", "", 1).WPFObject("FloatingContainerBody").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WaitChild(strTemp,100000)
         
            If objConfirm.Exists = True then
              Sys.Keys "[Enter]"
              Delay 2000,"Uploading..."
              
            Set objConfirm = Sys.Process("EdgeClient")._
            Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Upload Workspace"")",600000)
'           
            If objConfirm.Exists = True then
              Sys.Keys("O")
              Call sEdgeProcessor  
              Call sHome_Layout    
              Call sEdgeProcessor()
              Delay 1000,"Pls Wait.."          
       
            strTemp="WPFObject(""LayoutTreeListView"")"
            Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
            strTemp="WPFObject(""LayoutTreeControl"")"
            Set GridSourceTree=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)            
            ''Selecting Level1 layout
        intTotNodeCnt=GridControl.Nodes_2.Count
        For intI=0 to intTotNodeCnt-1         
            If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strLevel1layout) then
              GridControl.Nodes_2.Item(intI).ExpandAll
              intRow=GridControl.Nodes_2.Item(intI).get_RowHandle
              objGridControl.Keys "^[Home]"
              Call GridControl.ClearSelectionCore
              Call GridControl.FocusViewAndRow(GridControl,intRow)
              GridControl.SetFocusOnCurrentItem
              Call GridControl.SelectRowCore(intRow) 
              log.Message "Level 1 Layout - " & GridControl.Nodes_2.Item(intI).Content.Description       
              blnFlag=False  
              Exit For
            End If
        Next
        If blnFlag = True then
          strTCRemarks="Level 1 Layout not found"
          strTestCaseResult="FAIL"
          Exit Sub
        End If
  
        blnFlag = True 
        ''Selecting Level2 Layout
        intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
        For intJ=0 to intTotNodeCnt-1
          If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2layout) then
            GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
            intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
            objGridControl.Keys "^[Home]"
              Call GridControl.ClearSelectionCore
              Call GridControl.FocusViewAndRow(GridControl,intRow)
              GridControl.SetFocusOnCurrentItem
              Call GridControl.SelectRowCore(intRow) 
            log.Message "Level2 layout Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
            blnFlag = False 
            Exit For
          End If
        Next
        If blnFlag = True then
          strTCRemarks="Level2 Source Name not found"
          strTestCaseResult="FAIL"
          Exit Sub
        End If

        blnFlag = True    
        ''Selecting Level3 Layout
          intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
          For intK=0 to intTotNodeCnt-1
            If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel3layout) then
              GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).ExpandAll
              intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
              objGridControl.Keys "^[Home]"
              Call GridControl.ClearSelectionCore
              Call GridControl.FocusViewAndRow(GridControl,intRow)
              GridControl.SetFocusOnCurrentItem
              Call GridControl.SelectRowCore(intRow)         
              log.Message "Level3 layout Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description
              blnFlag = False
              Exit For   
            End If 
          Next
          If blnFlag = True then
            strTCRemarks="Level3 Source Name not found"
            strTestCaseResult="FAIL"
            Exit Sub
          End If
          
  
          ''Clicking on "New Workspace" Button and selecting "Open for Edit(Souce)" option   
          strTemp="WPFObject(""ContentControlEx"", ""New Workspace"", 2)"
          Set objNewWorkspace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
          If objNewWorkspace.Exists = True then
          objNewWorkspace.Click
           If objNewWorkspace.Exists = True then
            strTemp="WPFObject(""ContentControlEx"", ""Open For Edit"", 2)"
            Set objopenforEdit=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
            If objopenforEdit.Exists then
              objopenforEdit.Click    
            End If
          End If
   
          strTemp1="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
          Set objNewWrkSpaceName=Sys.Process("EdgeClient").WaitChild(strTemp1,80000)
          If objNewWrkSpaceName.Exists = True then
          
              ''Waiting for Workspace Name prompt
              strTemp="WPFObject(""FloatingContainerBorder"")"
              Set objNewWrkSpace_Name=Sys.Process("EdgeClient").WPFObject("HwndSource: WorkspaceNamePrompt", "Please provide a new Workspace Name")'.WPFObject("WorkspaceNamePrompt", "Please provide a new Workspace Name", 1).WPFObject("Grid", "", 1).WaitChild(strTemp,1900000)
              If objNewWrkSpace_Name.Exists = True then
                strTemp="WPFObject(""ChangeNameTextEdit"")"
                ''Entering Workspace Name
                Set objNewWrkSpace_Txtbox=objNewWrkSpace_Name.FindChild("Name",strTemp,9,True)
                  If objNewWrkSpace_Txtbox.Exists = True then
                    objNewWrkSpace_Txtbox.Click
                    objNewWrkSpace_Txtbox.Text=strWrkSpaceName
                    ''Clicking on Ok Button 
                    strTemp="WPFObject(""OkButton"")"
                    Set objNewWrkSpace_okbtn=objNewWrkSpace_Name.FindChild("Name",strTemp,9,True)
                    If objNewWrkSpace_okbtn.Exists = True then
                      objNewWrkSpace_okbtn.Click
                       Call sEdgeProcessor
                    End If
                   End If
              End If
          End if 
        End If

        ''WorkSpace Edit Window
        strTemp="WPFObject(""LayoutPanel"", """", 2)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        If objTemp.Exists then
            Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("LayoutTreeListControl").WPFObject("LayoutTreeListView")
            Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("LayoutTreeListControl")
            ''Selecting Level1 layout
            intTotNodeCnt=GridControl.Nodes_2.Count
            For intI=0 to intTotNodeCnt-1         
                If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strLevel1layout) then
                  GridControl.Nodes_2.Item(intI).ExpandAll
                  log.Message "Level 1 Layout - " & GridControl.Nodes_2.Item(intI).Content.Description       
                  blnFlag=False  
                  Exit For
                End If
            Next
  
            blnFlag = True 
            ''Selecting Level2 Layout
            intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
            For intJ=0 to intTotNodeCnt-1
              If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2layout) then
                GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
                log.Message "Level2 layout Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
                blnFlag = False 
                Exit For
              End If
            Next
   
            ''Selecting Level3 Layout
              intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
              For intK=0 to intTotNodeCnt-1
                If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel3layout) then
                  GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).ExpandAll
                  intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
                  log.Message "Level3 layout Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description
                  blnFlag = False
                  Exit For   
                End If 
              Next
          
              ''Selecting Level4 Layout
              intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Nodes.Count
              For intl=0 to intTotNodeCnt-1
                If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Nodes.Item(intl).Content.Description)=UCase(DescText) then
                  intRow =GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Nodes.Item(intl).get_RowHandle
                  GridControl.Keys "^[Home]"
                  GridControl.set_FocusedRowHandle(intRow)
                  'Checking for series Id
                      Dim objLayoutSeriesTable,objRowControl
                      strTemp = "WPFObject(""LayoutSeriesTableView"")"
                      objLayoutSeriesTable = Sys.Process("EdgeClient").FindChild("Name",strTemp,30,True)
                      If objLayoutSeriesTable.exists = True Then
                        strTemp="WPFObject(""RowControl"", """", 1)"
                        objRowControl = objLayoutSeriesTable.FindChild("Name",strTemp,10,True)
                        If objRowControl.DataContext.Row.SeriesId = intSeriesID Then
                          strTCRemarks="Upload successful" & "<br />" & "Level4 Layout Created - " & DescText & "<br />" & "Attach Series - " & intSeriesID
                        Else
                          strTCRemarks="Series not matching"                          
                        End If
                      Else
                        strTCRemarks="LayoutSeriesTable does not exist"
                      End If
                  log.Message "Third Level- " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Nodes.Item(intl).Content.Description
                  blnFlag = False
                  Exit For   
                End If 
              Next              
          End If
          End If
          End If
          End If
          End If
          End If
          End If
       
        Call CloseWindow()
        Delay 1000,"Closing Layout..." 
        Call CloseWindow()
        Delay 1000,"Closing Layout..." 
        Call sLayoutWorkSpacevwr 
  If Err.Number > 0 Then
    Log.Warning("Error in 'sLayoutModule' ,Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'********************************************************************************************************************************************************************************
Sub sLayoutWorkSpacevwr()
On Error Resume Next

    Dim strObject,objEdgeMDI,strTemp,objTemp,GridControl,intRowcnt,intI,intRow
    'strEnvi = "Edge ( Development Test )"  

    strObject = "WPFObject(""HwndSource: RibbonWindow"")"
    Set objEdgeMDI = Sys.Process("EdgeClient")'.WaitChild(strObject, 600000)
    If objEdgeMDI.Exists then
      strTemp="WPFObject(""TextBlock"", ""Layout"", 1)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        If objTemp.Exists = False then
        strTemp="WPFObject(""ContentControl"", ""Layout Workspace"", 1)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
         If objTemp.Exists = True then
          objTemp.Click
        End If
         Call sEdgeProcessor
        log.Message "Opening Layout Workspace.."
        'strTCRemarks="Opening Layout Workspace.."
      Else
        log.Message "Layout Workspace is opened" 
      End If
  
      ''Selecting Records
      strTemp="WPFObject(""PendingChangeGridControl"")"
      Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      

      intRowcnt=GridControl.VisibleRowCount
      For intI=0 to intRowcnt-1
         Set objCell = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intI+1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1)
         objCell.Click  
        strTemp="WPFObject(""ContentControlEx"", ""Drop"", 2)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        If objTemp.Exists = True then
          objTemp.Click
        End If
        strTemp="WPFObject(""PART_ContainerContent"")"
        Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.")'.WPFObject("CustomMessageBoxWindow", "Please Confirm.", 1).FindChild("Name",strTemp,50,True)
        If objTemp.Exists = True then
          Sys.Keys "Y"
           Call sEdgeProcessor
        End If
        Call CloseWindow()
        Next
    Else
      log.Message "RibbonWindow not found"
    End If

End Sub
'**************************************************************************************************************************************************************************************

Sub sSourceSchedule_Checklist(strParameters)
'Sub sSourceSchedule_Checklist()

  On Error Resume Next

    Dim intRow,strTemp,objTemp,Grid,intI,strTimepoint
    Dim objEdge,objCaption,i,objText,j,strWrkSpaceName,strDesc1,strDesc2

    strSource_Name=getSplitValue(strParameters,"SOURCE")
    strLevel2src_Name=getSplitValue(strParameters,"LEVEL2SOURCE")
    strLevel3src_Name=getSplitValue(strParameters,"LEVEL3SOURCE")
    strSeriesID = getSplitValue(strParameters,"SeriesID")
    strScheduleStatus = getSplitValue(strParameters,"ScheduleStatus")
 
    
'        strSource_Name="Test"
'        strLevel2src_Name="Automation"
'        strLevel3src_Name="Test Source 1"
'        strSeriesID = "368765647"
'       strScheduleStatus=  "Pending"

    strDesc1=aqDateTime.Now
    strDesc2=aqDateTime.Now
    strWrkSpaceName=Replace(strDesc1,"/","-")
    strWrkSpaceName=Replace(strWrkSpaceName,":","_")
    
    ''Setting grid Objects
    
    strTemp="WPFObject(""SourceTreeListView"")"    
    Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    strTemp="WPFObject(""SourceTreeControl"")"
    Set GridSourceTree=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    
    Delay 3000,"Pls Wait.."
    ''Selecting Country Name
    intTotNodeCnt=GridControl.Nodes_2.Count
    For intI=0 to intTotNodeCnt-1         
        If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
          GridControl.Nodes_2.Item(intI).ExpandAll
          log.Message "Country Name - " & GridControl.Nodes_2.Item(intI).Content.Description       
            blnFlag=False  
          Exit For
        End If
    Next
    If blnFlag = True then
      strTCRemarks="Country Name not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If
  
    Delay 3000,"Pls Wait.."
    blnFlag = True 
    ''Selecting Level2Source_Name
    intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
    For intJ=0 to intTotNodeCnt-1
      strTemp=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description
      If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then
        GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
        intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
        Call GridControl.ClearSelectionCore
        Call GridControl.FocusViewAndRow(GridControl,intRow)
        GridControl.SetFocusOnCurrentItem
        Call GridControl.SelectRowCore(intRow)
        log.Message "Level2 Source Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
        blnFlag = False 
        Exit For
      End If
    Next
    If blnFlag = True then
      log.Message "Level2 Source Name not found"
      strTCRemarks="Level2 Source Name not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If
    Delay 3000,"Pls Wait.."
    strTemp= "WPFObject(""ContentControlEx"", ""New Workspace"", 2)" 
     Set objNewWorkspace = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    If objNewWorkspace.Exists = True then
      objNewWorkspace.Click
      strTemp="WPFObject(""PopupMenuBarControl"", """", 1)"
      Set objWrkspace_popup=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objWrkspace_popup.Exists = True then
        strTemp="WPFObject(""ContentControlEx"", ""Open For Edit (Source Schedule)"", 2)"
        Set objopenforEdit=objWrkspace_popup.FindChild("Name",strTemp,50,True)
        If objopenforEdit.Exists then
          objopenforEdit.Click    
           strTemp="WPFObject(""FloatingContainerBorder"")"          
           Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: WaitProgressWindow", "Please Wait...").WPFObject("WaitProgressWindow", "Please Wait...", 1).WPFObject("Grid", "", 1).WaitChild(strTemp,5000)
            Do until objTemp.Exists = False 
              If objTemp.Focusable=False then
                Delay 2000,"Pls Wait.."
              End if 
            Loop   
        End If
    End If
    End If
    

    ''Waiting for FloatingContainerBorder
     strTemp="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
      Set objNewWrkSpace_Name=Sys.Process("EdgeClient").WaitChild(strTemp,50000)
      If objNewWrkSpace_Name.Exists = True then
        strTemp="WPFObject(""ChangeNameTextEdit"")"
        ''Entering Workspace Name
        Set objNewWrkSpace_Txtbox=objNewWrkSpace_Name.FindChild("Name",strTemp,50,True)
          If objNewWrkSpace_Txtbox.Exists = True then
            objNewWrkSpace_Txtbox.Click
            objNewWrkSpace_Txtbox.Text=strWrkSpaceName
             strTemp="WPFObject(""OkButton"")"
            Set objNewWrkSpace_okbtn=objNewWrkSpace_Name.FindChild("Name",strTemp,50,True)
            If objNewWrkSpace_okbtn.Exists = True then
              objNewWrkSpace_okbtn.Click
              Call sEdgeProcessor()
              Delay 3000,"Please wait..."          
            End If
          End If
      End If

    
    ''Source Series Schedule (For Edit)
    strTemp ="WPFObject(""SourceTreeView"")"
    Set GridControl =Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceTreeListView").FindChild("Name",strTemp,10,True)
    strTemp = "WPFObject(""SourceTreeListView"")"
    Set GridSourceTree =Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).FindChild("Name",strTemp,10,True)

    strTemp="WPFObject(""ContentControlEx"", ""Expand All"", 2)"
    Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).FindChild("Name", strTemp,50,True)
    If objTemp.Exists = True then
     strTemp="WPFObject(""ContentControlEx"", ""Expand All"", 2)"
     strTemp ="WPFObject(""BarButtonItemLinkControl"", """", 1)"
     Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 1).FindChild("Name",strTemp,10,True)
      If objTemp.Exists = True then
        objTemp.Click
      End If
      Call sEdgeProcessor
      strTemp="WPFObject(""SourceTreeView"")"
      Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,True)
     ''Selecting Country Name
      intTotNodeCnt=objGridControl.Nodes_2.Count
      For intI=0 to intTotNodeCnt-1         
        If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
           GridControl.Nodes_2.Item(intI).ExpandAll
          log.Message "Country Name - " & GridControl.Nodes_2.Item(intI).Content.Description       
           blnFlag=False  
          Exit For
          End If
      Next
    End If
    
    If blnFlag = True then
      strTCRemarks="Country Name not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If
  
    blnFlag = True 
    ''Selecting Level2Source_Name
    intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
    For intJ=0 to intTotNodeCnt-1
      If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then
        GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Expand(True)
        log.Message "Level2 Source Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
        blnFlag = False 
        Exit For
      End If
    Next
    
    ''Selecting Level3Source_Name
      intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
      For intK=0 to intTotNodeCnt-1
        If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel3src_Name) then
          GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Expand(True)
          intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
          Call GridControl.ClearSelectionCore
          Call GridControl.FocusViewAndRow(GridControl,intRow)
          GridControl.SetFocusOnCurrentItem
          Call GridControl.SelectRowCore(intRow)
          Call sEdgeProcessor
          log.Message "Third Level- " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description
          blnFlag = False
          Exit For   
        End If 
      Next
      Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("GridSplitter", "", 1)
      Call objTemp.Drag(4, 19, -167, 14)
    
    strTemp="WPFObject(""ComboBoxEdit"", """", 1)"
    Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("Grid", "", 2).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 7).WPFObject("BarEditItemLinkControl", "", 1).WPFObject("ContentControlEx", "", 1).WPFObject("ComboBoxEdit", "", 1)
    If objTemp.Exists = True then      
       Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("Grid", "", 2).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 7).WPFObject("BarEditItemLinkControl", "", 1).WPFObject("ContentControlEx", "", 1).WPFObject("ComboBoxEdit", "", 1).Click
        strTemp ="WPFObject(""ComboBoxEditItem"", """", 2)"
        Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("PopupBorderControl", "", 1).WPFObject("PopupContentContainer", "", 1).WPFObject("NonLogicalDecorator", "", 1).WPFObject("PopupContentControl", "", 1).FindChild("Name",strTemp,10,True)
        If objTemp.Exists = True then
          objTemp.Click
        End If       
    End If    
    ''Clicking on Add Button
     Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("Grid", "", 1).WPFObject("SourceSeriesGridControl").WPFObject("TableView", "", 1).WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 2).WPFObject("InplaceBaseEdit", "", 1)
      Call objTemp.Click
      strTemp="WPFObject(""ContentControlEx"", ""Add"", 2)"
      Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objTemp.Exists = True then
       objTemp.Click
       Delay 2000,"Add.."
      End If
      
        Call SClosesource


  'Enter Estimates Start Time and End Time  
   strTemp = "WPFObject(""SourceSeriesScheduleGridControl"")" 
   Set objGrid  = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
   Set objRow = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("Grid", "", 2).WPFObject("Grid", "", 1).WPFObject("SourceSeriesScheduleGridControl").WPFObject("SourceSeriesScheduleTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", objGrid.VisibleRowCount).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 3).WPFObject("InplaceBaseEdit", "", 1) 
   if objRow.DisplayText = "" then
      objRow.Click
      Sys.Keys (Date)
      sys.Keys "[Tab]"  
    End if  
    
    ''Upload in Prod
    strTemp="WPFObject(""ContentControlEx"", ""Upload"", 2)"
    Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    If objTemp.Exists = True then
            objTemp.Click
          strTemp="WPFObject(""DXMessageBox"", """", 1)"
          Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: WindowContentHolder", "").WPFObject("WindowContentHolder", "", 1).WPFObject("NonLogicalDecorator", "", 1).WPFObject("ThemedManagedContentPresenter", "", 1).WPFObject("Grid", "", 1).WPFObject("FloatingContainerBorder").WPFObject("FloatingContainerBackground").WPFObject("Grid", "", 1).WPFObject("FloatingContainerBody").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WaitChild(strTemp,120000)
          If objTemp.Exists = True then
            Sys.Keys "Y"            
            Delay 3000,"Uploading.."           
            strTemp="WPFObject(""PART_ContainerContent"")"
            Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Upload Workspace").WPFObject("CustomMessageBoxWindow", "Upload Workspace", 1).WPFObject("Grid", "", 1).WPFObject("FloatingContainerBorder").WPFObject("FloatingContainerBackground").WPFObject("Grid", "", 1).WPFObject("FloatingContainerBody").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WaitChild(strTemp,180000)
            If objTemp.Exists = True then
              Sys.Keys "[Enter]"
              Call sEdgeProcessor
            End If
          End If    
    
  Else  
           
      strTemp = "WPFObject(""ContentControlEx"", ""Workspace"", 2)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objTemp.Exists = True then
        objTemp.Click
        strTemp="WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        If objTemp.Exists = True then
            objTemp.Click
            Set objTemp= Sys.Process("EdgeClient").WPFObject("HwndSource: WindowContentHolder", "Confirm").WPFObject("WindowContentHolder", "Confirm", 1).WPFObject("NonLogicalDecorator", "", 1).WPFObject("ThemedManagedContentPresenter", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ActiveBorder")
            If objTemp.Exists = True then
              Sys.Keys "[Enter]"
              Delay 3000,"Uploading.."
              strTemp= "WPFObject(""PART_InactiveBorder"")"
              Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Upload Workspace").WPFObject("CustomMessageBoxWindow", "Upload Workspace", 1).WPFObject("Grid", "", 1).FindChild("Name",strTemp,10,True)
              If objTemp.Exists = True then         
                Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Upload Workspace").WPFObject("CustomMessageBoxWindow", "Upload Workspace", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).WPFObject("Button_OK").Click
                Call sEdgeProcessor              
                strTCRemarks="Source schedule uploaded successfully"
                log.Message "Upload button found"
              End If
            Else
             log.Message "Upload button not found"
             strTCRemarks="Upload button not found"
             strTestCaseResult="FAIL"
            End If
        End If
     End If 
  End If
  
  Call DelayWait(strParameters) 
 
  'Select the CheckList Window()
  Call sOpenCheckList()
  Call sEdgeProcessor()
  Delay 3000,"Pls Wait.."
  
  'Select the Country , Date and Frequency
  Call sSelectData("Test") 

   'Expand CheckList and Verify Pending Souce Schedule
   Call sExpandCheckList(strParameters)
   'close the CheckList
   Call sCloseChecList()
   
End Sub

'**************************************************************************************************************************************************************************************

Sub DelayWait(strParameters)

On Error Resume Next

  Dim time1
 
  time1=getSplitValue(strParameters,"Interval")
  if time1 = "" then 
    time1 =300
  End If

  Delay time1*1000,"Pls wait for "&time1&" seconds"
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'DelayWait'  , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
  
End Sub

'*********************************************************************************************************************************************************************************************

Sub sAutoHideGroupName()
On Error Resume Next 

Dim objEdge,objCaption,i,objText,j

 StrControlName = "Check List"

  Set objEdge =Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager")
  objText = objEdge.FindAllChildren("ClrClassName","AutoHideGroup", 10,True)
        For i=0 to ubound(objText)
          log.Message objText(i).FullName
          log.Message objText(i).Name
          objCaption = objText(i).FindAllChildren("ClrClassName", "AutoHidePaneHeaderItem",10,True)
          For j=0 to ubound(objCaption)
            log.Message objCaption(j).FullName
            log.Message objCaption(j).Name
            if objCaption(j).Content.Caption = StrControlName then 
                  log.Message objCaption(j).FullName
                  objCaption(j).Click
                  Exit For 
              End if 
          Next
        Next  
     
  If Err.Number > 0 Then
    Log.Warning("Error in 'sAutoHideGroupName() ,Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
  End If   
End Sub 

'*****************************************************************************************************************************************************************

Sub sExpandCheckList(strParameters)
'Sub sExpandCheckList()
  On Error Resume Next
  Dim strTemp , objTemp, objGrid   
  
  strLevel2src_Name=getSplitValue(strParameters,"LEVEL2SOURCE")
  strLevel3src_Name=getSplitValue(strParameters,"LEVEL3SOURCE")
  strSeriesID = getSplitValue(strParameters,"SeriesID")
  strScheduleStatus = getSplitValue(strParameters,"ScheduleStatus")
'''  
'        strSource_Name="Test"
'        strLevel2src_Name="Automation_UIT4_1"
'        strLevel3src_Name="Source_Schedule"
'        strSeriesID ="368765647"
'        strScheduleStatus="Delayed"

  
  strTemp = "WPFObject(""CheckListGridControl"")"
  Set objGrid  = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  
  strTemp = "WPFObject(""HierarchyPanel"", "", 1)"
  Set objTemp  = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  intchildcnt=objTemp.Children.Count
  
  For I = 0 to intchildcnt-1
    strValue=objTemp.Children.Item(I).DataContext.GroupValue.Value
    If strValue=strLevel2src_Name then     
      intRowHandle1=objTemp.Children.Item(I).DataContext.GroupValue.Data.RowHandle.Value      
      Call objGrid.ExpandGroupRow(intRowHandle1)    
      Call sEdgeProcessor()
      Delay 2000      
      For J= 0 to intchildcnt-1
        strValue = objTemp.Children.Item(J).DataContext.GroupValue.Value
        if strValue=strLevel3src_Name then 
          intRowHandle1=objTemp.Children.Item(J).DataContext.GroupValue.Data.RowHandle.Value
          Call objGrid.ExpandGroupRow(intRowHandle1)
           Exit For    
        End If           
      Next
      Call sEdgeProcessor()
      Delay 2000
      log.Message "Expanding"
      blnFlag= False
      
      'Verify SeriesID:
       objRowControl = objTemp.FindAllChildren("ClrClassName","RowControl",10,true)
        SeriesID = ""
        ScheduleStatus=""
        For K = 0 to ubound(objRowControl)
          delay 200
          SeriesID = objRowControl(K).DataContext.Row.SeriesId
          ScheduleStatus = objRowControl(K).DataContext.Row.ScheduleStatus
          If trim(cstr(strSeriesID)) = trim(cstr(SeriesID))And  trim(cstr(strScheduleStatus)) = trim(cstr(ScheduleStatus)) then
              log.Message( cstr(strScheduleStatus) &" :  " &cstr(objRowControl(K).DataContext.Row.ScheduleStatus))
              strTCRemarks="Source schedule uploaded successfully" & "<br />" & "Pending schedule found for series in Checklist" & "<br />"  & "Top source Description: " & strLevel2src_Name 
              strTestCaseResult = "PASS"  
              blnFlag=True
              Exit For
          End If
        Next
        Exit For      
    End If 
  Next
  
  If blnFlag= False Then 
    
    strTCRemarks="Source schedule is not  uploaded successfully" & "<br />" & "Pending schedule not found for series in Checklist" & "<br />"  & "Top source Description: " & strLevel2src_Name 
    Log.Message "Pending schedule not found for series in Checklist"
    strTestCaseResult = "FAIL"  
  End IF
End Sub 

'********************************************************************************************************************************************************************************************************************

Sub sHome_ReleaseSchedule()

On Error Resume Next

Dim objEdgeMDI,strObject,strObj,objsrc,strTemp


strObject = "WPFObject(""HwndSource: RibbonWindow"")"
Set objEdgeMDI = Sys.Process("EdgeClient")'.WaitChild(strObject, 600000)
If objEdgeMDI.Exists then
  strTemp="WPFObject(""TextBlock"", ""Release Schedule"", 1)"
  Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  If objTemp.Exists = False then
    strTemp="WPFObject(""ContentControl"", ""Release"", 1)"
    Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    If objTemp.Enabled = True then
      If objTemp.Exists = True then
        objTemp.Click
      End if 
    Else
      log.Message "Release Schedule is Disabled"
      strTCRemarks="Release Schedule is Disabled"
      Exit Sub 
    End If
    Call sEdgeProcessor
    Delay 1000,"Opening Release Schedule.."
    log.Message "Opened Release Schedule"
    strTCRemarks="Opened Release Schedule"
  Else
    log.Message "Release Schedule is opened"
    strTCRemarks="Release Schedule is opened"
    strTestCaseResult = "ABORT"
    Exit Sub 
  End If
Else
  log.Message "RibbonWindow not found"
  strTCRemarks="Release Schedule not found"
  Exit Sub
End If  

Set ObjSys=Nothing
Set objsrc=Nothing

  If Err.Number > 0 Then
    Log.Warning("Error in 'sHome_ReleaseSchedule()' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Sub

'************************************************************************************************************************************************
Sub sReleaseSchedule(strParameters)
'Sub sReleaseSchedule()

On Error Resume Next

    Dim strTemp,objTemp,strCountry,GridControl,GridTreeView,strIndicator,intSeriesId,Grid,intI,strFromDate,objRow

    strCountry=getSplitValue(strParameters,"COUNTRY")
    strCategory = getSplitValue(strParameters,"Category") 
    strIndicator = getSplitValue(strParameters,"Indicator") 
    'strCategory=Replace(Now,"/","-")
    'strIndicator=Replace(Now,"/","-")
    DescText =strCategory
    intSeriesId=getSplitValue(strParameters,"SERIESID")
    strFrequency=getSplitValue(strParameters,"FREQUENCY")
    
'    strCountry = "Test"
'    strCategory = Replace(Now,"/","-")
'    strIndicator = Replace(Now,"/","-")
'    intSeriesId = "370044257"
'    strFrequency = "A1"
'    

      
    ''Selecting Country
    Delay 2000,"Country"
    strTemp = "WPFObject(""ComboBox"", """", 1)"
    Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 1).WPFObject("WrapPanel", "", 1).WPFObject("StackPanel", "", 1).FindChild("Name",strTemp,10,True)
    If objTemp.Exists = True then
      objTemp.Set_Text(strCountry)
      Call sEdgeProcessor
    End If
    

  'Select the Category 
  strTemp = "WPFObject(""GroupBox"", """", 1)"
  Set objComboBox =Sys.Process("EdgeClient").FindChild("Name",strTemp,60,true)
  
  'Set Category
  objComboBox.WPFObject("WrapPanel", "", 1).WPFObject("StackPanel", "", 2).WPFObject("ComboBox", "", 1).set_Text(strCategory)
  Call sEdgeProcessor()
  
  'Select the Indicator   
  objComboBox.WPFObject("WrapPanel", "", 1).WPFObject("StackPanel", "", 3).WPFObject("ComboBox", "", 1).Set_Text(strIndicator)
  Call sEdgeProcessor()
  
  ''Selecting Frequency      
  Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 1).WPFObject("WrapPanel", "", 1).WPFObject("StackPanel", "", 4).WPFObject("ComboBox", "", 1)
  If objTemp.Exists = True then
    objTemp.set_SelectedValue(strFrequency)
    Call sEdgeProcessor
  End If  

  'Attach Series if Required
  strTemp = "WPFObject(""ReleaseSeriesGridControl"")" 
  Set objGrid = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1)._
  WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 2).WPFObject("Grid", "", 1).FindChild("Name",strTemp,10,true)
  blnFalg  = False
  For I = 0 to objGrid.wRowCount-1
    SeriesID = objGrid.DataContext.Item(I).SeriesId 
    If Cstr(intSeriesId) = Cstr(SeriesID) Then       
      blnFalg = True  
    End If
  Next
    If blnFalg = False Then 
      strTemp="WPFObject(""ContentControlEx"", ""Attach Series"", 2)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objTemp.Exists = True then
         objTemp.Click
          Call sEdgeProcessor
        ''Entering Series ID
          strTemp="WPFObject(""SeriesIdTextEdit"")"
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
          If objTemp.Exists = True then
            objTemp.Text=intSeriesId          
            Sys.Process("EdgeClient").WPFObject("HwndSource: AttachSeriesPromptView", "Attach Series").WPFObject("AttachSeriesPromptView", "Attach Series", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("StackPanel", "", 2).WPFObject("Button", "Save", 1).Click
            Delay 2000,"Pls Wait..."
          End If
        End If
    End If
    
    ' 'Make Primary
    For I = 0 to objGrid.wRowCount-1
      SeriesID = objGrid.DataContext.Item(I).SeriesId 
      If Cstr(intSeriesId) = Cstr(SeriesID) Then       
         intPrimary = objGrid.DataContext.Item(I).get_Primary    
         If intPrimary<>1 then 
           objGrid.DataContext.Item(I).set_Primary(1)
         End If
      End If
    Next

'      ''Schedule Type
'      Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 3).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 7).WPFObject("BarEditItemLinkControl", "", 1).WPFObject("ContentControlEx", "", 1).WPFObject("ComboBoxEdit", "", 1)
'     If objTemp.Exists = True then
'        objTemp.set_Text("Final")
'          Call sEdgeProcessor
'     End If
'  
'      ''Adding New Schedule
'      Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 3).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 1).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Add", 2)
'      If objTemp.Exists = True then
'        Delay 2000,"Pls Wait.."
'        objTemp.Click
'        Delay 2000,"Pls Wait.."
'        Call sEdgeProcessor
'      End If
'	
'       Set Grid=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 3).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("ReleaseScheduleGridControl")
'        nRow = Grid.wRowCount
'       
'       Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 3).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("ReleaseScheduleGridControl").WPFObject("ReleaseScheduleTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", nRow).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 2).WPFObject("InplaceBaseEdit", "", 1)
'       Delay 200
'       objTemp.Click
'       Sys.Keys (Date)
'       Delay 200
'       sys.Keys (Date)
'       Delay 200
'       Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 3).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("ReleaseScheduleGridControl").WPFObject("ReleaseScheduleTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 3).WPFObject("InplaceBaseEdit", "", 1)
'       objTemp.Click
'       Delay 200
	       

   'Add Schedule
   
   nRow =  sAddSchedule_RS()
   DescText = nRow
    ''Upload
    Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("StackPanel", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 1).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Upload", 2).Click
    strTemp="WPFObject(""PART_ContainerContent"")"
    Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm")'.FindChild("Name",strTemp,50,True)
  If objTemp.Exists = True then
      Sys.Keys "Y"
      Delay 5000,"Uploading.."
        strTemp="WPFObject(""PART_ContainerContent"")"
        Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Release Schedule Success")'.FindChild("Name",strTemp,50,True)
      If objTemp.Exists = True then
        Sys.Keys "O"
        Call sEdgeProcessor
      End If
    End If

    strTPDate=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 3).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("ReleaseScheduleGridControl").WPFObject("ReleaseScheduleTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", nRow).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText
    strTCRemarks="Release Schedule marked Final is Uploaded" & "<br />" & "Timepoint Date - " & strTPDate
    

  If Err.Number > 0 Then
    Log.Warning("Error in 'sReleaseScheduleModule(strParameters)' function , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If  
  
  'Delay
   If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_PRT_04"))Then
   'Wait for 5 mins to verify in CDM
     Call DelayWait(strParameters)  
   Else
     Delay 5000, "Pleas Wait..."
   End If
End Sub

'***********************************************************************************************************************************************************************************************
Sub sLaunchCDM(strParameters)
'Sub sLaunchCDM()

On Error Resume Next

    Dim objTemp,poProcess,strTemp,objtxtusr,objtxtpass,strUserName,strPassword
    Dim strEnvi
    
    strUserName=getSplitValue(strParameters,"USERNAME")
    strPassword=getSplitValue(strParameters,"PASSWORD")
    

'     strUserName="rchethana"
'     strPassword="" 
    

    set objTemp = Sys.WaitProcess("ISI.CeicDataManager.Startup",2000)
    If objTemp.exists = False then
      Set wshShell = CreateObject ("WSCript.shell")
    	Set poProcess = wshShell.Exec("""C:\Program Files (x86)\ISI Emerging Markets\CEIC Data Manager\ISI.CeicDataManager.Startup.exe""")
    End If
    Set objTemp = Sys.WaitProcess("ISI.CeicDataManager.Startup",120000)
    If objTemp.exists = True then    
      cdm_time1=aqdatetime.Now
      intCount=0
      Do while fCDM_MDI_Loaded = False 
          If  DateDiff("s",cdm_time1,aqDateTime.Now)>180 then
            strTestCaseResult="ABORT"
            strTCRemarks="Unable to load CDM"
            Exit Sub
           End If
          If  DateDiff("s",cdm_time1,aqDateTime.Now)>60 and intCount=0 then
            Sys.Process("ISI.CeicDataManager.Startup").Close
            Sys.Process("ISI.CeicDataManager.Startup").Terminate
            Delay(5000)
            Set wshShell = CreateObject ("WSCript.shell")
    	      Set poProcess = wshShell.Exec("""C:\Program Files (x86)\ISI Emerging Markets\CEIC Data Manager\ISI.CeicDataManager.Startup.exe""")
            Delay(30000)
            intCount=1          
          End If
      Loop  
    End If

    strTemp="WinFormsObject(""Login_Dialog"")"
    Set objTemp=Sys.Process("ISI.CeicDataManager.Startup").WaitChild(strTemp,12000)
    If objTemp.Exists = True then
       strTemp="WinFormsObject(""TxBox_User"")"
       Set objtxtusr=objTemp.FindChild("Name",strTemp,1,True)
       If objtxtusr.Exists = True then
          objtxtusr.Text=""
          objtxtusr.Text=strUserName
           Delay 2000, ""
       End If
       strTemp="WinFormsObject(""TxBox_Pass"")"
       Set objtxtpass=objTemp.FindChild("Name",strTemp,1,True)
       If objtxtpass.exists = True then
          objtxtpass.Text=""
          objtxtpass.Text=strPassword
          Delay 2000, ""
       End If
       Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("Login_Dialog").WinFormsObject("Panel1").WinFormsObject("Button_OK")
       Call objTemp.WinFormsObject("Panel1").WinFormsObject("Button_OK").Click


      Set otemp=Sys.Process("ISI.CeicDataManager.Startup").WaitChild("WinFormsObject(""UpgradeWarning_From"")",15000)
      If otemp.exists = True Then  ' Annoucement >> Click OK. 
        Delay 2000, "Closing Annoucement Form"
        otemp.WinFormsObject("TableLayoutPanel1").WinFormsObject("Panel4").WinFormsObject("Button_OK").Click()      
      End If
       Delay 6000, "Pls Wait.."
       strTemp = "WinFormsObject(""RibbonStatusBar1"")"
       set otemp=Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMMain_MDIParent").WinFormsObject("RibbonStatusBar1").FindChild("Name",strTemp,10,True)
        If otemp.Exists then 
                StatusString=otemp.LeftPanelCommands.Item(0).Text
        End If

        cdm_time1=aqdatetime.Now
        Do while aqstring.find(ucase(StatusString),"READY")=-1
           Delay 1000,"Please wait"
           'strTemp ="WinFormsObject(""RibbonStatusBar1"")"
           set otemp=Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMMain_MDIParent").WinFormsObject("RibbonStatusBar1")
          If otemp.Exists Then 
              StatusString=otemp.LeftPanelCommands.Item(0).Text
          End If
           log.Message StatusString
           If  DateDiff("s",cdm_time1,aqDateTime.Now)>120 then
            'strTestCaseResult="ABORT"
            Exit Do
           End If
        Loop
        
         ''Refresh
        Delay 1000,"Refresh.."
        sys.Keys "~SA"
       Delay 10000,"Refresh..."
        sys.Keys "[F5]"
        strTemp ="WinFormsObject(""RibbonStatusBar1"")"
        Set otemp= Sys.Process("ISI.CeicDataManager.Startup").Window("WindowsForms10.Window.8.app.0.3ce0bb8", "CEIC Data Manager", 1).WaitChild(strTemp,240000)
        If otemp.Exists = True Then 
              StatusString=otemp.LeftPanelCommands.Item(0).Text
        End If        
        cdm_time1=aqdatetime.Now
        Do while (aqstring.find(ucase(StatusString),"UPDATED")=-1) or (StatusString = "Ready")
           Delay 1000,"Please wait till CDM Tab Refresh"
           strTemp ="WinFormsObject(""RibbonStatusBar1"")"
            Set otemp = Sys.Process("ISI.CeicDataManager.Startup").Window("WindowsForms10.Window.8.app.0.3ce0bb8", "CEIC Data Manager", 1).WaitChild(strTemp,240000)
           StatusString=otemp.LeftPanelCommands.Item(0).Text
           log.Message StatusString
           If  DateDiff("s",cdm_time1,aqDateTime.Now)>120 then
              strTestCaseResult="FAIL"
            Exit Do
           End If
        Loop  
   
    End If
    
    If Err.Number > 0 Then
    Log.Warning("Error in 'sLaunchCDM' function , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'************************************************************************************************************************************************

Sub sCDMRelSc(strParameters)
'Sub sCDMRelSc()
On Error Resume Next
  'msgbox DescText

    Dim strTemp,objTemp,objGrid,intRow,intI,strTopic,strCurrent1
    Dim strSearch1,strSearch2,intJ,intK
    Dim objCommand,objBounds
    Dim oTemp,objCDM_MDI,blnFlag
    Dim strDate, strDate1, strTopic1 
    
 
    strSearch1=getSplitValue(strParameters,"SEARCH1")
    strSearch2=getSplitValue(strParameters,"SEARCH2")
    strCategory= aqdatetime.Now

'    strSearch1="Countries"
'    strSearch2="Test"
'    DescText = "TTT"

'    Opening Release Schedule tab/window     
      Sys.Keys("~r")
      Delay 2000,"Refresh.."
      sys.Keys "~s+A"
      Delay 5000,"Refresh.."
      sys.Keys "[F5]"
      Delay 2000,"Refresh.."
      bFlag = False
     For I =0 to 60
       Set objTemp = Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMMain_MDIParent")._
        WinFormsObject("RibbonStatusBar1").LeftPanelCommands.Item(0).Text 
       sText = objTemp.OleValue
       If sText = "Ready" Then
         Log.Message "Refresh is completed"
         bFlag = True
         Exit For
       Else
        Delay 2000, "Please Wait..."
       End If      
     Next
     
     If bFalg = False Then 
        sys.Keys "[F5]"
        Delay 10000,"Refresh.."
        Set objTemp = Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMMain_MDIParent")._
        WinFormsObject("RibbonStatusBar1").LeftPanelCommands.Item(0).Text 
       sText = objTemp.OleValue
       log.message sText
     End If
     
      
    

    strTemp="WinFormsObject(""GridEX_Indicators"")"
    Set objGrid=Sys.Process("ISI.CeicDataManager.Startup").FindChild("Name",strTemp,50,True)
    If objGrid.Exists = False then
        strTestCaseResult="FAIL"
        Exit Sub
    End If
    intRow=objGrid.get_RowCount

    For intI=0 to intRow-1
        objGrid.set_Row(intI)
        strTopic=objGrid.CurrentRow.DataRow.Row.RootID
        If strTopic=strSearch1 then 
             intX = objGrid.CurrentRow.Position
             objGrid.Col = 0
            objGrid.CurrentRow.set_Expanded(True)
            Exit For
        End If
    Next

    For IntJ=1 to intRow
          objGrid.set_Row(intI + intJ)
          strTopic=objGrid.CurrentRow.DataRow.Row.CountryName
          If strTopic=strSearch2 then   
              objGrid.CurrentRow.set_Expanded(True)
              Delay 3000,"Expanding.."
              Exit For
          End If
      Next
      blnFlag=True 
      intRow=500
      For IntK=1 to intRow
          objGrid.set_Row(intI + intJ + intK)
          strTopic=objGrid.CurrentRow.DataRow.Row.CategoryName 
          If strTopic=DescText then
            blnFlag=False
                objGrid.Col = 0     
                intX = objGrid.CurrentRow.Position
  '           Get Cell Bounds
  						Set objBounds = objGrid.GetCellBounds(intX, objGrid.CurrentColumn)
  '						Click the check box
              Delay 2000,"Pls Wait.."
  						Call objGrid.Click(objBounds.Left + objBounds.Width/20 , objBounds.Top + objBounds.Height/2)
              Exit For
          End If       
        Next
  
    
    If blnFlag=True then
      strTestCaseResult="FAIL"
      strTCRemarks="Schedule folder not found in CDM"
      log.Message "Schedule folder not found in CDM"
      ''Closing CD    
        Set objTemp = CreateObject("WScript.Shell")
        objTemp.AppActivate "CEIC Data Manager"
        Delay 3000,"Pls Wait"
        sys.Keys "~[F4]"
        Set objTemp=Sys.WaitChild("Process(""ISI.CeicDataManager.Startup"")",10000)
        If objTemp.Exists = True then
            strTemp="WinFormsObject(""CDMYesNoDialog"")"
            Set objTemp=Sys.Process("ISI.CeicDataManager.Startup").WaitChild(strTemp,10000)
            If objTemp.Exists = True then
              Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMYesNoDialog").WinFormsObject("TableLayoutPanel1").WinFormsObject("UiButton_Yes").Click
            End If
        End If
        Delay 3000,"Closing CDM"
        
      'Call CloseWindow
    errMessage= "Not Verifing Further Part of Release Schedule Testcases"
    log.message errMessage  
    If errMessage <> "" then 
      log.Message errMessage
      strTCRemarks=errMessage + "Hence not continuing further testcases"
      strTestCaseResult="FAIL"      
      Exit Sub 
    End If
       errMessage= "Not Verifing Further Part of Release Schedule Testcases"
       log.message errMessage
      Exit Sub
    End If
      
    ''Status
    strTemp = "WinFormsObject(""CDMMain_MDIParent"")"
    Set objCDM_MDI = Sys.Process("ISI.CeicDataManager.Startup").Waitchild(strTemp,40000)
    If objCDM_MDI.Exists = True then
    strTemp="WinFormsObject(""ExplorerBar1"")"
    Set objTemp =objCDM_MDI.FindChild("Name",strTemp,15,True)
        If objTemp.Exists = True then
          strTemp="WinFormsObject(""GridEX_Status"")"
          Set oTemp = objTemp.FindChild("Name",strTemp,5,True)
          If oTemp.Exists = True Then 
            For intI = 0 to oTemp.Rowcount - 1
              oTemp.Row = intI
              oTemp.CurrentRow.set_CheckState(0)         
              Delay 1000,"Pls Wait.." 
            Next    
          End  If 
        End If
    End If
    
    ''Search
    Set objTemp1 = objTemp.WinFormsObject("ExplorerBarContainerControl4")._
        WinFormsObject("UiButton_Search")
    If objTemp1.Exists = True then
				objTemp1.Click 
    End If
		Set objResults = objCDM_MDI.WinFormsObject("MdiClient", "")._
		WaitChild("WinFormsObject(""ScheduleSearchResults_Form"")", 15000)  
    
    ''Results loaded
      Set objTemp = objCDM_MDI.WinFormsObject("RibbonStatusBar1")._
				LeftPanelCommands.Item(0).Text
				strTemp = objTemp.OleValue
				While (UCase(strTemp)) <> "READY" 'Wait for 'Ready' Status
          Set objTemp = objCDM_MDI.WinFormsObject("RibbonStatusBar1")._
				  LeftPanelCommands.Item(0).Text
					strTemp = objTemp.OleValue
          log.Message strTemp
				Wend 
                  
    'Checking Pending status
    strTemp="WinFormsObject(""GridEX_PendingSearchResults"")"
    Set objPendingGrid=Sys.Process("ISI.CeicDataManager.Startup").FindChild("Name",strTemp,50,true)
    If Not fCheckEmpty(objPendingGrid) then
      If objPendingGrid.Exists=True then    
       If objPendingGrid.CurrentRow.DataRow.Row.Item(8)="Pending" then
        If Err.Number=0 then
          log.Message "The status of schedule is Pending in CDM"
          strTCRemarks="The status of schedule is Pending in CDM"
          strTestCaseResult = "PASS"
        End If
       End If
      End If
    End If
    If strTCRemarks="" then
     strTestCaseResult="FAIL"
    End If
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sCDMRelSc' function , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
    
End Sub

'****************************************************************************************************************************************************

Sub sHome_SeriesSearch(strParameters)

On Error Resume Next

    Dim objEdgeMDI,strObject,strObj,objsrc,strTemp
    SERIESID=getSplitValue(strParameters,"SERIESID")
    
    
    strObject = "WPFObject(""HwndSource: RibbonWindow"")"
    Set objEdgeMDI = Sys.Process("EdgeClient")'.WaitChild(strObject, 600000)
    If objEdgeMDI.Exists then
      strTemp="WPFObject(""TextBlock"", ""Source Series"", 1)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objTemp.Exists = False then
        strTemp="WPFObject(""ContentControl"", ""Series"", 1)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        If objTemp.Exists = True then
          objTemp.Click
          strTemp="WPFObject(""BarPopupBorderControl"", """", 1)"
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
          If objTemp.Exists = True then
            strTemp="WPFObject(""ContentControlEx"", ""Search on Source Tree"", 2)"   
            Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
            If objTemp.Exists = True then
              objTemp.Click
              Call sEdgeProcessor
            End If
          End If
        End If
    
        Delay 2000,"Opening Source Series.."
        log.Message "Opened Source Series"
        strTCRemarks="Opened Source Series"
      Else
        log.Message "Source Series is opened"
        strTCRemarks="Source Series is opened"
        Exit Sub  
      End If

    Else
      log.Message "RibbonWindow not found"
    End If
  
    'Input seriesid
    Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("Grid", "", 1).WPFObject("GridControl").WPFObject("GridView").WPFObject("PART_FilterRow").WPFObject("ContentPresenter", "", 1).WPFObject("FilterCellContentPresenter", "", 1).WPFObject("TextEdit", "", 1).Click
    
    Sys.Keys(seriesid)
    Delay 5000,"Series loading..."    
    Call sSeries_Search_Delay_layout2()
    
    'Click on Primary Source cell    
    strTemp = "WPFObject(""InplaceBaseEdit"", """", 1)"
    Set objPSCell=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("Grid", "", 1).WPFObject("GridControl").WPFObject("GridView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 2).Waitchild(strTemp,120000)
 
     
    If objPSCell.DisplayText="Primary Source" then
      objPSCell.Click
      Delay 2000,"Loading..."
    End If
   Set objSTP=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 2).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Open Global STP", 2)
    
    If objSTP.Enabled=TRUE then
      objSTP.Click
    End If
    
    Call sExcelFullHistory
    
    strTCRemarks=strTCRemarks&"<br/>"& "Opened Global STP"
    
    If Err.Number > 0 Then
      Log.Warning("Error in 'sHome_SeriesSearch' function , Error Description : " & Err.Description &" Error Number : "& Err.Number)
      Err.Clear
    End If
End Sub

'*********************************************************************************************************************************************

Sub sSeries_Search_Delay_layout2()

  On Error Resume Next
  Dim objEdgeWait,strTemp,objTemp 
  Delay 5000, "Please Wait" 
  For J= 0 to 3
      strTemp = "WPFObject(""RowControl"", """", 1)"
      Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("Grid", "", 1).WPFObject("GridControl").WPFObject("GridView").WPFObject("HierarchyPanel", "", 1).Waitchild(strTemp,600000)
      if objTemp.Exists then
          Set objCell = objTemp.WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 2).WPFObject("InplaceBaseEdit", "", 1)
          For I = 0 to 90 
            If objCell.DisplayText = "Primary Source" Then 
              objCell.Click
              Delay 2000,"Loading..."
              Exit For
            Else
              Delay 1000, "Please Wait Form is Loading"
            End If
          Next
      End If
  Next  
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sSeries_Search_Delay()'function , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If 
End Sub

'*********************************************************************************************************************************************************
Sub sExcelFullHistory()

  Dim strTemp,CreateSTP,PropArray,ValuesArray,strTemp1,ReplaceFile 
  Dim objProgress, objTemp,objRecovery,intCount
  
On Error Resume Next

   
  
  Delay 4000, "Pls Wait..."
  
  strTemp = "WinFormsObject(""TimeRangePickerForm"")"
  Set CreateSTP=Sys.Process("EXCEL",2).WaitChild(strTemp,120000)
  
  If CreateSTP.Exists = True  Then
    PropArray = Array("WndCaption", "Visible")
    ValuesArray = Array("Full History", True)
    Set objTemp = CreateSTP.FindChild(PropArray, ValuesArray, 50)  
    If objTemp.Exists = True Then
      objTemp.Click
      log.Message "Selected Full History Radio button"
    Else
      log.Message "Full History Radio button not found"
    End If    

    PropArray = Array("WndCaption", "Visible")
    ValuesArray = Array("Open", True)
    Set objTemp = CreateSTP.FindChild(PropArray, ValuesArray, 10)
    If objTemp.Exists = True Then
      objTemp.Click
    End If
    
      strTemp="WinFormsObject(""SelectFreqForm"")"      
      Set objTemp=Sys.Process("EXCEL",2).WaitChild(strTemp,25000)    
       If objTemp.Exists Then
          strTemp="WinFormsObject(""radButton1"")"
          Set objTemp=objTemp.FindChild("Name",strTemp,5)
          If objTemp.Exists = True then
            objTemp.Click
            Delay 10000,"Pls Wait..."
          End If
      End If
      Set File = Sys.Process("EXCEL", 2).Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Warning"")",180000)       
            If (File.Exists) Then
              strTemp = "WPFObject(""Button_Yes"")"         
                 Set objYes = File.FindChild("Name", strTemp,50, True)
                 If objYes.Exists = True Then
                    objYes.Click
                 End If
                 Delay 5000              
            End If  
   Else
    log.Message "STP File not found"
    strTCRemarks="STP File not found"
    blnCriticalErrorFound = True
    strCriticalError = "Unable to find STP file"
    strTestCaseResult = "FAIL"
    blnSTPfile=True
    Call ExcelProcessKill
    Exit Sub
  End If

  Set CreateSTP=Nothing  
  Set objTemp=Nothing
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sExcelFullHistory()',Error Description : " & Err.Description &" Error Number: "& Err.Number)
    Err.Clear
  End If
End Sub

'*******************************************************************************************************************************

Sub ExcelProcessKill()
Dim objArray,oSTP_ExcelObj,ReplaceFile,strTemp

objArray = Sys.FindAllChildren("ProcessName","EXCEL", 1,True)
For i=0 to ubound(objArray)
  log.Message objArray(i).FullName
  set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*RUN*",1,True)
  If oSTP_ExcelObj.Exists = False Then
    objArray(i).Terminate()
     Err.Clear
  End If
Next

  If Err.Number > 0 Then
    log.Warning("Error in 'ExcelProcessKill()'function ,Error Description : " & Err.Description &" Error Number: "& Err.Number)
    Err.Clear
  End If
End Sub

'********************************************************************************************************************************

Sub sRelSch_STP1(strParameters)
On Error Resume Next
  
'  STP=getSplitValue(strParameters,"STP")
  STPSheetName=getSplitValue(strParameters,"STPSheetName")
  SeriesId=getSplitValue(strParameters,"SERIESID")
  strTestDataFile= getSplitValue(strParameters,"TestDataFile")
  
  
'  'strTPDate="12/1/2026"
'  strTPDate="12/01/2019"
'  STPSheetName="A1_1"
'  STP="Test"
'  SeriesId="426118977"
'  strTestDataFile = "YYY-PRTAAA-Series Mapping"
  


  FilePath=aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")+ "\"+strTestDataFile +".xlsx"
 
    
    Set objSTPXls=GetObject(FilePath)
    With objSTPXls
     .Sheets(STPSheetName).Select      
    End With
    
  With objSTPXls  
  With .WorkSheets(STPSheetName)
  .Cells(4,1).Select
    For i=25 to 45
      If cstr(.Cells(2,i).Value)=cstr(strTPDate) then
       Exit For
      End If
    Next
    
    With objSTPXls
     With .WorkSheets(STPSheetName)
      .Cells(4,1).Select
       If clng(.Cells(4,1).Value)=clng(SeriesId) and cstr(.Cells(2,i).Value)=cstr(strTPDate) then
        .Cells(4,i).Select
        .Cells(4,i).Value=50
        .Cells(4,i+1).Select
        .Cells(4,i).Select        
        End If
     End With
    End With
    
    'Change Schedule in Timpoint details
    Call sClickTimePointDetails(2,strTestDataFile)
      ''Mark Good
      Delay 1000,"Mark Good..."
      With objSTPXls
        With .WorkSheets(STPSheetName)
             .Cells.Select
        End With
      End With
      
      'Click on Mark Good
      Call sClicKMarkGood(2,strTestDataFile) 
      'Click on Upload
      Call sClickUpload(2,strTestDataFile)
      Delay 1000, "Please wait"
      
      'Click on Information 
       Call sClickonInformation(2,"Yes")  
      End With  
      End With
       
    
    'Closing Source Series Window
     Call CloseSearch()
     
     'Refresh Release status
     strTemp="WPFObject(""ContentControlEx"", ""Refresh"", 2)"
     Set objRefresh=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
     Call objRefresh.Click
     Call sEdgeProcessor 
     'Checking schedule(timepoint) status
     Set objStatus=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 3).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("ReleaseScheduleGridControl").WPFObject("ReleaseScheduleTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 7).WPFObject("PART_Editor")
     Call objStatus.Click
     Delay 2000,"Showing Status..."
     Call objStatus.Click
     If objStatus.Text="Released" then
      strTCRemarks=strTCRemarks & "<br/>"  &"The status of the schedule is 'Released' in EDGE."
      strTestCaseResult = "PASS"
     End If
 
     Call CloseWindow              
  If Err.Number > 0 Then
    Log.Warning("Error in 'sRelSch_STP1' function , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
    
End Sub

'***********************************************************************************************************************************

Sub CloseWindow()
  'Call Aliases.EdgeClient.HwndSource_RibbonWindow.RibbonWindow.ContentControl.Grid.Grid.ContentControl.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.Click(1296, 10)
On Error Resume Next
      Dim objEdge,strTemp,objTemp, objStrClose
      
      set objEdge=Sys.Process("EdgeClient")
      strTemp ="WPFObject(""LayoutPanel"", """", 1)"
      Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).FindChild("Name",strTemp,10,True)
       If objTemp.Exists = TRUE then
          objTemp.Click
          objTemp.Closed=true
          Delay 500,"Closing Form..." 
      End If
      If Err.Number > 0 Then
    Log.Warning("Error in 'CloseWindow()'function , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'***********************************************************************************************************************************

Sub sCDMRelSc1(strParameters)
On Error Resume Next

     'get series id
     SeriesId=getSplitValue(strParameters,"SERIESID")
     
   'SeriesId="370044257"
     
     'Click Search till Release grid is seen
     strTemp = "WinFormsObject(""UiButton_Search"")"
     Set objSearch=Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMMain_MDIParent")._
                  WinFormsObject("MdiClient", "").WinFormsObject("ScheduleSearchResults_Form")._
                  WinFormsObject("uiPanel_SearchSchedule").WinFormsObject("uiPanel_SearchScheduleContainer")._
                  WinFormsObject("ReleaseSchemaOptions1").WinFormsObject("ExplorerBar1")._
                  WinFormsObject("ExplorerBarContainerControl4").FindChild("Name",strTemp,10,True)

     cdm_time1=aqdatetime.Now
     Do While (DateDiff("s",aqdatetime.Now,cdm_time1)<450)
      strTemp="WinFormsObject(""GridEX_ReleasedSearchResults"")"
      Set objRelGrid=Sys.Process("ISI.CeicDataManager.Startup").FindChild("Name",strTemp,50,true)
      If RouTime=0 then
        Exit Do
      End If
      strRunSeriesID = objRelGrid.CurrentRow.DataRow.Row.Item(8)
      Delay 5000,"Refreshing..."       
      If strRunSeriesID=SeriesId then       
        strTCRemarks="The status of the schedule is 'Released' in CDM"
        strTestCaseResult = "PASS"
        Exit Do
       End If
      Call objSearch.Click           
     Loop
     
     If strTCRemarks="" then
      strTCRemarks="Category = "&strCategory
      strTestCaseResult="FAIL"
     End If
 
    ''Closing CDM    
    Set objTemp = CreateObject("WScript.Shell")
    objTemp.AppActivate "CEIC Data Manager"
    Delay 3000,"Pls Wait"
    sys.Keys "~[F4]"
    Set objTemp=Sys.WaitChild("Process(""ISI.CeicDataManager.Startup"")",10000)
    If objTemp.Exists = True then
        strTemp="WinFormsObject(""CDMYesNoDialog"")"
        Set objTemp=Sys.Process("ISI.CeicDataManager.Startup").WaitChild(strTemp,10000)
        If objTemp.Exists = True then
          Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMYesNoDialog").WinFormsObject("TableLayoutPanel1").WinFormsObject("UiButton_Yes").Click
        End If
    End If
    Delay 3000,"Closing CDM" 
    
    If Err.Number > 0 Then
    Log.Warning("Error in 'sCDMRelSc1' function , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If    
End Sub

'*******************************************************************************************************************************

Sub sLoadSource(strParameters)

On Error Resume Next

  Dim strTemp,strObject
  Dim ObjGridLoad,ObjGridClose,objEdgeMDI,objTemp,objEdge

  'Open Source Module
  Call sHome_Source()
  Call sFindtree(strParameters,"Source")
   
  Delay 2000,"Opening Source.. Pls wait.."
   ''Open STP and Full History
  Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 6).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Open Global STP", 2).Click
  Delay 2000,"Opening STP.. Pls wait.."
   ''Selecting Full History in STP
   Call sExcelFullHistory()
   
   Delay 3000, "Please Wait Form is loading"
      
'   If Ucase(strTestCase_no) = Ucase("TC_BENCHMARK_STP") OR Ucase(strTestCase_no) = Ucase("TC_BENCHMARK_STP40")  Then
'      Delay 20000, "Please Wait Form is loading"
'   Else
'      Delay 10000, "Please Wait Form is Loading"
'   End If
   
  If Err.Number > 0 Then
    Log.Warning("Error in 'sLoadSource',Error Description : " & Err.Description &" Error Number: "& Err.Number)
    Err.Clear
  End If
  
End Sub

'******************************************************************************************************************************

Sub sFindTree(strParameters,sLoadGrid)
'Sub sFindTree()

On Error Resume Next
  
  Dim strSource_Name,strQC_Name,strWorkspace_Name
  Dim blnFlag,GridControl,GridSourceTree
  Dim intTotNodeCnt,intI,intJ,intK,intRow
  
  blnFlag = True
  
  strSource_Name=getSplitValue(strParameters,"SOURCE")''Level1 Source 
  strQC_Name=getSplitValue(strParameters,"QCNAME")''Level2 Source 
  strWorkspace_Name=getSplitValue(strParameters,"WORKSPACE")''Workspace Name 
  
'  strSource_Name="Test"
'  strQC_Name="Automation_Source01"
'  strWorkspace_Name="DM"
'  sLoadGrid="Source"

  
  Delay(2000)
  'Setting grid Objects
  if sLoadGrid="New" then 
    Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("LayoutTreeControl").WPFObject("LayoutTreeListView")
    Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("LayoutTreeControl")
  Elseif sLoadGrid="Edit" then 
    Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("LayoutTreeListControl").WPFObject("LayoutTreeListView")
    Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("LayoutTreeListControl")
  Elseif sLoadGrid="Source" then 
    strTemp="WPFObject(""SourceTreeListView"")"
    Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    strTemp="WPFObject(""SourceTreeControl"")"
    Set GridSourceTree=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)  
 End if 
  Delay(5000)
  ''First level(Source Name)
  intTotNodeCnt=GridControl.Nodes_2.Count
  For intI=0 to intTotNodeCnt-1         
      If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
        GridControl.Nodes_2.Item(intI).ExpandAll
        intRow =GridControl.Nodes_2.Item(intI).get_RowHandle
        Call GridControl.ClearSelectionCore
        Call GridControl.FocusViewAndRow(GridControl,intRow)
        GridControl.SetFocusOnCurrentItem
        Call GridControl.SelectRowCore(intRow)
        log.Message "First Level- " & GridControl.Nodes_2.Item(intI).Content.Description       
        blnFlag=False  
        Exit For
      End If
  Next
  If blnFlag = True then
    strTCRemarks="Source Node not found"
    strTestCaseResult="FAIL"
    Exit Sub
  End If
  Delay(5000)
  blnFlag = True 
  ''Second level(QC Name)
  intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
  For intJ=0 to intTotNodeCnt-1
    If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strQC_Name) then
      GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll 
      intRow =GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
        Call GridControl.ClearSelectionCore
        Call GridControl.FocusViewAndRow(GridControl,intRow)
        GridControl.SetFocusOnCurrentItem
        Call GridControl.SelectRowCore(intRow)  
      log.Message "Second Level- " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description 
      blnFlag = False 
      Exit For
    End If
  Next
  If blnFlag = True then
    strTCRemarks="QC Name not found"
    strTestCaseResult="FAIL"
    Exit Sub
  End If
  Delay(5000)
  blnFlag = True    
  ''Third Level(Workspace Name)  
  intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
  For intK=0 to intTotNodeCnt-1
    If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strWorkspace_Name) then
      GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).ExpandAll
      intRow =GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
      if sLoadGrid="New" then 
        Call GridControl.ClearSelectionCore
        Call GridControl.FocusViewAndRow(GridControl,intRow)
        GridControl.SetFocusOnCurrentItem
        Call GridControl.SelectRowCore(intRow)
      elseif sLoadGrid="Edit" then 
        Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("LayoutTreeListControl").WPFObject("LayoutTreeListView").WPFObject("HierarchyPanel", "", 1).WPFObject("GridRow", "", 3).WPFObject("ScrollablePart").WPFObject("CellItemsControl", "", 1).WPFObject("GridCellContentPresenter", "", 1).WPFObject("TextEdit", "", 1).Click
      elseif sLoadGrid="Source" then
        Call GridControl.ClearSelectionCore
        Call GridControl.FocusViewAndRow(GridControl,intRow)
        GridControl.SetFocusOnCurrentItem
        Call GridControl.SelectRowCore(intRow)
      End if  
      log.Message "Third Level- " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description     
      blnFlag = False
      Exit For   
    End If 
  Next
  Delay(2000)
  If Err.Number > 0 Then
    Log.Warning("Error in 'sFindTree',Error Description : " & Err.Description &" Error Number: "& Err.Number)
    Err.Clear
  End If
End Sub

'********************************************************************************************************************************

Sub sCreateSeriesModified(strParameters)
'Sub sCreateSeriesModified()

  On Error Resume Next
  Dim strSeriesName,strSourceSeriesName,strSeriesSourceCode,strSeriesStatus,strSeriesType,STPSheetName
  Dim strSeriousCountry,strOutputUnit,strSeriesNature,strSeriesFreq,strSourceUnit,strUnitType,strTestDataFile,strTimepoints
  
  Const xlFillDefault = 0
  strStartcolumn=0
  STP= getSplitValue(strParameters,"STP") 
  strTestDataFile=getSplitValue(strParameters,"TestDataFile") 
  STPSheetName= getSplitValue(strParameters,"STPSheetName")
  strSeriesName = getSplitValue(strParameters,"Series Name")
  strSourceSeriesName = getSplitValue(strParameters,"Source Series Name")
  strSeriesSourceCode=  getSplitValue(strParameters,"Series Source Code")
  strForeCast= getSplitValue(strParameters,"ForeCast")
  strSeriesStatus =  getSplitValue(strParameters,"Series Status")
  strSeriesType =  getSplitValue(strParameters,"Series Type")
  strSeriousCountry = getSplitValue(strParameters,"Serious Country")
  strOutputUnit=  getSplitValue(strParameters,"Output Unit")
  strSeriesNature =  getSplitValue(strParameters,"Series Nature")
  strSeriesFreq = getSplitValue(strParameters,"Series Freq")
  strSourceUnit =  getSplitValue(strParameters,"Source Unit")
  strUnitType = getSplitValue(strParameters,"Unit Type") 
  strTimepoints = getSplitValue(strParameters,"Timepoints")
  strExcelNumber = getSplitValue(strParameters,"ExcelNumber")
  strAddTimepoint = getSplitValue(strParameters,"AddTimepoint")
  'strPendingSTP = getSplitValue(strParameters,"PendingSTP")
  
'  STPSheetName="A1_1"
'  STP="Test Source 1"
'  strTestDataFile="YYY-Automation-Test Source 1"
'  strSeriesName="test-series"
'  strSourceSeriesName="test-series"
'  strSeriesSourceCode="test-series"
'  strForeCast="No"
'  strSeriesStatus="T"
'  strSeriesType="Key"
'  strSeriousCountry="YYY"
'  strOutputUnit="NA"
'  strSeriesNature="R"
'  strSeriesFreq="A1"
'  strSourceUnit="NA"
'  strUnitType="%"
'  strTimepoints="8"
'  strExcelNumber = "2"
  
  strExcelNumber =Cint(strExcelNumber)
 
'Get the File Loacation 
 FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")&"\"&strTestDataFile & ".xlsx"

  Delay(2000)
 
  Set objSTPXls=GetObject(FilePath)
  With objSTPXls
    With .Sheets(STPSheetName).Select
    End With

    With .WorkSheets(STPSheetName)
      Dim r
        delay Status_Wait, "Finding last Row the Excel sheets.. Pls wait.."
        For r = 1 To .UsedRange.Rows.Count
          If IsEmpty(.UsedRange.Cells(r, 1).Value) = True AND (.UsedRange.Cells(r, 1).Text) ="" Then           
           intlastRow = r           
           Exit For
          End  If 
        Next   
         
        inti=3
        lastColumn=.UsedRange.Columns.Count 
        
       'Modify Name in Pending STP
       If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_PRT_11"))Then 
          Exit Sub          
       End If  
         
       For inti = 3 to lastColumn
          strText=.Cells(2,inti)
          .Cells(intlastRow,inti).Select
          If UCASE(strText)=UCase("Series Name") then 
          .Cells(intlastRow,inti).Value=strSeriesName
          ElseIf UCASE(strText)=UCase("Source Series Name") then 
          .Cells(intlastRow,inti).Value=strSourceSeriesName
          ElseIf UCASE(strText)=UCase("Series Source Code") then 
          .Cells(intlastRow,inti).Value=strSeriesSourceCode
          ElseIf UCASE(strText)=UCase("ForeCast") then 
          .Cells(intlastRow,inti).Value=strForeCast 
          ElseIf UCASE(strText)=UCase("Series Status") then 
          .Cells(intlastRow,inti).Value=strSeriesStatus
          ElseIf UCASE(strText)=UCase("Series Type") then 
          .Cells(intlastRow,inti).Value=strSeriesType
          ElseIf UCASE(strText)=UCase("Series Country") then 
          .Cells(intlastRow,inti).Value=strSeriousCountry
          ElseIf UCASE(strText)=UCase("Output Unit") then 
          .Cells(intlastRow,inti).Value=strOutputUnit
          ElseIf UCASE(strText)=UCase("Series Nature") then 
          .Cells(intlastRow,inti).Value=strSeriesNature
          ElseIf UCASE(strText)=UCase("Series Freq") then 
											intFreqColumn = inti														
          .Cells(intlastRow,inti).Value=strSeriesFreq
          ElseIf UCASE(strText)=UCase("Source Unit") then 
          .Cells(intlastRow,inti).Value=strSourceUnit
          ElseIf UCASE(strText)=UCase("Unit Type") then 
              .Cells(intlastRow,inti).Value=strUnitType  
          ElseIf isDate(strText)  then
              strStartcolumn=inti
              Exit For
          End if 
       Next 
   
   Delay 5000 , "Creating a new series.."   
   
   'Mark Good 
   Call sClicKMarkGood(2,strTestDataFile) 
   Delay 5000, "Please wait"
   
   'Upload Series   
   Call sClickUpload(2,strTestDataFile)
   Delay 5000, "Please wait"
   strSeriesID = .Cells(intlastRow,1).Value 
  
   If strAddTimepoint = "Yes"then
      'Click no to file close
       Call sClickonInformation(2,"No")  
       Delay 2000
       'Click on Refresh
       Call sClickRefresh(2,strTestDataFile) 
       Delay 2000   
       Call sExcelFullHistory()
     
       'Add the required Timepoint
      With objSTPXls
      With .Sheets(STPSheetName).Select
      End With      
      With .WorkSheets(STPSheetName)
          intcount=0
          if strStartcolumn=0 then
          End if
          For intj= (strStartcolumn + 1) to lastColumn 
            If IsEmpty(.UsedRange.Cells(intlastRow, intj).Value) = True AND (.UsedRange.Cells(r, intj).Text) ="" Then
              if intcount<=5 then
                .Cells(intlastRow,intj).select
                .Cells(intlastRow,intj).Value=strTimepoints
                strTimepoints=strTimepoints + 1
              Else
                Exit For
              End if 
              intcount=intcount+1 
            End If  
          Next
      End With
      End With
    
     'Mark Good 
     Call sClicKMarkGood(strExcelNumber,strTestDataFile) 
     Delay 5000, "Please wait"
   
     'Upload Series   
     Call sClickUpload(strExcelNumber,strTestDataFile)
     Delay 5000, "Please wait" 
   
     'Click yes on Close window
     Call sClickonInformation(strExcelNumber,"No")  
     'Click on Refresh
     Delay 200
     Call sClickRefresh(strExcelNumber,strTestDataFile)
     Delay 2000               
     Call sExcelFullHistory     
   Else
    Call sClickonInformation(strExcelNumber,"Yes")   
    Delay 2000   
   End If
  End With 
  End With
  
  'Call  ExcelProcessKill
  Delay(2000)
  
  If Err.Number > 0 Then
    log.Warning("Error in 'sCreateSeriesModified' ,Error Description : " & Err.Description &" Error Number: "& Err.Number)
    Err.Clear
  End If
  
End Sub



'*****************************************************************************************************************************

Sub sClicKMarkGood(ExcelNumber,strTestDataFile)
'Sub sClicKMarkGood()

  On Error Resume Next
  
  Dim NetUIHWND, strTemp
'  ExcelNumber = 2
'  strTestDataFile = "YYY-Automation_UIT4_1-Copy"
  
  Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
  wndXLMAIN.Activate

  Delay 1000
  Set NetUIHWND = Sys.Process("EXCEL", ExcelNumber).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
 
  strTemp = "MSAAObject(""pt_EDGE"")"
  Set objEdge = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objEdge.Click()
  
  strTemp = "MSAAObject(""btn_Mark_Good"")"
  Set objMarkGood = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objMarkGood.Click()
 
  log.message "MarkGood button is clicked"
  
  If Err.Number > 0 Then
    log.Warning("Error in 'sClicKMarkGood' ,Error Description : " & Err.Description &" Error Number: "& Err.Number)
    Err.Clear
  End If
End Sub

'*************************************************************************************************************************
Sub sClicKCancelMarkGood(ExcelNumber,strTestDataFile)
'Sub sClicKCancelMarkGood()

  On Error Resume Next
  
  Dim NetUIHWND, strTemp
 ' ExcelNumber = 2
  'strTestDataFile = "YYY-Automation_UIT4_1-ProjectTeam"
  
  Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
  wndXLMAIN.Activate

  Delay 1000
 ' Set NetUIHWND = Sys.Process("EXCEL", ExcelNumber).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
  Set NetUIHWND = Sys.Process("EXCEL", 2).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
 
  strTemp = "MSAAObject(""pt_EDGE"")"
  Set objEdge = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objEdge.Click()
  
  strTemp = "MSAAObject(""btn_Cancel_Mark_Good"")"
  Set objMarkGood =  NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objMarkGood.Click()
 
  log.message "CancelMarkGood button is clicked"
  
  If Err.Number > 0 Then
    log.Warning("Error in 'sClicKCancelMarkGood' ,Error Description : " & Err.Description &" Error Number: "& Err.Number)
    Err.Clear
  End If
End Sub
'*********************************************************************************************************************8


Sub sClickTimePointDetails(ExcelNumber,strTestDataFile)

'Sub sClickTimePointDetails()
     On Error Resume Next
  
'    ExcelNumber= 2
'    strTestDataFile = "YYY-PRTAAA-Series Mapping"
'    strTestCase_no = "TC_PRT_05"
  
  Dim NetUIHWND, strTemp
  Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
  wndXLMAIN.Activate
  Delay 1000  
  Set NetUIHWND = Sys.Process("EXCEL", ExcelNumber).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", ExcelNumber).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
 
  
  strTemp = "MSAAObject(""pt_EDGE"")"
  Set objEdge = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objEdge.Click()
  
  
  strTemp ="MSAAObject(""btn_Timepoint_Details"")"
  Set objEdge = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objEdge.Click()
  
   log.message "Timepoint_Details button is clicked"
   Delay 200
   
   'Set the Value to Priliminary/Final
  Set objGrid = Sys.Process("EXCEL", ExcelNumber).WinFormsObject("TPDetailsForm").WinFormsObject("mainPanel").WinFormsObject("gridView")
   If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_PRT_04"))Then
      Delay 200
      sValue = objGrid.ChildRows.Item(0).Cells.Item(2).get_Value
      if  sValue  <> "F"  Then
         objGrid.ChildRows.Item(0).Cells.Item(2).set_Value("F")
      Else
        Sys.Process("EXCEL", ExcelNumber).WinFormsObject("TPDetailsForm").WinFormsObject("mainPanel").WinFormsObject("buttonPanel").WinFormsObject("cancelButton").Click()
        Exit Sub 
      End If
    ElseIf Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SS_PRT17")) Then 
        objGrid.ChildRows.Item(0).Cells.Item(2).set_Value("T")
    Else
        objGrid.ChildRows.Item(0).Cells.Item(2).set_Value("P")  
  End If
    
  Call  objGrid.Click(295, 143)
  
  'Click on Save Button
  Sys.Process("EXCEL", ExcelNumber).WinFormsObject("TPDetailsForm").WinFormsObject("mainPanel").WinFormsObject("buttonPanel").WinFormsObject("saveButton").Click()
  Delay 200
  If  Ucase(Trim(strTestCase_no)) <> Ucase(Trim("TC_PRT_04"))Then
    strTemp ="WPFObject(""Button_Yes"")"
    Set objTemp =Sys.Process("EXCEL", 2).WPFObject("HwndSource: CustomMessageBoxWindow", "Warning").FindChild("Name",strTemp,50,true)
    objTemp.Click()
  End If
  If Err.Number > 0 Then
    log.Warning("Error in 'sClickUpload' ,Error Description : " & Err.Description &" Error Number: "& Err.Number)
    Err.Clear
  End If
  
End Sub

'*************************************************************************************************************************

Sub sClickUpload(ExcelNumber,strTestDataFile)
'Sub sClickUpload()
  On Error Resume Next
  
  Dim NetUIHWND, strTemp
  'ExcelNumber = 2
  'strTestDataFile = "YYY-Automation-Test Source 1"
  'strTestCase_no = "TC_STP_PRT18_19_20"
  
  Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
  wndXLMAIN.Activate
  Delay 1000  
  Set NetUIHWND = Sys.Process("EXCEL", ExcelNumber).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", ExcelNumber).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
 
  strTemp = "MSAAObject(""pt_EDGE"")"
  Set objEdge = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objEdge.Click()
  
  strTemp = "MSAAObject(""btn_Upload"")"
  Set objUpload = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objUpload.Click()
  
  Delay 2000
  If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_STP_PRT18_19_20"))Then
    strTemp= "WPFObject(""Button_No"")"  
    Set objTemp = Sys.Process("EXCEL", 2).WPFObject("HwndSource: CustomMessageBoxWindow", "Warning").WPFObject("CustomMessageBoxWindow", "Warning", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).FindChild("Name",strTemp,10,True)
    If objTemp.Exists Then 
      objTemp.Click()   
      strTCRemarks = strTCRemarks & "<br />" &"TC_STP_PRT19: QC Settings are uploaded"
      log.message strTCRemarks 
      strTestCaseResult = "PASS"
    Else
      strTCRemarks = strTCRemarks & "<br />" &"TC_STP_PRT19: QC Settings are not uploaded"
      log.message strTCRemarks 
      strTestCaseResult = "FAIL"
    End If
  End if

  log.message "Upload button is clicked"
  
  If Err.Number > 0 Then
    log.Warning("Error in 'sClickUpload' ,Error Description : " & Err.Description &" Error Number: "& Err.Number)
    Err.Clear
  End If
  
End Sub

'********************************************************************************************************************
Sub sClickQCResult(ExcelNumber,strTestDataFile)
'Sub sClickQCResult()
  On Error Resume Next
  
  Dim NetUIHWND, strTemp
'  ExcelNumber = 2
'  strTestDataFile = "YYY-Automation_UIT4_1-ProjectTeam"
  
  Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
  wndXLMAIN.Activate
  Delay 1000  
  Set NetUIHWND = Sys.Process("EXCEL", ExcelNumber).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", ExcelNumber).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
 
  strTemp = "MSAAObject(""pt_EDGE"")"
  Set objEdge = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objEdge.Click()
  
  strTemp = "MSAAObject(""split_button_QC_Result"")"
  Set objUpload = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objUpload.Click()


  log.message "QC_result button is clicked"
  
  If Err.Number > 0 Then
    log.Warning("Error in 'sClickQCResult' ,Error Description : " & Err.Description &" Error Number: "& Err.Number)
    Err.Clear
  End If
  
End Sub

'********************************************************************************************************************
Sub sClickQCSetting(ExcelNumber,strTestDataFile)
'Sub sClickQCSetting()
  On Error Resume Next
  
  Dim NetUIHWND, strTemp
  ExcelNumber = 2
  strTestDataFile = "YYY-Automation_UIT4_1-ProjectTeam"
  
  Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
  wndXLMAIN.Activate
  Delay 1000  
  Set NetUIHWND = Sys.Process("EXCEL", ExcelNumber).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", ExcelNumber).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
 
  strTemp = "MSAAObject(""pt_EDGE"")"
  Set objEdge = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objEdge.Click()
  
  strTemp = "MSAAObject(""btn_QC_Setting"")"
  Set objUpload = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objUpload.Click()


  log.message "QC_result button is clicked"
  
  If Err.Number > 0 Then
    log.Warning("Error in 'sClickQCResult' ,Error Description : " & Err.Description &" Error Number: "& Err.Number)
    Err.Clear
  End If
  
End Sub

'********************************************************************************************************************



Sub sClickQuickChart(ExcelNumber,strTestDataFile)
'Sub sClickUpload()
  On Error Resume Next
  
  Dim NetUIHWND, strTemp
  'ExcelNumber = 2
  'strTestDataFile = "YYY-Automation-Test Source 1"
  
  Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
  wndXLMAIN.Activate
  Delay 1000 
 ' Sys.Process("EXCEL", 2).Window("XLMAIN", "YYY-Automation_UIT4_1-ProjectTeam - Excel", 1).Window("EXCEL2", "", 3).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1).MSAAObject("property_page_Ribbon").MSAAObject("pane_Lower_Ribbon").MSAAObject("client").MSAAObject("property_page_EDGE") 
  Set NetUIHWND = Sys.Process("EXCEL", 2).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", ExcelNumber).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
 
  strTemp = "MSAAObject(""pt_EDGE"")"
  Set objEdge = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objEdge.Click()
  
  strTemp = "MSAAObject(""btn_Quick_Chart"")"
  Set objUpload = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objUpload.Click()


  log.message "Upload button is clicked"
  
  If Err.Number > 0 Then
    log.Warning("Error in 'sClickQuickChart' ,Error Description : " & Err.Description &" Error Number: "& Err.Number)
    Err.Clear
  End If
  
End Sub
'**************************************************************************************************************************
'Sub sClickEdge(ExcelNumber,strTestDataFile)
Sub sClickEdge()
  On Error Resume Next
  
  Dim NetUIHWND, strTemp
  ExcelNumber = 2
  strTestDataFile = "YYY-Automation_UIT4_1-ProjectTeam"
  
  Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
  wndXLMAIN.Activate
  Delay 1000  
  Set NetUIHWND = Sys.Process("EXCEL", ExcelNumber).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", ExcelNumber).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
 
  strTemp = "MSAAObject(""pt_EDGE"")"
  Set objEdge = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objEdge.Click()
  
  log.message "Edge button is clicked"  
  
  If Err.Number > 0 Then
    log.Warning("Error in 'sClickEdge' ,Error Description : " & Err.Description &" Error Number: "& Err.Number)
    Err.Clear
  End If
  
  Set  objUpload = Nothing 
  
End Sub
'************************************************************************************************************************
Sub sClickPartialUpload(ExcelNumber,strTestDataFile)
'Sub sClickPartialUpload()
  On Error Resume Next
  
  Dim NetUIHWND, strTemp
'  ExcelNumber = 2
'  strTestDataFile = "YYY-Automation_UIT4_1-Compute"
  
  Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
  wndXLMAIN.Activate
  Delay 1000  
  Set NetUIHWND = Sys.Process("EXCEL", ExcelNumber).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", ExcelNumber).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
 
  strTemp = "MSAAObject(""pt_EDGE"")"
  Set objEdge = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objEdge.Click()
  
  strTemp = "MSAAObject(""btn_Partial_Upload"")"
  Set objUpload = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objUpload.Click()


  log.message "Partial Upload button is clicked"
  
  'Click on Information module
  Delay 500
  strTemp = "WPFObject(""Button_OK"")"  
  Set objUpload = Sys.Process("EXCEL", 2).WPFObject("HwndSource: CustomMessageBoxWindow", "Information").FindChild("Name",strTemp,50,True)
  Call objUpload.Click()
  
  If Err.Number > 0 Then
    log.Warning("Error in 'sClickUpload' ,Error Description : " & Err.Description &" Error Number: "& Err.Number)
    Err.Clear
  End If
  
  Set  objUpload = Nothing 
  
End Sub
'************************************************************************************************************************


Sub sClickonInformation(ExcelNumber,strFileClose)
  On Error Resume Next
  Delay 1000 
  
  'Click ok On Information Box
  Set File = Sys.Process("EXCEL", ExcelNumber).Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Information"")",600000)
  If File.Exists Then
    File.Click
    Set objOk = Sys.Process("EXCEL", ExcelNumber).WPFObject("HwndSource: CustomMessageBoxWindow", "Information").WPFObject("CustomMessageBoxWindow", "Information", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).Waitchild("WPFObject(""Button_OK"")",10000)
    objOk.Click
    log.message "ok button on Information window is clicked"
  End if
  
  Set File = Sys.Process("EXCEL", ExcelNumber).Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Question"")",3000000)
  If File.Exists Then
    'Click on Yes/No to close file
    If strFileClose = "Yes" then
      Set objYes= Sys.Process("EXCEL", ExcelNumber).WPFObject("HwndSource: CustomMessageBoxWindow", "Question").WPFObject("CustomMessageBoxWindow", "Question", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).Waitchild("WPFObject(""Button_Yes"")",10000)
      objYes.Click
      log.message "Yes button on File close window is clicked"
    Else
       Set objNo = Sys.Process("EXCEL", ExcelNumber).WPFObject("HwndSource: CustomMessageBoxWindow", "Question").WPFObject("CustomMessageBoxWindow", "Question", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).Waitchild("WPFObject(""Button_No"")",10000)
       objNo.Click
       log.message "No Button File Close Window  is clicked"
    End If
  End IF    
  
  If Err.Number > 0 Then
    log.Warning("Error in 'sClickonInformation' ,Error Description : " & Err.Description &" Error Number: "& Err.Number)
    Err.Clear
  End If 
End Sub
'*******************************************************************************************************************************************************
'Click on Refresh Button
Sub sClickRefresh(ExcelNumber,strTestDataFile)
'Sub sClickRefresh()
  On Error Resume Next
  
  Dim NetUIHWND, strTemp
  
  Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
  wndXLMAIN.Activate
  Delay 1000
 Set NetUIHWND = Sys.Process("EXCEL", ExcelNumber).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", ExcelNumber).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
  
  strTemp = "MSAAObject(""pt_EDGE"")"
  Set objEdge = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objEdge.Click()
  
  strTemp = "MSAAObject(""btn_Refresh"")"
  Set objRefresh = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objRefresh.Click()
  
  log.message "Refresh button is clicked"
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sClickRefresh()'function - " & Err.Description)
    Err.Clear
  End If
End Sub

'********************************************************************************************************************************

Sub sLoadLayout()

Dim objEdge,strTemp,objTemp

On Error Resume Next
  'strEnvi = "Edge ( US Integration )"
  
 
  strTemp="WPFObject(""LayoutPanel"", """", 1)"
  Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).FindChild("Name",strTemp,50,True)
  If objTemp.Exists = False then  
    Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("RibbonControl").WPFObject("RibbonSelectedPageControl", "", 1).WPFObject("RibbonPagesControl", "", 1).WPFObject("RibbonPageGroupsControl", "", 1).WPFObject("RibbonPageGroupControl", "", 1).WPFObject("BarItemLinkInfo", "", 7).WPFObject("BarButtonItemLinkControl", "", 1).Click
    Call sEdgeProcessor
    strTemp="WPFObject(""LayoutPanel"", """", 1)"
    Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    If objTemp.Exists = False then
      strTestCaseResult= "FAIL"
      Exit Sub
    End If
    strTCRemarks="Layout Form Loaded"
   ElseIF objTemp.Exists = True then   
      If objTemp.Caption <> "Layout" then
        Call CloseWindow()
        Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("RibbonControl").WPFObject("RibbonSelectedPageControl", "", 1).WPFObject("RibbonPagesControl", "", 1).WPFObject("RibbonPageGroupsControl", "", 1).WPFObject("RibbonPageGroupControl", "", 1).WPFObject("BarItemLinkInfo", "", 7).WPFObject("BarButtonItemLinkControl", "", 1).Click
        Call sEdgeProcessor
        strTemp="WPFObject(""LayoutPanel"", """", 1)"
        Set objTemp=objEdge.WaitChild(strTemp,50000)
        If objTemp.Exists = False then
          strTestCaseResult = "FAIL"
          Exit Sub
        End If
        strTCRemarks="Layout Form Loaded successfully"
      End if 
  End If
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sLoadLayout()' ,Error Description : " & Err.Description &" Error Number: "& Err.Number)
    Err.Clear
  End If
End Sub

'********************************************************************************************************************************
Sub sClearCache()

On Error Resume Next

    Dim ISI_CeicDataManager_Startup,strTemp,objTemp
    Dim objCDM_MDI
    'Dim strEnvi
   ' strEnvi = "Edge ( US Integration )"
    strTemp="WinFormsObject(""UiCommandBar1"")"
    Set objCDM_MDI=Sys.Process("ISI.CeicDataManager.Startup").FindChild("Name",strTemp,5,True)
    If objCDM_MDI.Exists = False then
        strTestCaseResult="FAIL"
        log.Message "UiCommandBar1 not found"
    Else
      objCDM_MDI.SetFocus
    End If
    Call sys.Keys("~n")
     Delay 2000,"Pls Wait.."
     Sys.Keys("[Down][Down][Down]") 
     Sys.KEYS("a")

    strTemp="WinFormsObject(""ClearCacheMsgBox_Form"")"
    Set objTemp=Sys.Process("ISI.CeicDataManager.Startup").WaitChild(strTemp,3000)
    If objtemp.Exists = True then
      Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("ClearCacheMsgBox_Form").WinFormsObject("TableLayoutPanel2").WinFormsObject("UiButton_OK").Click
    End If
    'Selecting The required Environment
     Call sys.Keys("~nu")
     Delay 1000,"Pls Wait.."           
     Set objTemp=Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("ConnectionSetup_Form")
     Set ObjPopup = Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("ConnectionSetup_Form").WinFormsObject("UserProxySettings1").WinFormsObject("ComboBox_WebServiceURL")
      
     If objTemp.Exists = True And Ucase(Trim(strEnvi)) = Ucase(Trim("Edge ( US Integration )")) Then            
        If Ucase(Trim(ObjPopup.Text)) = UCase(Trim("Default")) Then 
          ObjPopup.Keys "[Down][Down][Down]"
          If Ucase(Trim(ObjPopup.Text))= Ucase(Trim("Integration")) Then 
            Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("ConnectionSetup_Form").WinFormsObject("Panel1").WinFormsObject("Button_OK").Click
            log.Message "Integration Environment is Set"          
          End If                   
        End If 
        Else If  objTemp.Exists = True And Ucase(Trim(strEnvi)) = Ucase(Trim("Edge ( US Production )")) then 
          If Ucase(Trim(ObjPopup.Text)) = UCase(Trim("Integration")) Then
            ObjPopup.Keys ("[Up][Up][Up]") 
            If Ucase(Trim(ObjPopup.Text))= Ucase(Trim("Default")) Then 
             Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("ConnectionSetup_Form").WinFormsObject("Panel1").WinFormsObject("Button_OK").Click
              log.Message "Production Environment is Set"      
           End If 
          End If
        End If                
      End If
      If ObjPopup.Exists Then 
        sys.Keys "~[F4]"
      End If
      
     ''Closing CDM
    sys.Keys "~[F4]"
    Set objTemp=Sys.WaitChild("Process(""ISI.CeicDataManager.Startup"")",100000)
    If objTemp.Exists = True then
        strTemp="WinFormsObject(""CDMYesNoDialog"")"
        Set objTemp=Sys.Process("ISI.CeicDataManager.Startup").WaitChild(strTemp,10000)
        If objTemp.Exists = True then
          Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMYesNoDialog").WinFormsObject("TableLayoutPanel1").WinFormsObject("UiButton_Yes").Click
        End If
    End If
    Delay 5000,"Closing CDM"
    strTCRemarks="Cleared Cache"
    
    If Err.Number > 0 Then
    Log.Warning("Error in 'sClearCache()' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'******************************************************************************************************************************
Sub sCDMTree(strParameters)
'Sub sCDMTree
  On Error Resume Next
  Dim objGrid,intRow,strTopic,intSectionCount,intI,intJ,intK,strSearch1,strs,strSearch2,strSearch3

    strSearch1=getSplitValue(strParameters,"SEARCH1")
    strSearch2=getSplitValue(strParameters,"SEARCH2")
    strSearch3=getSplitValue(strParameters,"SEARCH3")
    
'    strSearch1="Albania"
'    strSearch2="Albania: National Accounts"
'    'strSearch3="Sample1"
'    strCategory= aqdatetime.Now
'     DescText="6-21-2017 12_20_42 PM"

    strTemp ="WinFormsObject(""GridEX_Tree"")"
    Set objGrid=Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMMain_MDIParent").WinFormsObject("MdiClient", "").WinFormsObject("Layout_Form").WinFormsObject("Panel_Rebar").FindChild("Name",strTemp,10,True)
    intRow=objGrid.get_RowCount

    ''Expanding Topic
    For IntI=0 to intRow-1
        objGrid.set_Row(intI)
        strTopic=objGrid.CurrentRow.DataRow.Row.TP_WSValue_Name.ToString
        If strTopic=strSearch1 then        
            objGrid.CurrentRow.set_Expanded(True)
            Exit For
        End If
    Next
    ''Expanding Section
    For IntJ=1 to intRow
        objGrid.set_Row(intI + intJ)
        strTopic=objGrid.CurrentRow.DataRow.Row.SC_WSValue_Name.ToString
        If strTopic=strSearch2 then
            objGrid.CurrentRow.set_Expanded(True)
            Exit For
        End If
    Next
    ''Expanding Section Table
    intId = 0
    For IntK=1 to intRow
        objGrid.set_Row(intI + intJ + intK)
        strTopic=objGrid.CurrentRow.DataRow.Row.TB_WSValue_Name.ToString         
     If strTopic=DescText then        
            objGrid.CurrentRow.set_Expanded(True)
            sys.Keys "~s+A"    
            Delay 4000,"Refresh.."
            objGrid.set_Row(intI + intJ + intK+1)
            intId=objGrid.CurrentRow.DataRow.Row.SR_SeriesId
            Exit For
     End If
    Next
    
    Delay 2000,"New Table Created"
    ''Closing    
    Set objTemp=Sys.WaitChild("Process(""ISI.CeicDataManager.Startup"")",120000)
    sys.Keys "~[F4]"
    If objTemp.Exists = True then
        strTemp="WinFormsObject(""CDMYesNoDialog"")"
        Set objTemp=Sys.Process("ISI.CeicDataManager.Startup").WaitChild(strTemp,120000)
        If objTemp.Exists = True then
          Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMYesNoDialog").WinFormsObject("TableLayoutPanel1").WinFormsObject("UiButton_Yes").Click
        Else
          strTestCaseResult = "ABORT"
  	      strTCRemarks="CDM Closing Dialog box not found"
          Exit Sub  
        End If
    Else
        strTestCaseResult = "ABORT"
	      strTCRemarks="CDM Dialog box not found"
        Exit Sub  
    End If
    Delay 15000,"Closing CDM"
    strTCRemarks="New Table Created" & "<br />" &  "Series Id :" & intId 
    log.Message(intId&":"&strSeriesId)
    If NOT IsEmpty(strSeriesId) then
      If cint(intId)=cint(strSeriesId) then
        strTCRemarks=strTCRemarks& "<br />" & "Series Id verified in Source/Layout/CDM"       
        log.Message strTCRemarks
       Else 
        strTCRemarks= strTCRemarks& "<br />" & "Series Id is not match Source/Layout and CDM"
        log.Message strTCRemarks
      End If      
    End If
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sCDMTree()' ,Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'*************************************************************************************************************************************

Sub sUpdateTimepoints(strParameters)
'Sub sUpdateTimepoints

On Error Resume Next

  Dim STPSheetName,strTestDataFile
  Dim strAliasName,strFileName,STP,strTimepoints,strText,strStartcolumn
  Dim objArray,oSTP_ExcelObj,objSTPXls,objActiveWB,netUIHWND,wndEXCEL7
  Dim intlastRow,lastColumn,inti,strTemp,objErrmsg,objOkClick,i,FilePath,File
  
  STP= getSplitValue(strParameters,"STP") 
  strTestDataFile=getSplitValue(strParameters,"TestDataFile") 
  STPSheetName= getSplitValue(strParameters,"STPSheetName")
  strTimepoints = getSplitValue(strParameters,"Timepoints")
  strExcelNumber = getSplitValue(strParameters,"ExcelNumber")
  strExcelNumber = Cint(strExcelNumber)
'    STPSheetName="A1_1"
'    STP="Test Source 1"
'    strTestDataFile="YYY-Automation-Test Source 1"
'    strTimepoints="5"


    
'  objArray = Sys.FindAllChildren("ProcessName","EXCEL", 1,True)
'  For i=0 to ubound(objArray)
'    log.Message objArray(i).FullName
'    set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*" & strTestDataFile & "*",1,True)
'    If oSTP_ExcelObj.Exists = True Then
'      strAliasName=objArray(i).mappedname
'      strFileName=oSTP_ExcelObj.WndCaption
'      If instr(strFileName,"Microsoft Excel")>0 then
'        strFileName=GetFileName(strFileName,"Microsoft Excel")
'      Else
'        strFileName=GetFileNameExcel13(strFileName," - Excel")
'      End If
'      FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")
'      FilePath=FilePath & "\" & iif(instr(strFileName,"xlsx") > 0,strFileName,strFileName & ".xlsx")  
'      log.Message FilePath
'      Exit For
'    Else
'      log.Message "STP file not found in " & objArray(i).FullName
'    End If
'  Next
   

'Get the File Loacation 
  FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")&"\"&strTestDataFile & ".xlsx"
  Set objSTPXls=GetObject(FilePath)
  With objSTPXls
    With .Sheets(STPSheetName).Select
    End With

    With .WorkSheets(STPSheetName)
      Dim r
        Delay Status_Wait, "Finding last Row the Excel sheets.. Pls wait.."
        For r = 1 To .UsedRange.Rows.Count
          If IsEmpty(.UsedRange.Cells(r, 1).Value) = True AND (.UsedRange.Cells(r, 1).Text) ="" Then           
           intlastRow=r
           Exit For
          End  If 
        Next
        intlastRow=intlastRow-1
        inti=3
        lastColumn=.UsedRange.Columns.Count
         For inti = 3 to lastColumn
          strText=.Cells(2,inti)
          If isDate(strText)  then
              strStartcolumn=inti
              Exit For
          End if 
         Next  
        strStartcolumn=strStartcolumn+1
        .Cells(intlastRow,strStartcolumn).Select
        For Point = 0 to 6 
          .Cells(intlastRow,strStartcolumn+Point).Value=strTimepoints
          strTimepoints= strTimepoints+1
        Next       
        Delay 2000
    
       'Mark Good 
      Call sClicKMarkGood(strExcelNumber,strTestDataFile) 
      Delay 5000, "Please wait"
   
      'Upload Series   
       Call sClickUpload(strExcelNumber,strTestDataFile)
       Delay 5000, "Please wait"     
       'Click on Information 
       Call sClickonInformation(strExcelNumber,"No")  
                 
        With objSTPXls
          With .WorkSheets(STPSheetName)
               .Cells.Select
                'Refresh Series
                Delay 200
                Call sClickRefresh(strExcelNumber,strTestDataFile)
                Delay 2000
                Call sExcelFullHistory
                .Cells(intlastRow,strStartcolumn).Select
          End With
        End With
  
    End With
  End With 
  log.Message "Updated Timepoints Successfully " 
  strTCRemarks = "Updated Timepoints Successfully"
  strTestCaseResult = "PASS"

  Call  ExcelProcessKill
  Delay(2000)
  
  Call SClosesource()
  

  If Err.Number > 0 Then
    Log.Warning("Error in 'sUpdateTimepoints',Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub 

'***********************************************************************************************************************

Sub sReadCDMTree(strParameters)

On Error Resume Next 


  Dim objGrid,intRow,strTopic,intSectionCount,intI,intJ,intK,strSearch1,strs,strSearch2,strSearch3
  Dim FirstObsDate,LastObsDate,NumOfTP

    strSearch1=getSplitValue(strParameters,"SEARCH1")
    strSearch2=getSplitValue(strParameters,"SEARCH2")
    strSearch3=getSplitValue(strParameters,"SEARCH3")
    
    
'    DescText="12-16-2019 3_19_09 PM"
'    strSearch1="Z-Testing Topic(IT-use only)"
'    strSearch2="Automation"
'    strSearch3="Sample1"

    strTemp ="WinFormsObject(""GridEX_Tree"")"
    Set objGrid=Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMMain_MDIParent").WinFormsObject("MdiClient", "").WinFormsObject("Layout_Form").WinFormsObject("Panel_Rebar").FindChild("Name",strTemp,10,True)
    intRow=objGrid.get_RowCount

    ''Expanding Topic
    For IntI=0 to intRow-1
        objGrid.set_Row(intI)
        strTopic=objGrid.CurrentRow.DataRow.Row.TP_WSValue_Name.ToString
        If strTopic=strSearch1 then        
            objGrid.CurrentRow.set_Expanded(True)
            Exit For
        End If
    Next
    ''Expanding Section
    For IntJ=1 to intRow
        objGrid.set_Row(intI + intJ)
        strTopic=objGrid.CurrentRow.DataRow.Row.SC_WSValue_Name.ToString
        If strTopic=strSearch2 then        
            objGrid.CurrentRow.set_Expanded(True)
            Exit For
        End If
    Next
    ''Expanding Section Table
    intId =""
    FirstObsDate = ""
    LastObsDate =""
    NumOfTP =""
    For IntK=1 to intRow
        objGrid.set_Row(intI + intJ + intK)
        strTopic=objGrid.CurrentRow.DataRow.Row.TB_WSValue_Name.ToString
        If strTopic=DescText then        
            objGrid.CurrentRow.set_Expanded(True)
            sys.Keys "~s+A"    
            Delay 2000,"Refresh.."
            objGrid.set_Row(intI + intJ + intK+1)
            intId=objGrid.CurrentRow.DataRow.Row.SR_SeriesId
            FirstObsDate=objGrid.CurrentRow.DataRow.Row.SR_DisplayStartDate
            LastObsDate=objGrid.CurrentRow.DataRow.Row.SR_DisplayEndDate
            NumOfTP=objGrid.CurrentRow.DataRow.Row.SR_NumPoints
            strObserveration = NumOfTP
            Exit For
        End If
    Next

    Delay 5000,"New Table Created"
    ''Closing
    sys.Keys "~[F4]"
    Set objTemp=Sys.WaitChild("Process(""ISI.CeicDataManager.Startup"")",1200000)
    If objTemp.Exists = True then
        strTemp="WinFormsObject(""CDMYesNoDialog"")"
        Set objTemp=Sys.Process("ISI.CeicDataManager.Startup").WaitChild(strTemp,1200000)
        If objTemp.Exists = True then
          Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMYesNoDialog").WinFormsObject("TableLayoutPanel1").WinFormsObject("UiButton_Yes").Click
        Else
          strTestCaseResult = "ABORT"
  	      strTCRemarks="CDM Closing Dialog box not found"
          Exit Sub  
        End If
    Else
        strTestCaseResult = "ABORT"
	      strTCRemarks="CDM Dialog box not found"
        Exit Sub  
    End If
    Delay 5000,"Closing CDM"
    strTCRemarks="FirstObsDate="&FirstObsDate&"   LastObsDate="&LastObsDate&"   NumOfTP="&NumOfTP
    log.Message strTCRemarks
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sReadCDMTree', Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
  End If    
End Sub

'*************************************************************************************************************************************
Sub sReadCDMTree_1(strParameters)

On Error Resume Next 


  Dim objGrid,intRow,strTopic,intSectionCount,intI,intJ,intK,strSearch1,strs,strSearch2,strSearch3
  Dim FirstObsDate,LastObsDate,NumOfTP

    strSearch1=getSplitValue(strParameters,"SEARCH1")
    strSearch2=getSplitValue(strParameters,"SEARCH2")
    strSearch3=getSplitValue(strParameters,"SEARCH3")
    
    
'    DescText="12-16-2019 3_19_09 PM"
'    strSearch1="Z-Testing Topic(IT-use only)"
'    strSearch2="Automation"
'    strSearch3="Sample1"

    strTemp ="WinFormsObject(""GridEX_Tree"")"
    Set objGrid=Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMMain_MDIParent").WinFormsObject("MdiClient", "").WinFormsObject("Layout_Form").WinFormsObject("Panel_Rebar").FindChild("Name",strTemp,10,True)
    intRow=objGrid.get_RowCount

    ''Expanding Topic
    For IntI=0 to intRow-1
        objGrid.set_Row(intI)
        strTopic=objGrid.CurrentRow.DataRow.Row.TP_WSValue_Name.ToString
        If strTopic=strSearch1 then        
            objGrid.CurrentRow.set_Expanded(True)
            Exit For
        End If
    Next
    ''Expanding Section
    For IntJ=1 to intRow
        objGrid.set_Row(intI + intJ)
        strTopic=objGrid.CurrentRow.DataRow.Row.SC_WSValue_Name.ToString
        If strTopic=strSearch2 then        
            objGrid.CurrentRow.set_Expanded(True)
            Exit For
        End If
    Next
    ''Expanding Section Table
    intId =""
    FirstObsDate = ""
    LastObsDate =""
    NumOfTP =""
    For IntK=1 to intRow
        objGrid.set_Row(intI + intJ + intK)
        strTopic=objGrid.CurrentRow.DataRow.Row.TB_WSValue_Name.ToString
        If strTopic=DescText then        
            objGrid.CurrentRow.set_Expanded(True)
            sys.Keys "~s+A"    
            Delay 2000,"Refresh.."
            objGrid.set_Row(intI + intJ + intK+1)
            intId=objGrid.CurrentRow.DataRow.Row.SR_SeriesId
            FirstObsDate=objGrid.CurrentRow.DataRow.Row.SR_DisplayStartDate
            LastObsDate=objGrid.CurrentRow.DataRow.Row.SR_DisplayEndDate
            NumOfTP=objGrid.CurrentRow.DataRow.Row.SR_NumPoints
            Exit For
        End If
    Next
    
    If Cint(strObserveration) <> Cint(NumOfTP) Then 
       Delay 2000,"Closing CDM"
       strTCRemarks="FirstObsDate="&FirstObsDate&"   LastObsDate="&LastObsDate&"   NumOfTP="&NumOfTP
       log.Message strTCRemarks
       strTestCaseResult= "PASS"
    Else
      Delay 2000,"Closing CDM"
       strTCRemarks="FirstObsDate="&FirstObsDate&"   LastObsDate="&LastObsDate&"   NumOfTP="&NumOfTP
       log.Message strTCRemarks
       strTestCaseResult= "FAIL"  
    End If

    Delay 2000,"New Table Created"
    ''Closing
    sys.Keys "~[F4]"
    Set objTemp=Sys.WaitChild("Process(""ISI.CeicDataManager.Startup"")",1200000)
    If objTemp.Exists = True then
        strTemp="WinFormsObject(""CDMYesNoDialog"")"
        Set objTemp=Sys.Process("ISI.CeicDataManager.Startup").WaitChild(strTemp,1200000)
        If objTemp.Exists = True then
          Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMYesNoDialog").WinFormsObject("TableLayoutPanel1").WinFormsObject("UiButton_Yes").Click
        Else
          strTestCaseResult = "ABORT"
  	      strTCRemarks="CDM Closing Dialog box not found"
          Exit Sub  
        End If
    Else
        strTestCaseResult = "ABORT"
	      strTCRemarks="CDM Dialog box not found"
        Exit Sub  
    End If
   
  If Err.Number > 0 Then
    Log.Warning("Error in 'sReadCDMTree_1', Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
  End If    
End Sub

'*************************************************************************************************************************************

Sub sDeleteTimepoints(strParameters)

On Error Resume Next

  Dim STPSheetName,strTestDataFile
  Dim strAliasName,strFileName,STP,strTimepoints,strText,strStartcolumn
  Dim objArray,oSTP_ExcelObj,objSTPXls,objActiveWB,netUIHWND,wndEXCEL7
  Dim intlastRow,lastColumn,inti,strTemp,objErrmsg,objOkClick,i,FilePath,File
  
  STP= getSplitValue(strParameters,"STP") 
  strTestDataFile=getSplitValue(strParameters,"TestDataFile") 
  STPSheetName= getSplitValue(strParameters,"STPSheetName")
  strTimepoints = getSplitValue(strParameters,"Timepoints")
  strExcelNumber = getSplitValue(strParameters,"ExcelNumber")
  strExcelNumber = Cint(strExcelNumber)  

    
'  objArray = Sys.FindAllChildren("ProcessName","EXCEL", 1,True)
'  For i=0 to ubound(objArray)
'    log.Message objArray(i).FullName
'    set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*" & strTestDataFile & "*",1,True)
'    If oSTP_ExcelObj.Exists = True Then
'      strAliasName=objArray(i).mappedname
'      strFileName=oSTP_ExcelObj.WndCaption
'      If instr(strFileName,"Microsoft Excel")>0 then
'        strFileName=GetFileName(strFileName,"Microsoft Excel")
'      Else
'        strFileName=GetFileNameExcel13(strFileName," - Excel")
'      End If
'      FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")
'      FilePath=FilePath & "\" & iif(instr(strFileName,"xlsx") > 0,strFileName,strFileName & ".xlsx")  
'      log.Message FilePath
'      Exit For
'    Else
'      log.Message "STP file not found in " & objArray(i).FullName
'    End If
'  Next
'  

'Get the File Loacation 
  FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")&"\"&strTestDataFile & ".xlsx"
  Set objSTPXls=GetObject(FilePath)
  With objSTPXls
    With .Sheets(STPSheetName).Select
    End With

    With .WorkSheets(STPSheetName)
      Dim r
        delay Status_Wait, "Finding last Row the Excel sheets.. Pls wait.."
        For r = 1 To .UsedRange.Rows.Count
          If IsEmpty(.UsedRange.Cells(r, 1).Value) = True AND (.UsedRange.Cells(r, 1).Text) ="" Then           
           intlastRow=r
           Exit For
          End  If 
        Next
        intlastRow=intlastRow-1
        inti=3
        lastColumn=.UsedRange.Columns.Count
        For inti = 3 to lastColumn
          strText=.Cells(2,inti)
          If isDate(strText) then
              strStartcolumn=inti
              Exit For
          End if 
         Next 
         
         'Select First TimePoint 
         Delay 500
         .Cells(intlastRow,strStartcolumn+1).Select 
         Delay 500
        'Click on DeletValue and Mark Good Buttons
         Call sClickDeletValue(2,strTestDataFile)
         Delay 2000
         Call sClicKMarkGood(2,strTestDataFile) 
         Delay 2000
          
         'Select SecondTimePoint 
         Delay 500
        .Cells(intlastRow,strStartcolumn+2).Select
         Delay 500
         'Click on DeletValue and Mark Good Buttons
         Call sClickDeletValue(2,strTestDataFile)
         Delay 2000
         Call sClicKMarkGood(2,strTestDataFile) 
         Delay 2000 ,"Mark Good..."        
          With objSTPXls
            With .WorkSheets(STPSheetName)
                 .Cells.Select
            End With
          End With
         'Mark Good 
         Call sClicKMarkGood(2,strTestDataFile) 
         Delay 2000 
       
        ''Upload Series
      Call sClickUpload(2,strTestDataFile)
       Delay 2000, "Please wait"

    'click on Information Window
    Call sClickonInformation(2,"No")  
      
     'Refresh Series
        With objSTPXls
          With .WorkSheets(STPSheetName)
               .Cells.Select
                Call sClickRefresh(2,strTestDataFile)
                Delay 2000
                Call sExcelFullHistory
                .Cells(intlastRow,strStartcolumn+1).Select 
                'Verify Deleted Value for TC_STP_PRT03
                If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_STP_PRT03"))Then                  
                    sValue = .Cells(intlastRow,strStartcolumn+1).Text
                    .Cells(intlastRow,strStartcolumn+2).Select 
                    sValue1 = .Cells(intlastRow,strStartcolumn+2).Text
                    If sValue = "" and  sValue1 = "" then 
                      strTCRemarks = "Deleted Timepoints Successfully"
                      strTestCaseResult = "PASS"
                    Else
                        strTCRemarks = "Deleted Timepoints not Successfully"
                        strTestCaseResult = "FAIL"
                    End IF                   
                      Exit Sub 
                End If          
          End With
        End With
        strTCRemarks = "Deleted Timepoints Successfully"
        strTestCaseResult = "PASS"
    End With
  End With 
  
  'objSTPXls.Close
  objArray = Sys.FindAllChildren("ProcessName","EXCEL", 5,True)
  For i=0 to ubound(objArray)
    log.Message objArray(i).FullName
    set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*RUN*",1,True)
    If oSTP_ExcelObj.Exists = True Then
    Else
      objArray(i).Close
    End If
  Next
  Delay 10000,"Pls Wait..."
  'Set objSTPXls = Nothing
  Call SClosesource()
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sDeleteTimepoints', Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub 

'*****************************************************************************************************************************
Sub sClickDeletValue(ExcelNumber,strTestDataFile)
'Sub sClickRefresh()
  On Error Resume Next
  
  Dim NetUIHWND, strTemp
 ' ExcelNumber = 2
  'strTestDataFile = "YYY-Automation-Test Source 1"
   Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
   wndXLMAIN.Activate

  Delay 1000
  Set NetUIHWND = Sys.Process("EXCEL", ExcelNumber).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", ExcelNumber).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
 
  strTemp = "MSAAObject(""pt_EDGE"")"
  Set objEdge = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objEdge.Click()
  
  strTemp = "MSAAObject(""btn_Delete_Values"")"
  Set objDeleteValue = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objDeleteValue.Click()
 

  If Err.Number > 0 Then
    Log.Warning("Error in 'sClickDeletValue' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If 

  log.message "DeletValue button is clicked"
End Sub

'***************************************************************************************************************************************
Sub sClickRecoverData(ExcelNumber,strTestDataFile)
'Sub sClickRecoverData()
  On Error Resume Next
  
  Dim NetUIHWND, strTemp
'  ExcelNumber = 2
'  strTestDataFile = "YYY-Automation_UIT4_1-ProjectTeam"
   Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
   wndXLMAIN.Activate

  Delay 1000
  Set NetUIHWND = Sys.Process("EXCEL", ExcelNumber).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
 
  strTemp = "MSAAObject(""pt_EDGE"")"
  Set objEdge = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objEdge.Click()
  
  strTemp = "MSAAObject(""btn_Recover_Data"")"
  Set objDeleteValue = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objDeleteValue.Click()
 

  If Err.Number > 0 Then
    Log.Warning("Error in 'sClickRecoverData' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If 

  log.message "DeletValue button is clicked"
End Sub
'****************************************************************************************************************************************
Sub sClickSeries_information(ExcelNumber,strTestDataFile)
'Sub sClickSeries_information()
  On Error Resume Next
  
  Dim NetUIHWND, strTemp
'  ExcelNumber = 2
'  strTestDataFile = "YYY-Automation_UIT4_1-ProjectTeam"
   Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
   wndXLMAIN.Activate

  Delay 1000
  Set NetUIHWND = Sys.Process("EXCEL", ExcelNumber).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
 
  strTemp = "MSAAObject(""pt_EDGE"")"
  Set objEdge = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objEdge.Click()
  
  strTemp = "MSAAObject(""btn_Series_Information"")"
  Set objDeleteValue = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objDeleteValue.Click()
 

  If Err.Number > 0 Then
    Log.Warning("Error in 'sClickSeries_information' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If 

  log.message "Series_information button is clicked"
End Sub
'****************************************************************************************************************************************
Sub sCheckPendingSTP(strParameters)
On Error Resume Next
'Sub sCheckPendingSTP
    Dim strFileName
     'strFileName="YYY-Automation-Test Source 1"   
     strFileName=getSplitValue(strParameters,"TestDataFile")
     
    objArray = Sys.FindAllChildren("ProcessName","EXCEL", 5,True)
    For i=0 to ubound(objArray)
      log.Message objArray(i).FullName
      set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*RUN*",1,True)
      If oSTP_ExcelObj.Exists = True Then
      Else
        objArray(i).Close
      End If
    Next 
        
    Call SClosesource()
    Call sAutoHidePanelDock("Pending STP")
    Delay 180000, "Please Wait for 3 mins"
    strTemp="WPFObject(""Button"", ""Refresh"", 1)"
    Set objRefresh=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    Call objRefresh.ClickButton
    Call sEdgeProcessor()
    Delay 2000
    
    strTemp="WPFObject(""LayoutGroup"", """", 1)"
    Set objLayout=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    
    strTemp="WPFObject(""GridControl"")"
    Set objGridControl = objLayout.FindChild("Name",strTemp,50,true)    
    strTemp="WPFObject(""SourceLogTableView"")"
    Set objTableView = objLayout.FindChild("Name",strTemp,50,true)
    
    blnFlag=False
    intRefresh=0
    Do
    For i = 0 to objGridControl.wGroupCount-1
    If objGridControl.DataController.GroupInfo.Item(i).GroupValue.OleValue="Test" then
        Call objGridControl.ExpandGroup(i,true)
        Call objTableView.set_FocusedRowHandle(objGridControl.DataController.GroupInfo.Item(i).Handle)
        Call objTableView.SelectRow(objGridControl.DataController.GroupInfo.Item(i).Handle)
        Delay 5000,"Loading Grid Rows"
        Exit For 
    End If
    Next
    
    Do While(objTableView.FocusedRowHandle<0)
    Sys.Keys("[Down]")
    Loop
    
    Do While(objTableView.FocusedRowHandle>0)      
      If objTableView.FocusedRow.StpFileName=strFileName then
        If DateDiff("s",objTableView.FocusedRow.ExportedTimeLocal,aqDateTime.Now)<600 then
         strTCRemarks="STP file name found in Pending STP panel"
         strTestCaseResult = "PASS"
         log.Message(strTCRemarks)
         blnFlag=True
         intRefresh=3
         Exit Do
        Else
         Sys.Keys("[Down]")
        End  If
      Else
       Sys.Keys("[Down]")
      End If
    Loop
    
    If intRefresh<3 then
      strTemp="WPFObject(""Button"", ""Refresh"", 1)"
      Set objRefresh=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
      Call objRefresh.ClickButton
      Call sEdgeProcessor()
      intRefresh=intRefresh+1
    End If
    
    Loop while(intRefresh<3)
    
    Call objGridControl.CollapseGroup(i)
    Call SAutoHidePanelHide("Pending STP")
    
    If blnFlag=False then
      strTCRemarks="STP file name not found"
      strTestCaseResult="FAIL"
    End If
  If Err.Number > 0 Then
    Log.Warning("Error in 'sCheckPendingSTP()'function , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If  
End Sub

'***************************************************************************************************************************************

Sub sAutoHidePanelHide(strPanelName)
On Error Resume Next

  Set objEdge = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager")
  'Set objEdge=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager")       
   objText = objEdge.FindAllChildren("ClrClassName","LayoutGroup", 10,True)
        For i=0 to ubound(objText)
          log.Message objText(i).FullName
          log.Message objText(i).Name
          objCaption = objText(i).FindAllChildren("ClrClassName", "LayoutPanel",10,True)
          For j=0 to ubound(objCaption)
            log.Message objCaption(j).FullName
            log.Message objCaption(j).Name
            if objCaption(j).Content.Caption = strPanelName then 
                  log.Message objCaption(j).FullName
                   Call objCaption(j).ClickR(objCaption(j).top/2,objCaption(j).left/30,0)
                   Call objCaption(j).ClickR(275, 8)
                   Delay 5000,"Pls Wait.."
                  sys.Keys "[Down][Down][Enter]"
                  Delay 5000,"Pls Wait.."
                  Exit For 
              End if 
          Next
        Next 
        
   If Err.Number > 0 Then
    Log.Warning("Error in 'sAutoHidePanelHide' function , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
   End If 
End Sub

'**********************************************************************************************************************************

Sub sAutoHidePanelDock(strPanelName)
On Error Resume Next

  Set objEdge = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager")
    objText = objEdge.FindAllChildren("ClrClassName","AutoHideGroup", 10,True)
        For i=0 to ubound(objText)
          log.Message objText(i).FullName
          log.Message objText(i).Name
          objCaption = objText(i).FindAllChildren("ClrClassName", "AutoHidePaneHeaderItem",10,True)
          For j=0 to ubound(objCaption)
            log.Message objCaption(j).FullName
            log.Message objCaption(j).Name
            If objCaption(j).Content.Caption = strPanelName then 
                  log.Message objCaption(j).FullName
                  objCaption(j).ClickR
                   Delay 2000,"Pls Wait.."
                  sys.Keys "[Down][Enter]"
                  Delay 5000,"Pls Wait.."
                  Call objEdge.Click(8,395)
                   Delay 5000,"Pls Wait.."
                  Exit For 
              End if 
          Next
        Next
    If Err.Number > 0 Then
    Log.Warning("Error in 'sAutoHidePanelDock' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If             
End Sub

'***************************************************************************************************************************
Sub sPendingMG()  

On Error Resume Next  
     
    Call sAutoHidePanelDock("Pending MG/Released")
    
    Delay 3000,"Grid loading..."
    
    strTemp="WPFObject(""LayoutGroup"", """", 1)"
    Set objLayout=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    
    strTemp="WPFObject(""GridControl"")"
    Set objGridControl = objLayout.FindChild("Name",strTemp,50,true)    
    strTemp="WPFObject(""TodoListCounterTableView"")"
    Set objTableView = objLayout.FindChild("Name",strTemp,50,true)
  
    For i = 0 to objGridControl.wGroupCount-1
    If objGridControl.DataController.GroupInfo.Item(i).GroupValue.OleValue="Test" then
        Call objGridControl.ExpandGroup(i,true)
        Call objTableView.set_FocusedRowHandle(objGridControl.DataController.GroupInfo.Item(i).Handle)
        Call objTableView.SelectRow(objGridControl.DataController.GroupInfo.Item(i).Handle)
        Delay 5000,"Loading Grid Rows"
        Exit For 
    End If
    Next
    
    Do While(objTableView.FocusedRowHandle<0)
    log.Message objTableView.FocusedRowHandle
    Sys.Keys("[Down]")
    Loop
    
    Do
    If objTableView.FocusedRow.NotReleased>0 then
     Call objGridControl.ClickRowIndicatorR(objTableView.FocusedRowHandle)
     strTemp="WPFObject(""MenuItem"", ""Force Release"", 4)"
     Set objFRelease=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
     Call objFRelease.Click    
     
     Set objConfirm=Sys.Process("EdgeClient").WaitChild("WPFObject(""HwndSource: WindowContentHolder"", ""Confirm"")",20000)
     If objConfirm.Exists=True then
      Sys.Keys("[Enter]")
     End If
     
     Set objMessageBox=Sys.Process("EdgeClient").WaitChild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Todo List"")",20000)
     If objMessageBox.Exists=True then
      Sys.Keys("O")
      Call sEdgeProcessor
      Delay 3000,"Grid Changing..."
      If objTableView.FocusedRow.NotReleased=0 then
        strTCRemarks="Force Release successful"
        strTestCaseResult="PASS"
        log.Message strTCRemarks
      Else
       strTestCaseResult="FAIL"
       strTCRemarks="Failed Force Release"
      End If      
      End If
     Exit Do
    Else
     Sys.Keys("[Down]")
    End If
    Loop 

    Call objGridControl.CollapseGroup(i)
    Call SAutoHidePanelHide("Pending MG/Released")
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sPendingMG()', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If        
End Sub

'**********************************************************************************************************************************

Sub sUpdateSTPTimepoint(strParameters)
'Sub sUpdateSTPTimepoint
On Error Resume Next

  Dim STPSheetName,strTestDataFile
  Dim strAliasName,strFileName,STP,strTimepoints,strText,strStartcolumn
  Dim objArray,oSTP_ExcelObj,objSTPXls,objActiveWB,netUIHWND,wndEXCEL7
  Dim intlastRow,lastColumn,inti,strTemp,objErrmsg,objOkClick,i,FilePath,File,strRequiredTCName
  
  STP= getSplitValue(strParameters,"STP") 
  strTestDataFile=getSplitValue(strParameters,"TestDataFile") 
  STPSheetName= getSplitValue(strParameters,"STPSheetName")
  strTimepoints = getSplitValue(strParameters,"Timepoints")  
  strExcelNumber = getSplitValue(strParameters,"ExcelNumber")
  strExcelNumber = Cint(strExcelNumber)
  bFalg = False
  
'  strRequiredTCName = "TC_Todo_11"
'    STPSheetName="A1_1"
'    STP="Test Source 1"
'    strTestDataFile="YYY-Automation-Test Source 1"
'    'strTimepoints= "5"
 
   'Get the File Loacation 
  FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")&"\"&strTestDataFile & ".xlsx"
  
  Set objSTPXls=GetObject(FilePath)
  With objSTPXls
    With .Sheets(STPSheetName).Select
    End With
   
    With .WorkSheets(STPSheetName)
      Dim r
        delay Status_Wait, "Finding last Row the Excel sheets.. Pls wait.."
        For r = 1 To .UsedRange.Rows.Count
          If IsEmpty(.UsedRange.Cells(r, 1).Value) = True AND (.UsedRange.Cells(r, 1).Text) ="" Then           
           intlastRow=r
           Exit For
          End  If 
        Next
        intlastRow=intlastRow-1
        inti=3
        lastColumn=.UsedRange.Columns.Count
       For inti = 3 to lastColumn
          strText=.Cells(2,inti)
          If isDate(strText)  then
              strStartcolumn=inti
              Exit For
          End if 
         Next 
           .Cells(intlastRow,strStartcolumn).select
        Dim intcount
        Dim intDelCol,intj,strNewTimepoints, intCol,strStartcolumnNew
        intcount=0
        strNewTimepoints=0
            
        For intj= strStartColumn to lastColumn
          If .Cells(intlastRow,intj).Value=5 then
            'Modify two existing values
            .Cells(intlastRow,intj).Select
            .Cells(intlastRow,intj).Value = 11
            .Cells(intlastRow,intj+1).Select
            .Cells(intlastRow,intj+1).Value = 12
            
            'Delete two existing values            
            .Cells(intlastRow,intj+2).Select            
            'Click on Delet Value
             Call sClickDeletValue(strExcelNumber,strTestDataFile)
            .Cells(intlastRow,intj+3).Select
             Call sClickDeletValue(strExcelNumber,strTestDataFile)
            
            'Add two non-zero values in empty cells 
            .Cells(intlastRow,intj+6).Select
            .Cells(intlastRow,intj+6).Value = 20
            .Cells(intlastRow,intj+7).Select
            .Cells(intlastRow,intj+7).Value = 21
            'Add two zero values in empty cells 
            .Cells(intlastRow,intj+8).Select
            .Cells(intlastRow,intj+8).Value = 0
            .Cells(intlastRow,intj+9).Select
            .Cells(intlastRow,intj+9).Value = 0 
            bFalg = True           
            Exit For            
          End If
        Next
        ''Mark Good
        Delay 1000,"Mark Good..."
        With objSTPXls
          With .WorkSheets(STPSheetName)
               .Cells.Select
          End With
        End With
 
       'Mark Good 
      Call sClicKMarkGood(strExcelNumber,strTestDataFile) 
      Delay 5000, "Please wait"
   
      'Upload Series   
       Call sClickUpload(strExcelNumber,strTestDataFile)
       Delay 5000, "Please wait"

      
       'Click on Information 
       Call sClickonInformation(strExcelNumber,"No")  
         
              'Refresh Series
        With objSTPXls
          With .WorkSheets(STPSheetName)
               .Cells.Select              
                Delay 200
                Call sClickRefresh(2,strTestDataFile)
                'Call sClickRefresh(strExcelNumber,strTestDataFile)
                Delay 2000               
                Call sExcelFullHistory
                .Cells(intlastRow,intj).Select
          End With
        End With
  
    End With
  End With 
  
  If bFalg = True then   
    strTCRemarks = "Updated STP Timepoints Successfully"
    log.Message "Updated STP Timepoints Successfully " 
    strTestCaseResult = "PASS"
  Else
   strTCRemarks = "Updated STP Timepoints is not Successfully"
    log.Message "Updated STP Timepoints is not Successfully " 
    strTestCaseResult = "FAIL"
  End If
  
  'objSTPXls.Close
  objArray = Sys.FindAllChildren("ProcessName","EXCEL", 5,True)
  For i=0 to ubound(objArray)
    log.Message objArray(i).FullName
    Set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*RUN*",1,True)
    If oSTP_ExcelObj.Exists = True Then
    Else
      objArray(i).Close
    End If
  Next
  Delay 5000,"Pls Wait..."
  Call SClosesource()
  If Err.Number > 0 Then
    Log.Warning("Error in 'sUpdateSTPTimepoint', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If 
End Sub

'**********************************************************************************************************************************

Sub sUpdatelog1(strParameters)
'Sub sUpdatelog1()
On Error Resume Next

  strFileName=getSplitValue(strParameters,"TestDataFile")
  strSourceName=getSplitValue(strParameters,"SourceName")
  
'  strEnvi = "Edge ( US Integration )"
'  strFileName=getSplitValue(strParameters,"TestDataFile")
'  strFileName="YYY-yp123-prtw"
  
  intReleasedTimepointCount = 0
  intRecordCountNew = 0
  intRecordCountRevised = 0
  intRecordCountDeleted = 0
  intQcResultPass = 0
  intQcResultFailed = 0
  intQcResultMarkGood = 0
 
  Call sAutoHidePanelDock("Update Log")
  
  strTemp="WPFObject(""LayoutGroup"", """", 1)"
  Set objLayout=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
 
  strTemp="WPFObject(""Button"", ""Refresh"", 1)"
  Set objRefresh = objLayout.FindChild("Name",strTemp,50,true) 
  If objRefresh.Exists = TRUE then
    Call objRefresh.Click
  End if
  Call sEdgeProcessor  
  
  strTemp="WPFObject(""GridControl"")"
  Set objGridControl = objLayout.FindChild("Name",strTemp,50,true)    
  strTemp="WPFObject(""SourceLogTableView"")"
  Set objTableView = objLayout.FindChild("Name",strTemp,50,true)
  
  For i = 0 to objGridControl.wGroupCount-1
    If objGridControl.DataController.GroupInfo.Item(i).GroupValue.OleValue="Test" then
        Call objGridControl.ExpandGroup(i,true)
        Call objTableView.set_FocusedRowHandle(objGridControl.DataController.GroupInfo.Item(i).Handle)
        Call objTableView.SelectRow(objGridControl.DataController.GroupInfo.Item(i).Handle)
        Delay 5000,"Loading Grid Rows"
        Exit For 
    End If
  Next
 
  If objGridControl.Exists = TRUE then
    Call objGridControl.ClickColumnHeaderRXY("Top Source Description", 94, 8)
  End if
  
  strTemp="WPFObject(""ContentControlEx"", ""Show Search Panel"", 2)"
  Set objSearchMenu = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true) 
  If objSearchMenu.Exists = TRUE then
    Call objSearchMenu.Click
  End if
  
  'Clicking the search text box
   
  Call objTableView.Click(95, 21)
  Call objTableView.Keys(strFileName)
  Delay 5000,"Loading Grid Rows"
  
  
    
  Do While(objTableView.FocusedRowHandle<0)
  Sys.Keys("[Down]")
  Loop
  
  Do
  intHandle=objTableView.FocusedRowHandle
  blnFlag=False
  
  intReleasedTimepointCount = objTableView.FocusedRow.ReleasedTimepointCount
  intRecordCountNew = objTableView.FocusedRow.RecordCountNew
  intRecordCountRevised = objTableView.FocusedRow.RecordCountRevised
  intRecordCountDeleted = objTableView.FocusedRow.RecordCountDeleted
  intQcResultPass = objTableView.FocusedRow.QcResultPass
  intQcResultFailed = objTableView.FocusedRow.QcResultFailed
  intQcResultMarkGood = objTableView.FocusedRow.QcResultMarkGood
 
 If strFileName=objTableView.FocusedRow.StpFileName and DateDiff("s",objTableView.FocusedRow.ImportedTimeLocal,aqDateTime.Now)<600_
     and intReleasedTimepointCount=8 and intRecordCountNew=4 and intRecordCountRevised=2 and _
     intRecordCountDeleted=2 and intQcResultPass=3 and intQcResultFailed=3 and intQcResultMarkGood=3 then
          blnFlag=True
 Else
          blnFlag=False
 End If
  
  If blnFlag=True then
   strTCRemarks=strTCRemarks & "<br />" &"Verified timepoints count in Update Log"
   strTestCaseResult = "PASS"
   log.message strTCRemarks
   Exit Do
  Else
   Sys.Keys("[Down]")
   If objTableView.FocusedRowHandle>0 and intHandle=objTableView.FocusedRowHandle then
    strTestCaseResult="FAIL"    
    strTCRemarks="Unable to find the record for STP file"
    log.message strTCRemarks
    Exit Do
   End If
   If objTableView.FocusedRowHandle<0 then
    strTestCaseResult="FAIL"
    strTCRemarks="Unable to find the record for STP file"
    Exit Do
   End If
  End If  
  Loop
  Delay 2000
  'Call objGridControl.ExpandGroup(i,False)
  Delay 2000
  Call objTableView.Click(226, 18) 'Click search close button
  Delay 2000
  Call sAutoHidePanelHide("Update Log")
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sUpdatelog1', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'***********************************************************************************************************************************

Sub sToDo_PendingSTP(strParameters)

On Error Resume Next

  Delay 10000,"Pls Wait.."
  'open STP file for making entry in Pending STP panel

  'Open STP  for selected Source
  Call sOpenSourceDispalyViewer()
  Delay 5000
  Call sGridSelection(strParameters)
  'click on Open STP Button
  Call Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 6).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Open Global STP", 2).Click
  Delay(5000)
  Call sExcelFullHistory
  Delay(5000)
  objArray = Sys.FindAllChildren("ProcessName","EXCEL", 5,True)
  For i=0 to ubound(objArray)
    log.Message objArray(i).FullName
    set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*RUN*",1,True)
    If oSTP_ExcelObj.Exists = True Then
    Else
      objArray(i).Close
    End If
  Next
  Delay(5000)
      
  Call sClosesource()
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sToDo_PendingSTP', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Sub

'**********************************************************************************************************************************

Function sGridSelection(strParameters)
'Function sGridSelection()
  On Error Resume Next
    
  Dim strTemp, objTemp, objGridControl, IntCount(4)
  
  strSource_Name=getSplitValue(strParameters,"SOURCE")
  strLevel2src_Name=getSplitValue(strParameters,"Level2Source")
  strLevel3src_Name=getSplitValue(strParameters,"WORKSPACE")
  strCategory=getSplitValue(strParameters,"CATEGORY")
  strLevel = getSplitValue(strParameters,"LEVEL")
  strMultiLevel = getSplitValue(strParameters,"MultiLevel")
  strButton = getSplitValue(strParameters,"Button")
  strLayoutDV = getSplitValue(strParameters,"LayoutDV")
  strSourceSchedule=getSplitValue(strParameters,"SourceSchedule")
  Delay 5000 

  Delay 2000, "Please Wait" 
  
  If strLayoutDV = "Yes" Then
      strTemp =  strButton  
  ElseIf strSourceSchedule = "Yes" Then 
      strTemp = "WPFObject(""SourceTreeView"")"
  Else
      strTemp="WPFObject(""SourceTreeListView"")"  
    End IF   
   
   Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  If objTemp.Exists Then
      Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)  
  End If
  
'  
'  If strLayoutDV = "Yes" Then
'   strTemp = "WPFObject(""LayoutTreeView"")"
'  Else
'    strTemp = "WPFObject(""SourceTreeView"")"
'  End If    
'  
'      
'  Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
'  If objTemp.Exists Then
'      Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
'  End If 
  
  'Expanding First Node
   intTotNodeCnt=objGridControl.Nodes_2.Count  
   For intI=0 to intTotNodeCnt-1         
     If Ucase(objGridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
        objGridControl.Nodes_2.Item(intI).ExpandAll               
         intRow=objGridControl.Nodes_2.Item(intI).get_RowHandle
        objGridControl.Keys "^[Home]"
        Call objGridControl.ClearSelectionCore
        Call objGridControl.FocusViewAndRow(objGridControl,intRow)
        objGridControl.SetFocusOnCurrentItem
        Call objGridControl.SelectRowCore(intRow)
        IntCount(0) = intI
        Delay 200           
      Exit For
    End If
   Next
  
  'Selceting the Second Level   
   intTotNodeCnt=objGridControl.Nodes_2.Item(intI).Nodes.Count
   For intJ=0 to intTotNodeCnt-1
   If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then        
        objGridControl.Nodes_2.Item(intI).ExpandAll       
        intRow=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
        objGridControl.Keys "^[Home]"
        Call objGridControl.ClearSelectionCore
        Call objGridControl.FocusViewAndRow(objGridControl,intRow)
        objGridControl.SetFocusOnCurrentItem
        Call objGridControl.SelectRowCore(intRow)
         If  Ucase(Trim(strMultiLevel)) = Ucase(Trim("Yes"))Then   
           SYS.Keys("!") 
           Call objGridControl.SelectRowCore(intRow+1)
         End If             
        IntCount(1) = intJ
        Delay 200     
      Exit For
    End If
   Next  
    
  'Selecting the Third Level 
  intTotNodeCnt=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count        
  For intK=0 to intTotNodeCnt-1
    If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel3src_Name) then
      objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).ExpandAll      
          intRow =objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
          objGridControl.Keys "^[Home]"
          Call objGridControl.ClearSelectionCore
          Call objGridControl.FocusViewAndRow(objGridControl,intRow)
          objGridControl.SetFocusOnCurrentItem
          Call objGridControl.SelectRowCore(intRow) 
          IntCount(2) = intK
          Dealy 200       
      Exit For
    End If
   Next
        
   sGridSelection = IntCount
   Err.Clear
   
  If Err.Number > 0 Then
   Log.Warning("Error in 'sGridSelection',Error Description " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Function

'***********************************************************************************************************************************
Function sGridSelection_SourceModule(strParameters)
'Function sGridSelection_SourceModule()
  On Error Resume Next
    
  Dim strTemp, objTemp, objGridControl, IntCount(4)
  
  strSource_Name=getSplitValue(strParameters,"SOURCE")
  strLevel2src_Name=getSplitValue(strParameters,"Level2Source")
  strLevel3src_Name=getSplitValue(strParameters,"WORKSPACE")
  strCategory=getSplitValue(strParameters,"CATEGORY")
  strLevel = getSplitValue(strParameters,"LEVEL")
  strMultiLevel = getSplitValue(strParameters,"MultiLevel")
  strButton = getSplitValue(strParameters,"Button")
  strLayoutDV = getSplitValue(strParameters,"LayoutDV")
  strSourceSchedule=getSplitValue(strParameters,"SourceSchedule")
  Delay 5000 

'  strSource_Name="Test"
'  strLevel2src_Name="Automation"
'  strLevel3src_Name="Test Source 1"
'  Delay 2000, "Please Wait" 
'  strCategory = "Upload"
'  
  If strLayoutDV = "Yes" Then
      strTemp =  strButton    
  Else
      strTemp="WPFObject(""SourceTreeListView"")"  
    End IF   
   
   Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  If objTemp.Exists Then
      Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)  
  End If
  

  
  'Expanding First Node
   intTotNodeCnt=objGridControl.Nodes_2.Count  
   For intI=0 to intTotNodeCnt-1         
     If Ucase(objGridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
        objGridControl.Nodes_2.Item(intI).ExpandAll               
         intRow=objGridControl.Nodes_2.Item(intI).get_RowHandle
        objGridControl.Keys "^[Home]"
        Call objGridControl.ClearSelectionCore
        Call objGridControl.FocusViewAndRow(objGridControl,intRow)
        objGridControl.SetFocusOnCurrentItem
        Call objGridControl.SelectRowCore(intRow)
        IntCount(0) = intI
        Delay 200           
      Exit For
    End If
   Next
  
  'Selceting the Second Level   
   intTotNodeCnt=objGridControl.Nodes_2.Item(intI).Nodes.Count
   For intJ=0 to intTotNodeCnt-1
   If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then        
        objGridControl.Nodes_2.Item(intI).ExpandAll       
        intRow=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
        objGridControl.Keys "^[Home]"
        Call objGridControl.ClearSelectionCore
        Call objGridControl.FocusViewAndRow(objGridControl,intRow)
        objGridControl.SetFocusOnCurrentItem
        Call objGridControl.SelectRowCore(intRow)
         If  Ucase(Trim(strMultiLevel)) = Ucase(Trim("Yes"))Then   
           SYS.Keys("!") 
           Call objGridControl.SelectRowCore(intRow+1)
         End If             
        IntCount(1) = intJ
        Delay 200     
      Exit For
    End If
   Next  
    
  'Selecting the Third Level 
  intTotNodeCnt=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count        
  For intK=0 to intTotNodeCnt-1
    If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel3src_Name) then
      objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).ExpandAll      
          intRow =objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
          objGridControl.Keys "^[Home]"
          Call objGridControl.ClearSelectionCore
          Call objGridControl.FocusViewAndRow(objGridControl,intRow)
          objGridControl.SetFocusOnCurrentItem
          Call objGridControl.SelectRowCore(intRow) 
          IntCount(2) = intK
          Dealy 200       
      Exit For
    End If
   Next
        
   sGridSelection = IntCount
   Err.Clear
   
  If Err.Number > 0 Then
   Log.Warning("Error in 'sGridSelection',Error Description " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Function

'***********************************************************************************************************************************

Sub sToDo_CheckAll(strParameters)
'Sub sToDo_CheckAll()

On Error Resume Next

  strLevel1=getSplitValue(strParameters,"Source")
  strLevel2=getSplitValue(strParameters,"Qcname")
  strLevel3=getSplitValue(strParameters,"Workspace")
  
'  strLevel1="Test"
'  strLevel2="PRT111"
'  strLevel3="PRT222"
'  strEnvi = "Edge ( US Integration )" 

  blnFlag1=False
  blnFlag2=False
  blnFlag3=False
  
  'ToDo:Pending STP
  Call sAutoHidePanelDock("Pending STP")
  Call Sys.Process("EdgeClient").Refresh
  strTemp="WPFObject(""LayoutGroup"", """", 1)"
  Set objLayout=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  
  strTemp="WPFObject(""Button"", ""Refresh"", 1)"
  Set objRefresh = objLayout.FindChild("Name",strTemp,50,true) 
  If objRefresh.Exists = TRUE then
    Call objRefresh.Click
  End if
  Call sEdgeProcessor
  
  strTemp="WPFObject(""GridControl"")"		
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
  strTemp="WPFObject(""SourceLogTableView"")"   
  Set objTableView=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
  
  
  If objGridControl.Exists = TRUE then
    Call objGridControl.ClickColumnHeaderRXY("Top Source Description", 94, 8)
  End if
  
  SYS.Keys "^F"
  Delay 1000,""
  
  strTemp="WPFObject(""ContentControlEx"", ""Show Search Panel"", 2)"
  Set objSearchMenu = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true) 
  If objSearchMenu.Exists = TRUE then
    Call objSearchMenu.Click
  End if
  
  'Clicking the search text box
  Call objTableView.Click(95, 21)
  Call objTableView.Keys(strLevel2)
  Delay 5000,"Loading Grid Rows"
  
   strTemp="WPFObject(""GridControl"")"  	
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
 	Call objGridControl.ExpandGroup(0,true)
		Delay 5000,"Loading Grid Rows"
    
	intRow1 = objGridControl.wRowCount
  If intRow1 > 0 then 
    blnFlag1=True
  End If
  
  Delay 2000
  Call objTableView.Click(226, 18) 'Click search close button
  Delay 2000
  
  Set objLayout=nothing
  Set objGridControl=nothing
 
  Call sAutoHidePanelHide("Pending STP")
  
  'ToDo:Pending MG/Released
  Call sAutoHidePanelDock("Pending MG/Released")
  Call Sys.Process("EdgeClient").Refresh
  strTemp="WPFObject(""LayoutGroup"", """", 1)"
  Set objLayout=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  
  strTemp="WPFObject(""Button"", ""Refresh"", 1)"
  Set objRefresh = objLayout.FindChild("Name",strTemp,50,true) 
  If objRefresh.Exists = TRUE then
    Call objRefresh.Click
  End if
  Call sEdgeProcessor
 
  strTemp="WPFObject(""GridControl"")"  	
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
  strTemp="WPFObject(""TodoListCounterTableView"")"	
  Set objTableView = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
  
  
  
  If objGridControl.Exists = TRUE then
    Call objGridControl.ClickColumnHeaderRXY("Top Source Description", 94, 8)
  End if
  
  SYS.Keys "^F"
  Delay 1000,""
  
  strTemp="WPFObject(""ContentControlEx"", ""Show Search Panel"", 2)"
  Set objSearchMenu = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true) 
  If objSearchMenu.Exists = TRUE then
    Call objSearchMenu.Click
  End if
  
  'Clicking the search text box
  Call objTableView.Click(95, 21)
  Call objTableView.Keys(strLevel2)
  Delay 5000,"Loading Grid Rows"
  
  strTemp="WPFObject(""GridControl"")"  	
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
  Call objGridControl.ExpandGroup(0,true)
  Delay 5000,"Loading Grid Rows"
  
		intRow2 = objGridControl.wRowCount
  If intRow2 > 0 then 
    blnFlag2=True
  End If
  
  Delay 2000
  Call objTableView.Click(226, 18) 'Click search close button
  Delay 2000
  
  Set objLayout=nothing
  Set objGridControl=nothing
  
    
  Call sAutoHidePanelHide("Pending MG/Released")
  
  'ToDo:Update Log
  Call sAutoHidePanelDock("Update Log")
  Call Sys.Process("EdgeClient").Refresh


  strTemp="WPFObject(""LayoutGroup"", """", 1)"
  Set objLayout=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  
  strTemp="WPFObject(""Button"", ""Refresh"", 1)"
  Set objRefresh = objLayout.FindChild("Name",strTemp,50,true) 
  If objRefresh.Exists = TRUE then
    Call objRefresh.Click
  End if
  Call sEdgeProcessor
  

 	strTemp="WPFObject(""GridControl"")"		
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
  strTemp="WPFObject(""SourceLogTableView"")"  
	 Set objTableView=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
    
  If objGridControl.Exists = TRUE then
    Call objGridControl.ClickColumnHeaderRXY("Top Source Description", 94, 8)
  End if
  
  SYS.Keys "^F"
  Delay 1000,""
  
  strTemp="WPFObject(""ContentControlEx"", ""Show Search Panel"", 2)"
  Set objSearchMenu = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true) 
  If objSearchMenu.Exists = TRUE then
    Call objSearchMenu.Click
  End if
  
  'Clicking the search text box
  Call objTableView.Click(95, 21)
  Call objTableView.Keys(strLevel2)
  Delay 5000,"Loading Grid Rows"
  
		strTemp="WPFObject(""GridControl"")"		
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
    For i = 0 to objGridControl.wGroupCount-1
    If Trim(cstr(ucase(objGridControl.DataController.GroupInfo.Item(i).GroupValue.OleValue)))=Trim(cstr(ucase(strLevel1))) then
        Call objGridControl.ExpandGroup(i,true)
						 intRow3 = objGridControl.wRowCount
						  If intRow3 > 0 then 
						    blnFlag3=True
						  End If
        If blnFlag1=True and blnFlag2=True and blnFlag3=True then
          strTCRemarks="Found a record present in all three ToDo panels"
    									Call objGridControl.ClickCell(1, "Top Source Description")
											Call objGridControl.ClickCellR(1, "Top Source Description")
											Call objGridControl.PopupMenu.Click("Open Source")
		    End If     
        Delay 5000,"Loading Grid Rows"
        Exit For 
    End If
  Next
  
  Delay 2000
  Call objTableView.Click(226, 18) 'Click search close button
  Delay 2000
  
  Set objLayout=nothing
  Set objGridControl=nothing
    
  Call sAutoHidePanelHide("Update Log")
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'ToDo_CheckAll()', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'************************************************************************************************************************************

Sub sToDo_RenameSource(strParameters)
'Sub sToDo_RenameSource()

On Error Resume Next
 
  strLevel1=getSplitValue(strParameters,"Source")
  strLevel2_old=getSplitValue(strParameters,"Level2Source")
  strLevel3_old=getSplitValue(strParameters,"WORKSPACE")
  strLevel2_new=getSplitValue(strParameters,"NewQcname")
  strLevel3_new=getSplitValue(strParameters,"NewWorkspace")

'	        strLevel1="Test"
'				  strLevel2_old="PRT111"
'				  strLevel3_old="PRT222"
'				  strLevel2_new="PRT333"
'				  strLevel3_new="PRT444"	
'					strEnvi = "Edge ( US Integration )" 	

  
  'Call SelectLevel2Source(strLevel1,strLevel2_old)
  Call sGridSelection(strParameters)
  
  strTemp="WPFObject(""ContentControlEx"", ""New Workspace"", 2)"
  Set objWorkspace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  Call objWorkspace.Click
  Delay 2000
  
  strTemp="WPFObject(""ContentControlEx"", ""Open For Edit (Source)"", 2)"
  Set objEdit=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  Call objEdit.Click
  Delay 2000
  
  strTemp="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
  Set objWSname=Sys.Process("EdgeClient").WaitChild(strTemp,120000)
  strTemp="WPFObject(""ChangeNameTextEdit"")"
  Set objTextbox=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  objTextbox.Text="abc"
  strTemp="WPFObject(""OkButton"")"
  Set objOkButton=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  Call objOkButton.Click
  Call sEdgeProcessor
  Call sCloseSource
  
  strTemp="WPFObject(""SourceTreeListView"")"  
  Set objListView= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl").FindChild("Name",strTemp,10,True)
  

  strTemp="WPFObject(""ContentControlEx"", ""Expand All"", 2)"
  Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  If objTemp.Exists then 
      objTemp.Click
      Delay 2000      
  End If  
  Call objListView.Nodes_2.Item(0).Nodes.Item(0).Content.set_Description(strLevel2_new)
  Delay 200
  Call objListView.Nodes_2.Item(0).Nodes.Item(0).Nodes.Item(0).Content.set_Description(strLevel3_new)
  Delay 200
  
  strTemp="WPFObject(""ContentControlEx"", ""Workspace"", 2)"
  Set objWorkspace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  Call objWorkspace.Click
  strTemp="WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"
  Set objUpload=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  Call objUpload.click
  
  Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: WindowContentHolder", "Confirm")
  If objConfirm.Exists=True then
    Sys.Keys "[Enter]"
  End If
  
  strTemp="WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Upload Workspace"")"
  Set objUConfirm=Sys.Process("EdgeClient").WaitChild(strTemp,120000)
  If objUConfirm.Exists=True then
    Sys.Keys "[Enter]"
    strTCRemarks="Renamed Level2 and Level3 folders"
    strTestCaseResult = "PASS"
  End If
  Call sEdgeProcessor
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sToDo_RenameSource' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If  
End Sub

'************************************************************************************************************************************
Sub sToDo_CheckAll1(strParameters)
'Sub sToDo_CheckAll1()

On Error Resume Next

  strLevel1=getSplitValue(strParameters,"Source")
  strLevel2=getSplitValue(strParameters,"Qcname")
  strLevel3=getSplitValue(strParameters,"Workspace")
  
'  strLevel1="Test"
'  strLevel2="PRT333"
'  strLevel3="PRT444"
'   strEnvi = "Edge ( US Integration )" 	

  blnFlag1=False
  blnFlag2=False
  blnFlag3=False
  
  Call Sys.Process("EdgeClient").Refresh
 

  'ToDo:Pending STP
  Call sAutoHidePanelDock("Pending STP")
  Call Sys.Process("EdgeClient").Refresh
  strTemp="WPFObject(""LayoutGroup"", """", 1)"
  Set objLayout=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  
  strTemp="WPFObject(""Button"", ""Refresh"", 1)"
  Set objRefresh = objLayout.FindChild("Name",strTemp,50,true) 
  If objRefresh.Exists = TRUE then
    Call objRefresh.Click
  End if
  Call sEdgeProcessor
  
  strTemp="WPFObject(""GridControl"")"		
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
  strTemp="WPFObject(""SourceLogTableView"")"   
  Set objTableView=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
   
  If objGridControl.Exists = TRUE then
    Call objGridControl.ClickColumnHeaderRXY("Top Source Description", 94, 8)
  End if
  
   SYS.Keys "^F"
  Delay 1000,""
  
  strTemp="WPFObject(""ContentControlEx"", ""Show Search Panel"", 2)"
  Set objSearchMenu = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true) 
  If objSearchMenu.Exists = TRUE then
    Call objSearchMenu.Click
  End if
  
  'Clicking the search text box
  Call objTableView.Click(95, 21)
  Call objTableView.Keys(strLevel2)
  Delay 5000,"Loading Grid Rows"
  
  
 	strTemp="WPFObject(""GridControl"")"  	
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
 	Call objGridControl.ExpandGroup(0,true)
  Delay 5000,"Loading Grid Rows"
  
		
  time1=aqdatetime.Now
  Call Sys.Process("EdgeClient").Refresh
  Do
  intRow1 = objGridControl.wRowCount
  If intRow1 > 0 then 
    blnFlag1=True
  End If
		
  If DateDiff("s",time1,aqdatetime.Now)>120 then
    Exit Do
  End If
  Loop until (intRow1>=0)
  
  Delay 2000
  Call objTableView.Click(226, 18) 'Click search close button
  Delay 2000
  
  Set objLayout=nothing
  Set objGridControl=nothing
 
  Call sAutoHidePanelHide("Pending STP")
  
  Call Sys.Process("EdgeClient").Refresh
  
  ' TODO: Pending MG/Released
  Call sAutoHidePanelDock("Pending MG/Released")
  Call Sys.Process("EdgeClient").Refresh
  strTemp="WPFObject(""LayoutGroup"", """", 1)"
  Set objLayout=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  
  strTemp="WPFObject(""Button"", ""Refresh"", 1)"
  Set objRefresh = objLayout.FindChild("Name",strTemp,50,true) 
  If objRefresh.Exists = TRUE then
    Call objRefresh.Click
  End if
  Call sEdgeProcessor
 
	strTemp="WPFObject(""GridControl"")"  	
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
  strTemp="WPFObject(""TodoListCounterTableView"")"	
  Set objTableView = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
  
  If objGridControl.Exists = TRUE then
    Call objGridControl.ClickColumnHeaderRXY("Top Source Description", 94, 8)
  End if
  
   SYS.Keys "^F"
  Delay 1000,""
  
  strTemp="WPFObject(""ContentControlEx"", ""Show Search Panel"", 2)"
  Set objSearchMenu = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true) 
  If objSearchMenu.Exists = TRUE then
    Call objSearchMenu.Click
  End if
  
  'Clicking the search text box
  Call objTableView.Click(95, 21)
  Call objTableView.Keys(strLevel2)
  Delay 5000,"Loading Grid Rows"
  
 
  strTemp="WPFObject(""GridControl"")"  	
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
  Call objGridControl.ExpandGroup(0,true)
  Delay 5000,"Loading Grid Rows"
  
  time1=aqdatetime.Now
  Call Sys.Process("EdgeClient").Refresh
  Do

		intRow2 = objGridControl.wRowCount
  If intRow2 > 0 then 
    blnFlag2=True
  End If
		
  If DateDiff("s",time1,aqdatetime.Now)>120 then
    Exit Do
  End If
  Loop until (intRow2>=0)
  
  Delay 2000
  Call objTableView.Click(226, 18) 'Click search close button
  Delay 2000
  
  Set objLayout=nothing
  Set objGridControl=nothing  
    
  Call sAutoHidePanelHide("Pending MG/Released")
  
  'ToDo:Update Log
  Call sAutoHidePanelDock("Update Log")
  Call Sys.Process("EdgeClient").Refresh


  strTemp="WPFObject(""LayoutGroup"", """", 1)"
  Set objLayout=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  
  strTemp="WPFObject(""Button"", ""Refresh"", 1)"
  Set objRefresh = objLayout.FindChild("Name",strTemp,50,true) 
  If objRefresh.Exists = TRUE then
    Call objRefresh.Click
  End if
  Call sEdgeProcessor
  
  strTemp="WPFObject(""GridControl"")"		
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
  strTemp="WPFObject(""SourceLogTableView"")"  
	 Set objTableView=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
    
  
  If objGridControl.Exists = TRUE then
    Call objGridControl.ClickColumnHeaderRXY("Top Source Description", 94, 8)
  End if
  
   SYS.Keys "^F"
  Delay 1000,""
  
  strTemp="WPFObject(""ContentControlEx"", ""Show Search Panel"", 2)"
  Set objSearchMenu = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true) 
  If objSearchMenu.Exists = TRUE then
    Call objSearchMenu.Click
  End if
  
  'Clicking the search text box
  Call objTableView.Click(95, 21)
  Call objTableView.Keys(strLevel2)
  Delay 5000,"Loading Grid Rows"
  

	strTemp="WPFObject(""GridControl"")"		
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
  Call objGridControl.ExpandGroup(0,true)
  Delay 5000,"Loading Grid Rows"  
 
  time1=aqdatetime.Now
  Call Sys.Process("EdgeClient").Refresh
  Do
			intRow3 = objGridControl.wRowCount
						  If intRow3 > 0 then 
						    blnFlag3=True
						  End If
  If DateDiff("s",time1,aqdatetime.Now)>120 then
    Exit Do
  End If
  Loop until (intRow3>=0)
  
  log.Message intRow1&intRow2&intRow3
  log.Message blnFlag1&blnFlag2&blnFlag3
  If blnFlag1=True and blnFlag2=True and blnFlag3=True then   
   strTCRemarks="Top Source Description and Source Folder Description are modified in all three ToDo panels"
   strTestCaseResult="PASS"
  Else
   strTestCaseResult="FAIL"
  End If       
  
  Delay 2000
  Call objTableView.Click(226, 18) 'Click search close button
  Delay 2000
  
  Set objLayout=nothing
  Set objGridControl=nothing
    
  Call sAutoHidePanelHide("Update Log")
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sToDo_CheckAll1' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Sub

'*************************************************************************************************************************************
'Create_series for Complute Plus
Sub sCreateSeries_Compute(strParameters)
'Sub sCreateSeries_Compute()
On Error Resume Next

  Dim strSeriesName,strSourceSeriesName,strSeriesSourceCode,strSeriesStatus,strSeriesType,STPSheetName
  Dim strSeriousCountry,strOutputUnit,strSeriesNature,strSeriesFreq,strSourceUnit,strUnitType,strTestDataFile
  Dim strAliasName,strFileName,STP,strTimepoints,strText,strStartcolumn
  Dim i,FilePath,intcount,intj, intCol
  Dim objArray,oSTP_ExcelObj,objSTPXls,objActiveWB,netUIHWND,wndEXCEL7
  Dim intlastRow,lastColumn,inti,strTemp,objErrmsg,objOkClick,File
  
  Const xlFillDefault = 0
  strStartcolumn=0
  STP= getSplitValue(strParameters,"STP") 
  strTestDataFile=getSplitValue(strParameters,"TestDataFile") 
  STPSheetName= getSplitValue(strParameters,"STPSheetName")
  strSeriesName = getSplitValue(strParameters,"Series Name")
  strSourceSeriesName = getSplitValue(strParameters,"Source Series Name")
  strSeriesSourceCode=  getSplitValue(strParameters,"Series Source Code")
  strSeriesStatus =  getSplitValue(strParameters,"Series Status")
  strSeriesType =  getSplitValue(strParameters,"Series Type")
  strSeriousCountry = getSplitValue(strParameters,"Serious Country")
  strOutputUnit=  getSplitValue(strParameters,"Output Unit")
  strSeriesNature =  getSplitValue(strParameters,"Series Nature")
  strSeriesFreq = getSplitValue(strParameters,"Series Freq")
  strSourceUnit =  getSplitValue(strParameters,"Source Unit")
  strUnitType = getSplitValue(strParameters,"Unit Type") 
  strTimepoints = getSplitValue(strParameters,"Timepoints")
  strForeCast= getSplitValue(strParameters,"ForeCast")
  
  'For Unit testcase(PRT)
  If strUnitType="ZZZ" then
   strUnitType=strUnit
  End If
  

'  STPSheetName="D_1"
'  STP="Test Source 1"
'  strTestDataFile="YYY-Automation-Test Source 1"
'  strSeriesName="test-series"
'  strSourceSeriesName="test-series"
'  strSeriesSourceCode="test-series"
'  strSeriesStatus="T"
'  strSeriesType="Key"
'  strSeriousCountry="YYY"
'  strOutputUnit="NA"
'  strSeriesNature="R"
'  strSeriesFreq="D"
'  strSourceUnit="NA"
'  strUnitType="%"
'  strTimepoints="6"
'    
 'Get the File Loacation 
  FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")&"\"&strTestDataFile & ".xlsx"
  
  Delay(2000)
  
  Set objSTPXls=GetObject(FilePath)
  With objSTPXls
    With .Sheets(STPSheetName).Select
    End With

    With .WorkSheets(STPSheetName)
      Dim r
        delay Status_Wait, "Finding last Row the Excel sheets.. Pls wait.."
        For r = 1 To .UsedRange.Rows.Count
          If IsEmpty(.UsedRange.Cells(r, 1).Value) = True AND (.UsedRange.Cells(r, 1).Text) ="" Then           
           intlastRow=r           
           Exit For
          End  If 
        Next
        inti=3
        lastColumn=.UsedRange.Columns.Count
       For inti = 3 to lastColumn
          strText=.Cells(2,inti)
          .Cells(intlastRow,inti).Select
          If UCASE(strText)=UCase("Series Name") then 
          .Cells(intlastRow,inti).Value=strSeriesName
          ElseIf UCASE(strText)=UCase("Source Series Name") then 
          .Cells(intlastRow,inti).Value=strSourceSeriesName
          ElseIf UCASE(strText)=UCase("Series Source Code") then 
          .Cells(intlastRow,inti).Value=strSeriesSourceCode
          ElseIf UCASE(strText)=UCase("Series Status") then 
          .Cells(intlastRow,inti).Value=strSeriesStatus
          ElseIf UCASE(strText)=UCase("ForeCast") then 
          .Cells(intlastRow,inti).Value=strForeCast
          ElseIf UCASE(strText)=UCase("Series Type") then 
          .Cells(intlastRow,inti).Value=strSeriesType
          ElseIf UCASE(strText)=UCase("Series Country") then 
          .Cells(intlastRow,inti).Value=strSeriousCountry
          ElseIf UCASE(strText)=UCase("Output Unit") then 
          .Cells(intlastRow,inti).Value=strOutputUnit
          ElseIf UCASE(strText)=UCase("Series Nature") then 
          .Cells(intlastRow,inti).Value=strSeriesNature
          ElseIf UCASE(strText)=UCase("Series Freq") then 
											intFreqColumn = inti														
          .Cells(intlastRow,inti).Value=strSeriesFreq
          ElseIf UCASE(strText)=UCase("Source Unit") then 
          .Cells(intlastRow,inti).Value=strSourceUnit
          ElseIf UCASE(strText)=UCase("Unit Type") then 
              .Cells(intlastRow,inti).Value=strUnitType  
          ElseIf isDate(strText)  then
              strStartcolumn=inti
              Exit For
          End if 
         Next 
         
          Delay 5000 , "Creating a new series.."
          
'          strTimepoints = getSplitValue(strParameters,"Timepoints")
'          strTimepoints= 6
'          If strTimepoints=6 then
          ''Copy the Series for 1 row 
          strEndSeriesColumn=strStartcolumn-3
          strEndSeriesColumn=GetColumnName(strEndSeriesColumn)
          Delay(5000)
        
          With objSTPXls
            With .Sheets(STPSheetName).Select
            End With      
            With .WorkSheets(STPSheetName)
             .Range("C" & intlastRow & ":" & strEndSeriesColumn & intlastRow ).Select
              intTargetRow=intlastRow + 1
              .Range("C" & intlastRow & ":" &strEndSeriesColumn & intlastRow).AutoFill  .Range("C" & intlastRow & ":" & strEndSeriesColumn & intTargetRow), xlFillDefault
																	.Cells(intlastRow+1,intFreqColumn).Select
																	.Cells(intlastRow+1,intFreqColumn).Value=strSeriesFreq																														       
           End With
          END WITH
'          End If
          
         'Mark Good          
       Call sClicKMarkGood(2,strTestDataFile)
       
       'Click Upload
       Call sClickUpload(2,strTestDataFile)
       
       'Click Information message
       Call sClickonInformation(2,"No")
       
        
				'Click Refresh 
        Call sClickRefresh(2,strTestDataFile)
        Call sExcelFullHistory   
      

    End With
  End With 
  log.Message  "New Series Created"
  strTCRemarks =  "Created Series for STP" 
  strTestCaseResult="PASS"
  
  
  
  With objSTPXls
    With .Sheets(STPSheetName).Select
    End With      
    With .WorkSheets(STPSheetName)
        intcount=0
        if strStartcolumn=0 then
        End if
        For intj= (strStartcolumn + 1) to lastColumn 
          If IsEmpty(.UsedRange.Cells(intlastRow, intj).Value) = True AND (.UsedRange.Cells(r, intj).Text) ="" Then
            if intcount<=5 then
              .Cells(intlastRow,intj).select
              .Cells(intlastRow,intj).Value=strTimepoints
              strTimepoints=strTimepoints + 1
            Else
              Exit For
            End if 
            intcount=intcount+1 
          End If  
        Next
        
        
     'Mark Good          
       Call sClicKMarkGood(2,strTestDataFile)
       
       'Click Upload
       Call sClickUpload(2,strTestDataFile)
       
       'Click Information message
       Call sClickonInformation(2,"No")
       
        
              
        'Refresh Series
        With objSTPXls
          With .WorkSheets(STPSheetName)                 
                'Set wndEXCEL7 = Aliases.EXCEL.wndXLMAIN.XLDESK.wndEXCEL72
                .Cells(intlastRow,1).Select
                ' Call wndEXCEL7.Keys("^c")
               strSeriesID=.Cells(intlastRow,1).Value															
               strSeriesID=.Cells(intlastRow,1).text															
              .Cells(intlastRow,lastColumn).Select
          End With
        End With
         strTCRemarks =  "Created New Series for STP - "&strSeriesID 
    End With
  End With 
'  objSTPXls.Close
'  Delay(10000)
  objArray = Sys.FindAllChildren("ProcessName","EXCEL", 5,True)
  For i=0 to ubound(objArray)
    log.Message objArray(i).FullName
    set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*RUN*",1,True)
    If oSTP_ExcelObj.Exists = True Then
    Else
      objArray(i).Close
    End If
  Next
  Delay(5000)
  Call SClosesource()
End Sub 

'*********************************************************************************************************************************
Function GetColumnName(colNum)
    Dim d 
    Dim m 
    Dim name 
    d = colNum
    name = ""
    Do While (d > 0)
        m = (d - 1) Mod 26
        name = Chr(65 + m) + name
        d = Int((d - m) / 26)
    Loop
    GetColumnName = name
End Function
'*********************************************************************************************************************************


Sub sComputePlus(strParameters)
'Sub sComputePlus()

On Error Resume Next
Dim objSTPXls,objArray,oSTP_ExcelObj,netUIHWND,File
Dim i,strAliasName,strFileName,FilePath,STPSheetName,StrSeriesId1,StrSeriesId2,intlastRow,intPreRow ,intRow,strTemp,strTestDataFile,STP,lastColumn
  
  
  STP= getSplitValue(strParameters,"STP") 
  strTestDataFile=getSplitValue(strParameters,"TestDataFile") 
  STPSheetName= getSplitValue(strParameters,"STPSheetName")
	strTimepoints = getSplitValue(strParameters,"Timepoints")
  strExcelNumber = getSplitValue(strParameters,"ExcelNumber")
  strExcelNumber =Cint(strExcelNumber)
		
		
		
'		STPSheetName="A1_1"
'		STP="Test Source 1"
'		strTestDataFile="YYY-Automation-Test Source 1"
'		strTimepoints="6"
'    strSeriesID = "395236577"

  

'Get the File Loacation 
  FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")&"\"&strTestDataFile & ".xlsx"
    Set objSTPXls=GetObject(FilePath)
    With objSTPXls
      With .Sheets(STPSheetName).Select
      End With

      With .WorkSheets(STPSheetName)
        Dim r
        lastColumn=.UsedRange.Columns.Count
          delay Status_Wait, "Finding last Row the Excel sheets.. Pls wait.."
          For r = 1 To .UsedRange.Rows.Count
            If IsEmpty(.UsedRange.Cells(r, 1).Value) = True AND (.UsedRange.Cells(r, 1).Text) ="" Then           
             intlastRow=r
							
             Exit For
            End  If 
          Next
           intlastRow=intlastRow-1
           intRow1 =intlastRow-1
           intRow2=intlastRow-2 
				  
          if intlastRow > 4  then
             .Cells(intRow1,1).Select
              StrSeriesId1=.Cells(intRow1,1).Value
              StrSeriesId2=.Cells(intRow2,1).Value 
             .Cells(intLastRow,18).Select
             .Cells(intLastRow,18).Value="id("& StrSeriesId1 & ")+id(" & StrSeriesId2 & ")"
             .Cells(intLastRow,18).Text="id("& StrSeriesId1 & ")+id(" & StrSeriesId2 & ")"
          End if 
          
          Delay 6000, "Please wait"									
         ''Click om Compute
         Call sClickComputePlus(strExcelNumber,strTestDataFile)
                  
        ''Mark Good
          Delay 1000,"Mark Good..."
          With objSTPXls
            With .WorkSheets(STPSheetName)
                 .Cells.Select
            End With
          End With
          
         Call sClicKMarkGood(strExcelNumber,strTestDataFile)
          
        ''Upload Series
        Call sClickUpload(strExcelNumber,strTestDataFile)
        
        'click No on File close Window
        Call sClickonInformation(strExcelNumber,"No")
        
     
              'Refresh Series
        With objSTPXls
          With .WorkSheets(STPSheetName)
               .Cells.Select
                Call sClickRefresh(strExcelNumber,strTestDataFile)
                Call sExcelFullHistory
                .Cells(intlastRow,lastColumn).Select
          End With
        End With        
        End With
      End With
            
      ' checking addition
      With objSTPXls
       With .WorkSheets(STPSheetName)
       For inti = 3 to lastColumn
          strText=.Cells(2,inti)
          If isDate(strText)  then
           If IsEmpty(.UsedRange.Cells(intRow2, inti).Value) = False AND (.UsedRange.Cells(intRow2, inti).Text) <> "" Then           
             If IsEmpty(.UsedRange.Cells(intRow1, inti).Value) = False AND (.UsedRange.Cells(intRow1, inti).Text) <> "" Then
             intComputeValue = (.UsedRange.Cells(intRow1, inti).Value) +(.UsedRange.Cells(intRow2, inti).Value)
              If .UsedRange.Cells(intLastRow, inti).Value =  intComputeValue Then
                blnFlag=True
              Else
                blnFlag=False
                Exit For
              End If
             End If
            End  If             
          End if 
       Next
         End With
      End With										
      If blnFlag=True then
        strTCRemarks = "Checked for Plus computing values"
        log.Message "Checked for Plus computing values"
        strTestCaseResult="PASS"
      Else
        strTCRemarks = "Addition failed at" & inti & "column"
        strTestCaseResult="FAIL"
      End If

      'Close the Opened Excel File
      Call ExcelProcessKill
      Delay(2000)
      Call SClosesource()
      
  If Err.Number > 0 Then
    Log.Warning("Error in 'sComputePlus' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub 

'*************************************************************************************************************************************************
Sub sClickComputePlus(ExcelNumber,strTestDataFile)
  On Error Resume Next
  
  Dim NetUIHWND, strTemp
 ' ExcelNumber = 2
  'strTestDataFile = "YYY-Automation-Test Source 1"
  
  Delay 1000
  'Set NetUIHWND = Sys.Process("EXCEL", ExcelNumber).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", ExcelNumber).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
  Set NetUIHWND = Sys.Process("EXCEL", ExcelNumber).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
 
  strTemp = "MSAAObject(""pt_EDGE"")"
  Set objEdge = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objEdge.Click()
  
  strTemp = "MSAAObject(""btn_Compute_Series"")"
  Set objDeleteValue = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objDeleteValue.Click()
 
  
  
  log.message "Compute Series button is clicked"
  If Err.Number > 0 Then
    Log.Warning("Error in 'sClickComputePlus' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'*********************************************************************************************************************************

Sub sFileRepository(strParameters)
'Sub sFileRepository()

  On Error Resume Next

  Dim objDockPanel,objLayoutGroup,objFileRepositoryView,objGrid,objCombobox,objHwndSource,objGridView,objTemp,objCellItemsControl,gridCellContentPresenter
  Dim strCountry,objEdge,strTemp,objText
  
  strFooter=getSplitValue(strParameters,"FOOTER")''Footer Name
  strCountry=getSplitValue(strParameters,"COUNTRY")''Country Name
'		
'		strFooter = "http://test"
'		strCountry = "Test"

  Dim strDes,strText
  strDes=aqDateTime.Now
  strText=Replace(strDes,"/","-")
  DescText=Replace(strText,":","_")
  strFooter=strFooter &""& strText
  
   strTemp = "WPFObject(""LayoutPanel"", """", 1)"
   set objEdge= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).FindChild("Name",strTemp,10,True)
  If objEdge.Exists = False then
  	  Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("RibbonControl").WPFObject("RibbonSelectedPageControl", "", 1).WPFObject("RibbonPagesControl", "", 1).WPFObject("RibbonPageGroupsControl", "", 1).WPFObject("RibbonPageGroupControl", "", 1).WPFObject("BarItemLinkInfo", "", 15).WPFObject("BarButtonItemLinkControl", "", 1).Click
			  Call sEdgeProcessor 
        strTemp ="WPFObject(""LayoutPanel"", """", 1) "
				set objEdge= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).FindChild("Name",strTemp,10,True)
    If objEdge.Exists = False then
      strTestCaseResult = "FAIL"
      Exit Sub
    End If
  ElseIf objEdge.Exists = True then
    If objTemp.Caption<>"File Repository" then
       Call sCloseSource()
    	 Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("RibbonControl").WPFObject("RibbonSelectedPageControl", "", 1).WPFObject("RibbonPagesControl", "", 1).WPFObject("RibbonPageGroupsControl", "", 1).WPFObject("RibbonPageGroupControl", "", 1).WPFObject("BarItemLinkInfo", "", 15).WPFObject("BarButtonItemLinkControl", "", 1).Click
						
    		strTemp= "WPFObject(""LayoutPanel"", """", 1)"
        Set objEdge= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).FindChild("Name",strTemp,10,True)
    	  If objEdge.Exists = False then
										strTestCaseResult = "FAIL"
       		 Exit Sub
     	 End If
    	End if 
  End If
  strTCRemarks="Opened File Repository Module"
  strTemp = "WPFObject(""ComboBox"", """", 1)"
	Set objCombobox = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("Adorner").WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("WrapPanel", "", 1).WPFObject("StackPanel", "", 1).FindChild("Name",strTemp,10,True)
  objCombobox.DropDown
  Call objCombobox.Keys(strCountry)
  Delay(2000)
  Call objCombobox.Keys("[Enter]")  
  Call sEdgeProcessor
  Dim objEdgeLink
  strTemp = "WPFObject(""ContentControlEx"", ""Insert Link"", 2)"
  Set objEdgeLink = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("Adorner").WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("StackPanel", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 7).WPFObject("BarButtonItemLinkControl", "", 1).FindChild("Name",strTemp,10,True)
	IF objEdgeLink.Enabled = True Then
      Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("Adorner").WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("StackPanel", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 7).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Insert Link", 2).Click
			Call sEdgeProcessor
      strTCRemarks="Insert Link is opened to add the URL"
      log.Message strTCRemarks
  Else
    strTCRemarks="Insert Link is Disabled"
    Exit Sub
  End if 
		
  strTemp ="WPFObject(""LinkTableControl"")"
  Set objGridView= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).FindChild("Name",strTemp,10,True)
	Call objGridView.ClickCell(0, "Group")
  Call objGridView.ClickCell(0, "Group")
  Call objGridView.ClickCell(0, "Group")
  SYS.Keys "[Down][Enter]"
  Delay(1000)
  
  Call objGridView.ClickCell(0, "File Name / Address")
  Call objGridView.ClickCell(0, "File Name / Address")  
	Set objFileAddress =Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("LinkTableControl").WPFObject("LinkTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 3).WPFObject("InplaceBaseEdit", "", 1).WPFObject("TextEdit", "", 1)  
		Call objFileAddress.Keys(strFooter)
		Call objFileAddress.Keys("[Tab]")
		Delay(1000)
		Set objFileAddress =Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("LinkTableControl").WPFObject("LinkTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 4).WPFObject("InplaceBaseEdit", "", 1).WPFObject("TextEdit", "", 1)  
		Call objFileAddress.Keys(strFooter)
		Call objFileAddress.Keys("[Tab]")
		Delay(1000)
  Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("StackPanel", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 1).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Import", 2).Click
  strTemp =  "WPFObject(""PART_InactiveBorder"")"
  Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Import Links").WPFObject("CustomMessageBoxWindow", "Import Links", 1).WPFObject("Grid", "", 1).FindChild("Name",strTemp,10,True)
 If objTemp.Exists = True then
      Sys.Keys("[Enter]")
   End If
  
  Call sCloseFileInsetLink()
  Delay(1000)
  Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("Adorner").WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("StackPanel", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 9).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Refresh", 2).Click
	 Call sEdgeProcessor 
 		strTemp = "WPFObject(""FileRepositoryTableControl"")"
		Set gridControl= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,True)
		intRowIndex=gridControl.FindRow("File Name / Address",strFooter)
  If intRowIndex>=0 then
   strTCRemarks="html / url in the country added Successfully"
   log.message strTCRemarks
   strTestCaseResult = "PASS"			
  End If
		  
  Call sCloseSource()
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sFileRepository' ,Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'***************************************************************************************************************************************
Sub sCloseFileInsetLink()

  On Error Resume Next
		'strEnvi = "Edge ( US Integration )"
  Dim objEdge,strTemp,objTemp, objStrClose
  
    strTemp ="WPFObject(""LayoutPanel"", """", 2)"
    Set objStrClose =Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).FindChild("Name",strTemp,10,True)
    objStrClose.Closed=true
    Delay(2000)
    
End Sub
'********************************************************************************************************************88
Sub sExpandLayout(strParameters)
'Sub sExpandLayout()

On Error Resume Next 
    Dim strLevel1layout,strLevel2layout,strLevel3layout,strWrkSpaceName
    Dim objNewWrkSpace_okbtn,objNewWrkSpace_Name
    Dim objNewWrkSpace_Txtbox,objopenforEdit,objWrkspace_popup
    Dim strTemp,objTemp,intRow,barManager,intTotNodeCnt,Text,objCellText,intl,intK,strDesc1,strDesc2
    Dim objWrkSpace,objwrkspacepop,objwrkspcUpload,objConfirm,objGridCell,DescLocalText,intSeriesID

    strLevel1layout=getSplitValue(strParameters,"LEVEL1LAYOUT")
    strLevel2layout=getSplitValue(strParameters,"LEVEL2LAYOUT")
    strLevel3layout=getSplitValue(strParameters,"LEVEL3LAYOUT")
				
'				strLevel1layout="dX Non-Asia Database (Current Eng Version)"
'    strLevel2layout="Z-Testing Topic(IT-use only)"
'    strLevel3layout="Automation"
    
      strTemp =  "WPFObject(""LayoutTreeListView"")"
      Set GridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,True)
      strTemp = "WPFObject(""LayoutTreeControl"")"
	 		Set GridSourceTree = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,True)
		 	Delay 2000,"Please Wait..."
    ''Selecting Level1 layout
    intTotNodeCnt=GridControl.Nodes_2.Count
    For intI=0 to intTotNodeCnt-1         
        If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strLevel1layout) then
									  GridControl.Nodes_2.Item(intI).ExpandAll	        							
          log.Message "Level 1 Layout - " & GridControl.Nodes_2.Item(intI).Content.Description       
          blnFlag=False  
          Exit For
        End If
    Next
    If blnFlag = True then
      strTCRemarks="Level 1 Layout not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If
  
    Delay 5000,"Please Wait..."
    blnFlag = True 
    ''Selecting Level2 Layout
    intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
    For intJ=0 to intTotNodeCnt-1
      If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2layout) then
        GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
        log.Message "Level2 layout Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
        blnFlag = False 
        Exit For
      End If
    Next
    If blnFlag = True then
      strTCRemarks="Level2 Source Name not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If

    Delay 5000,"Please Wait..."
    blnFlag = True    
    ''Selecting Level3 Layout
      intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
      For intK=0 to intTotNodeCnt-1
        If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel3layout) then
          GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Expand(True)
          intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
          
            Call GridControl.ClearSelectionCore
            Call GridControl.FocusViewAndRow(GridControl,intRow)
            GridControl.SetFocusOnCurrentItem
            Call GridControl.SelectRowCore(intRow)
         
          log.Message "Level3 layout Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description
          blnFlag = False
          Exit For   
        End If 
      Next
      If blnFlag = True then
        strTCRemarks="Level3 Source Name not found"
        strTestCaseResult="FAIL"
        Exit Sub
      End If
      
  If Err.Number > 0 Then
    Log.Warning("Error in 'sExpandLayout' ,Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'***************************************************************************************************************************************

Sub sLayout_FileRepAddLink()
  
  On Error Resume Next
  Dim strTemp,objFileRepMenuItem,objFileRepUsage,objLayoutFileGridControl,intFootnoteRowIndex
  
  'strFooter="http://test6-15-2017 11:44:08 AM"
   
  strTemp="WPFObject(""ContentControlEx"", ""File Repository"", 2)"	
  Set objFileRepMenuItem=Sys.Process("EdgeClient").FindChild("Name",strTemp,30,true)
  If objFileRepMenuItem.Exists=True then
    objFileRepMenuItem.Click   
  End If
  
  strTemp="WPFObject(""ContentControlEx"", ""File Repository Usage"", 2)"
	 Set objFileRepUsage=Sys.Process("EdgeClient").FindChild("Name",strTemp,30,true)
  If objFileRepUsage.Exists=True then
   objFileRepUsage.Click
    Delay 2000, "Please wait form is loading"
  End If
  
  'Remove associated footnote if present
  strTemp="WPFObject(""LayoutFileGridControl"")"	
  Set objLayoutFileGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,30,true)
  Delay 2000
  intFootnoteRowIndex=objLayoutFileGridControl.FindRow("Group","FOOTNOTE")
  Delay 2000
  
  If intFootnoteRowIndex>=0 then
    Call objLayoutFileGridControl.ClickCell(intFootnoteRowIndex,"Group")
    Call sEdgeProcessor()
    Delay 2000
    strTemp="WPFObject(""RemoveLinkButton"")"
    Set objRemoveLinkButton=Sys.Process("EdgeClient").FindChild("Name",strTemp,30,true)
    If objRemoveLinkButton.Enabled=true then
     objRemoveLinkButton.Click
     Set objMessageWindow = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "File Repository Usage")
     If objMessageWindow.Exists=True then
      Sys.Keys("Y")
     End If
     Delay 2000
     Set objMessageWindow = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "File Repository Usage")
     If objMessageWindow.Exists=True then
      Sys.Keys("O")
     End If     
    End If 'Removelb  
  End If 'footnote
  
  'Add footnote link
  strTemp="WPFObject(""AddLinkButton"")"
  Set objAddLinkButton=Sys.Process("EdgeClient").FindChild("Name",strTemp,30,true)
  If objAddLinkButton.Enabled=True then
  Call objAddLinkButton.ClickButton  
  End If
  
  Set objAddFileLinkView = Sys.Process("EdgeClient").WPFObject("HwndSource: AddFileLinkView", "Add New Link")
  If objAddFileLinkView.Exists=True then
   strTemp="WPFObject(""SelectionGrid"")"
   Set objSelectionGrid=Sys.Process("EdgeClient").FindChild("Name",strTemp,30,true)
   strTemp="WPFObject(""SelectionGridTableView"")"
   Set objSelectionGridTableView=Sys.Process("EdgeClient").FindChild("Name",strTemp,30,true)
   intGroupCount=objSelectionGrid.wGroupCount
   For i = 0 to intGroupCount-1
    If objSelectionGrid.DataController.GroupInfo.Item(i).GroupValue.OleValue="YYY" then
     intRowHandle=objSelectionGrid.DataController.GroupInfo.Item(i).Handle
     Call objSelectionGrid.ExpandGroup(i,true)
     Delay 2000
     Call objSelectionGridTableView.set_FocusedRowHandle(intRowHandle)
     Delay 2000 
     Call objSelectionGrid.Keys("[Enter]")
     Call objSelectionGrid.Keys("[Enter]")
     Sys.Keys("[Down]")
     Sys.Keys("[Down]")
     Sys.Keys("[Down]")    
     Delay 2000     
    Exit For
   End If
   Next
   Do

    If Trim(objSelectionGrid.CurrentItem.FileName.OleValue)=Trim(strFooter) Then
     If Err.Number>0 then
        Delay 2000
     End If
    End If
    If Trim(objSelectionGrid.CurrentItem.FileName.OleValue) = Trim(strFooter) Then     
      strTemp="WPFObject(""OkButton"")"						
      Set objOkButton=objAddFileLinkView.FindChild("Name",strTemp,30,true)
      If objOkButton.Exists=True then
       Call objOkButton.ClickButton
       strTCRemarks="Footnote added to Layout folder"
      End If
      Do
      Delay 2000      
      Loop While objAddFileLinkView.Exists=true
      Exit Do
     Else      
      Sys.Keys("[Down]")
     End If
   Loop Until IsNull(objSelectionGrid.CurrentItem)
   Else
    strTestCaseResult="FAIL"
    strTCRemarks="Add New File Link window is not found"
  End If
  Call CloseWindow
  Call CloseWindow  
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'Layout_FileRepAddLink()' ,Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'***************************************************************************************************************************************

Sub sFileRepositoryUsage(strParameters)
      On Error Resume Next   
      Dim edgeClient,tableView,hierarchyPanel,dockPanel,layoutGroup
      Dim objGrid,objGridControl
      Dim rowMarginControl,rowMarginControl2
      Dim objTemp,objRemoveButton,StrCountryname,strObject
      Dim objEdge,strTemp,objStrClose
      Dim ObjGridLoad,ObjGridClose,objEdgeMDI
      Dim objEdgeFilter
      
       CALL sLayoutFileRep(strParameters)
       StrCountry=getSplitValue(strParameters,"COUNTRY")
      'StrCountryname="Country: CHN"
  
      '' Opening File Repository Usage
      Set objEdge= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1)
      strTemp ="WPFObject(""LayoutPanel"", """", 2)"					
      Set objTemp=objEdge.FindChild("Name",strTemp,5)
      If objTemp.Exists = False then
        Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 2).WPFObject("BarSubItemLinkControl", "", 1).WPFObject("ContentControlEx", "File Repository", 2).Click
				Set objEdgeFilter= Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1)
       	strTemp="WPFObject(""ContentControlEx"", ""File Repository Usage"", 2)"
        Set objTemp=objEdgeFilter.FindChild("Name",strTemp,50)
        If objTemp.Exists = TRUE then
          Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 1).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "File Repository Usage", 2).Click
          Call sEdgeProcessor
          strTemp="WPFObject(""LayoutPanel"", """", 2)"
          Set objTemp=objEdge.WaitChild(strTemp,60000)
          If objTemp.Exists = False then
            strTestCaseResult = "FAIL"
            Exit Sub
          End If
        else
          strTestCaseResult = "FAIL"
          Exit Sub
        End if
      End If
 
      strTCRemarks = "Opened File Repository Usage Form"
      Set edgeClient = Aliases.EdgeClient
			strTemp ="WPFObject(""LayoutFileGridControl"")"
			Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
			Call objGridControl.ClickColumnHeaderRXY("Group", 42, 9)
     
      set objEdgeFilter= Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1)
      strTemp="WPFObject(""ContentControlEx"", ""Show Search Panel"", 2)"
      Set objTemp=objEdgeFilter.FindChild("Name",strTemp,50)
      If objTemp.Exists = TRUE then
        Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 11).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Show Search Panel", 2).Click
        Delay(5000)
      Else
        strTestCaseResult = "FAIL"
        Exit Sub  
      End If
      
      Set  tableView = objGridControl.WPFObject("LayoutFileTableView")
      Call tableView.Click(99, 17)
      Call tableView.Keys("Footnote")
      Delay(5000)
      strTemp = "WPFObject(""RemoveLinkButton"")"
      Set objTemp =  Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("Adorner").WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 2).WPFObject("Grid", "", 1).WPFObject("StackPanel", "", 1).FindChild("Name",strTemp,10,True)
      If objTemp.IsEnabled Then 
        Call objGridControl.ClickCell(0, "Group")
        Call objTemp.Click()
        Delay 500
        strTemp = "WPFObject(""Button_Yes"")"
        Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "File Repository Usage").WPFObject("CustomMessageBoxWindow", "File Repository Usage", 1).FindChild("Name",strTemp,10,True)
        Call sObjClick(strTemp)   
        Delay 3000 
        strTemp = "WPFObject(""Button_OK"")"
        Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "File Repository Usage").WPFObject("CustomMessageBoxWindow", "File Repository Usage", 1).FindChild("Name",strTemp,10,True)
        Call sObjClick(strTemp)        
  
        'Clicking on Close button(search)
        strTemp="WPFObject(""LayoutFileTableView"")"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,true)
        Call objTemp.Click(230, 16)
        Delay 5000
      Else
        'Clicking on Close button(search)
        strTemp="WPFObject(""LayoutFileTableView"")"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,true)
        Call objTemp.Click(230, 16)
        Delay 5000        
      End If 
      
      'Clicking on Add Link Button to add Datatalk
      strTemp="WPFObject(""AddLinkButton"")"
      Set objLinkButton=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
      Call objLinkButton.Click
      
      Delay 3000,"Grid loading..."
      
    strTemp="WPFObject(""SelectionGrid"")"
    Set objGridControl = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)    
    strTemp="WPFObject(""SelectionGridTableView"")"
    Set objTableView = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    
    For i = 0 to objGridControl.wGroupCount-1
    If objGridControl.DataController.GroupInfo.Item(i).GroupValue.OleValue=strCountry then
        Call objGridControl.ExpandGroup(i,true)
        Call objTableView.set_FocusedRowHandle(objGridControl.DataController.GroupInfo.Item(i).Handle)
        Call objTableView.SelectRow(objGridControl.DataController.GroupInfo.Item(i).Handle)
        Delay 5000,"Loading Grid Rows"
        Exit For 
    End If
    Next
    
    Do While(objTableView.FocusedRowHandle<0)
    objTableView.Keys("[Down]")
    Loop
    
    blnTalk=False
    blnFootnote=False
    intCount=0
    
    Do While(blnTalk=False)
    If objTableView.FocusedRow.FileGroupId.OleValue="TALK" then
      strTemp="WPFObject(""OkButton"")"
      Set objOkButton=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
      Call objOkButton.Click
      Delay 5000
      blnTalk=True
      strTCRemarks=strTCRemarks & "<br />" &"Datatalk added successfully"
      Exit Do
    Else
      objTableView.Keys("[Down]")
      intCount=intCount+1
      If intCount>100 then
        Exit Do
      End If
    End If
    Loop
    
    'Clicking on Add Link Button to add footnote
    strTemp="WPFObject(""AddLinkButton"")"
    Set objLinkButton=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    Call objLinkButton.Click
    
    Delay 5000,"Grid loading..."
    
    For i = 0 to objGridControl.wGroupCount-1
    If objGridControl.DataController.GroupInfo.Item(i).GroupValue.OleValue=strCountry then
        Call objGridControl.ExpandGroup(i,true)
        Call objTableView.set_FocusedRowHandle(objGridControl.DataController.GroupInfo.Item(i).Handle)
        Call objTableView.SelectRow(objGridControl.DataController.GroupInfo.Item(i).Handle)
        Delay 5000,"Loading Grid Rows"
        Exit For 
    End If
    Next
    
    Do While(objTableView.FocusedRowHandle<0)
    objTableView.Keys("[Down]")
    Loop
    
    intCount=0
    
    Do While(blnFootnote=False)
    If objTableView.FocusedRow.FileGroupId.OleValue="FOOTNOTE" then
      strTemp="WPFObject(""OkButton"")"
      Set objOkButton=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
      Call objOkButton.Click
      Delay 5000
      blnFootnote=True
      strTCRemarks=strTCRemarks & "<br />" &"Footnote added successfully"
      Exit Do
    Else
      objTableView.Keys("[Down]")
      intCount=intCount+1
      If intCount>100 then
        Exit Do
      End If
    End If
    Loop
    
    Call CloseWindow
    Call CloseWindow
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sFileRepositoryUsage',Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
  End If
    
End Sub
'***************************************************************************************************************************************

Sub sLayoutFileRep(strParameters)

On Error Resume Next 
    Dim strLevel1layout,strLevel2layout,strLevel3layout,strWrkSpaceName
    Dim objNewWrkSpace_okbtn,objNewWrkSpace_Name
    Dim objNewWrkSpace_Txtbox,objopenforEdit,objWrkspace_popup
    Dim strTemp,objTemp,intRow,barManager,intTotNodeCnt,Text,objCellText,intl,intK,strDesc1,strDesc2
    Dim objWrkSpace,objwrkspacepop,objwrkspcUpload,objConfirm,objGridCell,DescLocalText,intSeriesID

    strLevel1layout=getSplitValue(strParameters,"LEVEL1LAYOUT")
    strLevel2layout=getSplitValue(strParameters,"LEVEL2LAYOUT")
    strLevel3layout=getSplitValue(strParameters,"LEVEL3LAYOUT")


    'strLevel1layout="dX Non-Asia Database (Current Eng Version)"
    'strLevel2layout="Z-Testing Topic(IT-use only)"
    'strLevel3layout="Sandbox (Benny)"

    strDesc1=aqDateTime.Now
    strDesc2=aqDateTime.Now
    DescText=Replace(strDesc1,"/","-")
    DescText=Replace(DescText,":","_")
    DescLocalText=DescText
    strWrkSpaceName=DescText


    Delay 1000,"Please Wait..."

    ''Setting grid Objects
    'call sloadLayout()
    strTemp = "WPFObject(""LayoutTreeListView"")"
    Set GridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("LayoutTreeControl").FindChild("Name",strTemp,10,True)
		Set GridSourceTree = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("LayoutTreeControl")
    Delay 1000,"Please Wait..."
    ''Selecting Level1 layout
    intTotNodeCnt=GridControl.Nodes_2.Count
    For intI=0 to intTotNodeCnt-1         
        If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strLevel1layout) then
          GridControl.Nodes_2.Item(intI).ExpandAll
          log.Message "Level 1 Layout - " & GridControl.Nodes_2.Item(intI).Content.Description       
          blnFlag=False  
          Exit For
        End If
    Next
    Delay 2000,"Please Wait..."
    If blnFlag = True then
      strTCRemarks="Level 1 Layout not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If
  
    blnFlag = True 
    ''Selecting Level2 Layout
    intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
    Delay 1000,"Please Wait..."
    For intJ=0 to intTotNodeCnt-1
      If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2layout) then
        GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
        log.Message "Level2 layout Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
        blnFlag = False 
        Exit For
      End If
    Next
    Delay 2000,"Please Wait..."
    If blnFlag = True then
      strTCRemarks="Level2 Source Name not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If

    blnFlag = True    
    ''Selecting Level3 Layout
    Delay 1000,"Please Wait..."
      intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
      For intK=0 to intTotNodeCnt-1
        If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel3layout) then
          GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).ExpandAll
          intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
          GridControl.set_FocusedRowHandle(intRow)
          GridControl.Keys("[Down]")
          GridControl.Keys("[Up]")  
          log.Message "Level3 layout Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description
          blnFlag = False
          Exit For   
        End If 
      Next
      If blnFlag = True then
        strTCRemarks="Level3 Source Name not found"
        strTestCaseResult="FAIL"
        Exit Sub
      End If
       Call sEdgeProcessor
     
 If Err.Number > 0 Then
    Log.Warning("Error in 'sLayoutFileRep'  , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
 End If       
 End Sub
 
'***************************************************************************************************************************************
 
Sub sCDMTree1(strParameters)
'Sub sCDMTree1
On Error Resume Next 

  Dim objGrid,intRow,strTopic,intSectionCount,intI,intJ,intK,strSearch1,strs,strSearch2,strSearch3

    strSearch1=getSplitValue(strParameters,"SEARCH1")
    strSearch2=getSplitValue(strParameters,"SEARCH2")
    strSearch3=getSplitValue(strParameters,"SEARCH3")

'    strSearch1="Z-Testing Topic(IT-use only)"
'    strSearch2="Automation"
'    strSearch3="Sample1"

    Set objGrid=Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMMain_MDIParent").WinFormsObject("MdiClient", "").WinFormsObject("Layout_Form").WinFormsObject("Panel_Rebar").WinFormsObject("GridEX_Tree")
    intRow=objGrid.get_RowCount

    ''Expanding Topic
    For IntI=0 to intRow-1
        objGrid.set_Row(intI)
        strTopic=objGrid.CurrentRow.DataRow.Row.TP_WSValue_Name.ToString
        If strTopic=strSearch1 then        
            objGrid.CurrentRow.set_Expanded(True)
            Exit For
        End If
    Next
    ''Expanding Section
    For IntJ=1 to intRow
        objGrid.set_Row(intI + intJ)
        strTopic=objGrid.CurrentRow.DataRow.Row.SC_WSValue_Name.ToString
        If strTopic=strSearch2 then
           'Double-click on search icon to get Datatalk window and save screenshot
            objGrid.Col = 1 'grid.currentrow.getcells
            intX = objGrid.CurrentRow.Position
            Set objBounds = objGrid.GetCellBounds(intX, objGrid.CurrentColumn)
            Call objGrid.DblClick(objBounds.Left,objBounds.Top)
            Delay 10000
            Set PicObj = Utils.Picture
            Set PicObj = Sys.Desktop.Picture
            PicObj.SavetoFile(strLogFolder & "Screenshots\" & strTestCase_No &  "_" & picCount & ".jpg")
            picCount = picCount + 1
            strTCRemarks="Screenshot of Datatalk window is captured"
            

            'Activate first tab
            Set objCDMTabs = Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMMain_MDIParent").WinFormsObject("UIMdiTabGroup", "", 2)
            Call objCDMTabs.Click(40,12)
            Delay 5000
            
            'Right-click on current row for Footnotes window and save screenshot
            objGrid.Col = 2 'grid.currentrow.getcells
            intX = objGrid.CurrentRow.Position
            Set objBounds = objGrid.GetCellBounds(intX, objGrid.CurrentColumn)
            Call objGrid.ClickR(objBounds.Left,objBounds.Top)
            Delay 2000
            Set objContextMenu = Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("JNSO", "")
            If objContextMenu.Exists = true then
             Call objContextMenu.Click(5,5) 'Clicking on footnote option
             Delay 10000
            Set PicObj = Utils.Picture
            Set PicObj = Sys.Desktop.Picture
            PicObj.SavetoFile(strLogFolder & "Screenshots\" & strTestCase_No &  "_" & picCount & ".jpg")
            picCount = picCount + 1
            strTCRemarks=strTCRemarks & "<br/>" &"Screenshot of Footnote window is captured."
            sys.Keys "~[F4]" 
            Delay 3000,"Closing window..."            
            End If            
            Exit For
        End If
    Next
  
    ''Closing
    sys.Keys "~[F4]"
    Set objTemp=Sys.WaitChild("Process(""ISI.CeicDataManager.Startup"")",1200000)
    If objTemp.Exists = True then
        strTemp="WinFormsObject(""CDMYesNoDialog"")"
        Set objTemp=Sys.Process("ISI.CeicDataManager.Startup").WaitChild(strTemp,1200000)
        If objTemp.Exists = True then
          Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMYesNoDialog").WinFormsObject("TableLayoutPanel1").WinFormsObject("UiButton_Yes").Click
        Else
          strTestCaseResult = "ABORT"
  	      strTCRemarks="CDM Closing Dialog box not found"
          Exit Sub  
        End If
    Else
        strTestCaseResult = "ABORT"
	      strTCRemarks="CDM Dialog box not found"
        Exit Sub  
    End If
    Delay 5000,"Closing CDM"
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sCDMTree1' Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
  End If
    
End Sub

'***************************************************************************************************************************************

Sub sHome_MasterMaintenance()

On Error Resume Next
strEnvi = "Edge ( US Integration )" 
Dim objEdgeMDI,strObject,strObj,objsrc,strTemp,objEdgeFilter,objUnitPannel

  
  Delay 2000 , "Please Wait"
  
   strTemp= "WPFObject(""LayoutPanel"", """", 1)"
  Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).FindChild("Name",strTemp,10,True)
  If objTemp.Exists = True Then 
    if aqObject.GetPropertyValue(objTemp, "Caption")<> "Unit" Then   
       Call SClosesource() 
    End If  
  End If 
  
  'Open Source Workspace Viewer
     strTemp = "WPFObject(""TextBlock"", ""Unit"", 1)"
     Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
     If objTemp.Exists = False then      
        Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("RibbonControl").WPFObject("RibbonSelectedPageControl", "", 1).WPFObject("RibbonPagesControl", "", 1).WPFObject("RibbonPageGroupsControl", "", 1).WPFObject("RibbonPageGroupControl", "", 1).WPFObject("BarItemLinkInfo", "", 11).WPFObject("BarSubItemLinkControl", "", 1).Click
	    	Set objEdgeFilter= Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1)
		    strTemp="WPFObject(""ContentControlEx"", ""Unit"", 2)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        If objTemp.Exists = True then
          objTemp.Click
          Delay 2000,"Please wait Unit Window is opening..."
          Call sEdgeProcessor()
          log.Message "Unit  Window is Opened"
        End If
      Else
        log.Message "Unit Window is already Opened.."            
     End If  
   
	
  If Err.Number > 0 Then
    Log.Warning("Error in 'sHome_MasterMaintenance()' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

  Set objTemp=Nothing 
      
End Sub

'***************************************************************************************************************************************

Sub sUnit(strParameters)
'Sub sUnit()
On Error Resume Next
    'strEnvi = "Edge ( US Integration )" 
    Dim strTemp,objTemp,intI,strCategory,GridControl,strMultiplier,strLastUpdate,strMultiplier1,nRowCnt
    Dim objEdge,objStrClose

    strCategory=getSplitValue(strParameters,"CATEGORY")
		'strCategory = "Currency"
    
    ''Selecting Unit Category		
  	strTemp="WPFObject(""ComboBox"", """", 1)"   
  	Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("WaitControl").WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("StackPanel", "", 1).WPFObject("ComboBox", "", 1)
   	If objTemp.Exists = True then
      For intI=0 to objTemp.wItemCount
        strDesc=objTemp.Items.Item(intI).Description
        If Ucase(Trim(strDesc))=Ucase(Trim(strCategory)) then
          objTemp.set_Text(strCategory)
          ''Clicking on Add New
          strTemp="WPFObject(""ContentControlEx"", ""Add New"", 2)"
          Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
          If objTemp.Exists = True then
            objTemp.Click															
						Call sEdgeProcessor
          End If
          Exit For
        End If
      Next  
    End If

    ''Grid View
    Set GridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("WaitControl").WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("UnitsGridControl")
    nRowCnt = GridControl.wRowCount
    
		''Entering UMULTIPLIER ,AMTCUR
    Call GridControl.ClickCell(GridControl.wRowCount-1,"UMULTIPLIER")
    strMultiplier=DatePart("s",aqDateTime.Now) & DatePart("d",aqDateTime.Now)
    Sys.Keys strMultiplier
    Call GridControl.ClickCell(GridControl.wRowCount-1,"AMTCUR")
    Sys.Keys("aaa")
    Delay 1500,"Pls Wait.."
    Call GridControl.ClickCell(GridControl.wRowCount-1,"UMULTIPLIER")
    Delay 1500,"Pls Wait.."
    Call GridControl.ClickCell(GridControl.wRowCount-1,"UMULTIPLIER")    
    strUnit=GridControl.GetFocusedRowCellValue_2("Description")
    Delay 2000,"Pls Wait.."
    
    ''Upload
     Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("WaitControl").WPFObject("DockPanel", "", 1).WPFObject("StackPanel", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 9).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Upload", 2)
				If objTemp.Exists = True then
      objTemp.Click
      Delay 3000,"Upload.."
  
      strTemp="WPFObject(""PART_ContainerContent"")"
       Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Unit Page").FindChild("Name",strTemp,50,True)
      If objTemp.Exists = True then
         Sys.Keys "Y"        
				 Delay 3000, "Please Wait"
			   Set objOK =Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Unit Page").WPFObject("CustomMessageBoxWindow", "Unit Page", 1).WPFObject("Grid", "", 1).WPFObject("PART_InactiveBorder")
		     If objOK.Exists = True then
					  sys.Keys "[Enter]"
			   End If
        Call sEdgeProcessor()
        Delay 2000,"Uploading..."    
      End If
    End If
			
		''Closing Unit
     Dim i,j,objCaption,objText,strOk
     Set objEdge = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager")
		 if objEdge.Exists = True then  
     objText = objEdge.FindAllChildren("ClrClassName","LayoutGroup", 10,True)
     For i=0 to ubound(objText)
      log.Message objText(i).FullName
      log.Message objText(i).Name
      objCaption = objText(i).FindAllChildren("ClrClassName", "LayoutPanel",10,True)
      For j=0 to ubound(objCaption)
       log.Message objCaption(j).FullName
        log.Message objCaption(j).Name
        if objCaption(j).Content.Caption = "Unit" then 
          log.Message objCaption(j).FullName        
            Call objCaption(j).ClickR(275, 8)
            Delay 2000,"Pls Wait.."
            sys.Keys "[Down][Down][Down][Enter]"
            Delay 2000,"Pls Wait.."
            strTemp="WPFObject(""DXMessageBox"", """", 1)"
            Set strOk=Sys.Process("EdgeClient").FindChild("Name",strTemp,20,True)
            Delay 2000, "Closing Form..Pls wait.."
            If strOk.Exists Then
              SYS.Keys "[Enter]"
            End If
          Exit For 
          End if 
      Next
    Next   
  End If    
  strTCRemarks="New Unit Created- " & strUnit
  Set objTemp=Nothing
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sUnit(strParameters)' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'***************************************************************************************************************************************

Sub sCreateSeries(strParameters)

'Sub sCreateSeries()
On Error Resume Next

  Dim strSeriesName,strSourceSeriesName,strSeriesSourceCode,strSeriesStatus,strSeriesType,STPSheetName
  Dim strSeriousCountry,strOutputUnit,strSeriesNature,strSeriesFreq,strSourceUnit,strUnitType,strTestDataFile
  Dim strAliasName,strFileName,STP,strTimepoints,strText,strStartcolumn
  Dim i,FilePath,intcount,intj, intCol
  Dim objArray,oSTP_ExcelObj,objSTPXls,objActiveWB,netUIHWND,wndEXCEL7
  Dim intlastRow,lastColumn,inti,strTemp,objErrmsg,objOkClick,File
  
  Const xlFillDefault = 0
  strStartcolumn=0
  STP= getSplitValue(strParameters,"STP") 
  strTestDataFile =getSplitValue(strParameters,"TestDataFile") 
  STPSheetName= getSplitValue(strParameters,"STPSheetName")
  strSeriesName = getSplitValue(strParameters,"Series Name")
  strSourceSeriesName = getSplitValue(strParameters,"Source Series Name")
  strSeriesSourceCode=  getSplitValue(strParameters,"Series Source Code")
  strForeCast= getSplitValue(strParameters,"ForeCast")
  strSeriesStatus =  getSplitValue(strParameters,"Series Status")
  strSeriesType =  getSplitValue(strParameters,"Series Type")
  strSeriousCountry = getSplitValue(strParameters,"Serious Country")
  strOutputUnit=  getSplitValue(strParameters,"Output Unit")
  strSeriesNature =  getSplitValue(strParameters,"Series Nature")
  strSeriesFreq = getSplitValue(strParameters,"Series Freq")
  strSourceUnit =  getSplitValue(strParameters,"Source Unit")
  strUnitType = getSplitValue(strParameters,"Unit Type") 
  strTimepoints = getSplitValue(strParameters,"Timepoints")
  strExcelNumber = getSplitValue(strParameters,"ExcelNumber")
 strExcelNumber =Cint(strExcelNumber)
  
 
  If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_STP_PRT06"))Then
    STPSheetName= getSplitValue(strParameters,"STPSheetName1")
 End If
 
  'For Unit testcase(PRT)
  If strUnitType="ZZZ" then
   strUnitType=strUnit
  End If
  

'  STPSheetName="D_1"
'  STP="ProjectTeam_STP"
'  strTestDataFile="YYY-Automation_UIT4_1-ProjectTeam"
'  strSeriesName="test-series"
'  strSourceSeriesName="test-series"
'  strSeriesSourceCode="test-series"
'  strSeriesStatus="T"
'  strSeriesType="Key"
'  strSeriousCountry="YYY"
'  strOutputUnit="NA"
'  strSeriesNature="R"
'  strSeriesFreq="D"
'  strSourceUnit="NA"
'  strUnitType="%"
'  strTimepoints="5"



  'Get the File Loacation 
  FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")&"\"&strTestDataFile & ".xlsx"

 
  Set objSTPXls=GetObject(FilePath)
  With objSTPXls
    With .Sheets(STPSheetName).Select
    End With

    With .WorkSheets(STPSheetName)
      Dim r
        delay Status_Wait, "Finding last Row the Excel sheets.. Pls wait.."
         row = .UsedRange.Rows.Count
         'msgbox row
        For r = 1 To .UsedRange.Rows.Count
          If IsEmpty(.UsedRange.Cells(r, 1).Value) = True AND (.UsedRange.Cells(r, 1).Text) ="" Then           
           intlastRow = r           
           Exit For
          End  If 
        Next   
         
        inti=3
        lastColumn=.UsedRange.Columns.Count        
       For inti = 3 to lastColumn
          strText=.Cells(2,inti)
          .Cells(intlastRow,inti).Select
          If UCASE(strText)=UCase("Series Name") then 
          .Cells(intlastRow,inti).Value=strSeriesName
          ElseIf UCASE(strText)=UCase("Source Series Name") then 
          .Cells(intlastRow,inti).Value=strSourceSeriesName
          ElseIf UCASE(strText)=UCase("Series Source Code") then 
          .Cells(intlastRow,inti).Value=strSeriesSourceCode
          ElseIf UCASE(strText)=UCase("ForeCast") then 
          .Cells(intlastRow,inti).Value=strForeCast 
          ElseIf UCASE(strText)=UCase("Series Status") then 
          .Cells(intlastRow,inti).Value=strSeriesStatus
          ElseIf UCASE(strText)=UCase("Series Type") then 
          .Cells(intlastRow,inti).Value=strSeriesType
          ElseIf UCASE(strText)=UCase("Series Country") then 
          .Cells(intlastRow,inti).Value=strSeriousCountry
          ElseIf UCASE(strText)=UCase("Output Unit") then 
          .Cells(intlastRow,inti).Value=strOutputUnit
          ElseIf UCASE(strText)=UCase("Series Nature") then 
          .Cells(intlastRow,inti).Value=strSeriesNature
          ElseIf UCASE(strText)=UCase("Series Freq") then 
											intFreqColumn = inti														
          .Cells(intlastRow,inti).Value=strSeriesFreq
          ElseIf UCASE(strText)=UCase("Source Unit") then 
          .Cells(intlastRow,inti).Value=strSourceUnit
          ElseIf UCASE(strText)=UCase("Unit Type") then 
              .Cells(intlastRow,inti).Value=strUnitType  
          ElseIf isDate(strText)  then
              strStartcolumn=inti
              Exit For
          End if 
         Next 
         
          Delay 5000 , "Creating a new series.."
          
          strTimepoints = getSplitValue(strParameters,"Timepoints")
          If strTimepoints=6 then
              ''Copy the Series for 1 row 
              strEndSeriesColumn=strStartcolumn-3
              strEndSeriesColumn=GetColumnName(strEndSeriesColumn)
              Delay(5000)
        
              With objSTPXls
                With .Sheets(STPSheetName).Select
                End With      
                With .WorkSheets(STPSheetName)
                   .Range("C" & intlastRow & ":" & strEndSeriesColumn & intlastRow ).Select
                    intTargetRow=intlastRow + 1
                    .Range("C" & intlastRow & ":" &strEndSeriesColumn & intlastRow).AutoFill  .Range("C" & intlastRow & ":" & strEndSeriesColumn & intTargetRow), xlFillDefault
																				.Cells(intlastRow+1,intFreqColumn).Select
																				.Cells(intlastRow+1,intFreqColumn).Value=strSeriesFreq																																															       
                End With
              END WITH
          End If
          
          ''Mark Good    
          With objSTPXls
            With .WorkSheets(STPSheetName)
                 .Cells.Select
            End With
          End With
          
      
  'Click on Mark good
  Call sClicKMarkGood(2,strTestDataFile)

  'click on Upload Series
  Call sClickUpload(2,strTestDataFile)
  
	'For Unit Testcase(PRT)
    strUnitType = getSplitValue(strParameters,"Unit Type") 
    If strUnitType="ZZZ" then
      Call sClickonInformation(2,"Yes")
      strTCRemarks="STP Series created successfully with Unit:"&strUnit
      Call sCloseSource
      Exit Sub
    Else
      'select No on File Close Window
       Call sClickonInformation(2,"No")
       Delay 2000, "Please Wait"
    End If

      'For Daily Check Panel testcase(PRT)
      strSeriesFreq = getSplitValue(strParameters,"Series Freq")
      If strSeriesFreq="D" then
         With objSTPXls
            With .WorkSheets(STPSheetName)
                 strSeriesID=.Cells(intlastRow,1).Value
                 DescText = intlastRow       
                 strTCRemarks="STP Series created successfully with Series ID="&strSeriesID  
                 Exit Sub      
            End With
          End With
      End If
          
       With objSTPXls
          With .WorkSheets(STPSheetName)
               .Cells.Select
                Call sClickRefresh(strExcelNumber,strTestDataFile)
                Call sExcelFullHistory
          End With
        End With
    End With
  End With 
  log.Message  "New Series Created"
  strTCRemarks =  "Created Series for STP" 
  strTestCaseResult="PASS"

  'click on Mark Good
  Call sClicKMarkGood(2,strTestDataFile)
  
  'Click om Upload Series
  Call sClickUpload(2,strTestDataFile)
  
  'click on No Button on File close window
  Call sClickonInformation(2,"No")  
        
 ' For PRT testcase TC_Todo_30
 strTimepoints = getSplitValue(strParameters,"Timepoints")
  If strTimepoints=0 then
     If File.Exists= True Then
        Sys.Keys "Y"
        Delay 2000 , "Please Wait"
     End If
     Exit Sub
  End If
        

  'For PRT testcase TC_Todo_11
 strTimepoints = getSplitValue(strParameters,"Timepoints")
  If strTimepoints=5 Then 'or strTimepoints=6 then
     With objSTPXls
    With .WorkSheets(STPSheetName)
         .Cells.Select
         'Refresh Series
          Call sClickRefresh(strExcelNumber,strTestDataFile)
          Call sExcelFullHistory
    End With
   End With          
   Exit Sub
  End If
              
    
    With objSTPXls
      With .WorkSheets(STPSheetName)         
          .Cells(intlastRow,1).Select              
           strSeriesID=.Cells(intlastRow,1).Value															
           strSeriesID=.Cells(intlastRow,1).text															
          .Cells(intlastRow,lastColumn).Select
      End With
    End With
     strTCRemarks =  "Created New Series for STP - "&strSeriesID 

  objArray = Sys.FindAllChildren("ProcessName","EXCEL", 5,True)
  For i=0 to ubound(objArray)
    log.Message objArray(i).FullName
    set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*RUN*",1,True)
    If oSTP_ExcelObj.Exists = True Then
    Else
      objArray(i).Close
    End If
  Next
  Delay(5000)
  Call SClosesource()
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sCreateSeries(strParameters)' function - " & Err.Description)
    Err.Clear
  End If
End Sub 

'***************************************************************************************************************************************

Sub sHome_Report()


On Error Resume Next

Dim objEdgeMDI,strObject,strObj,objsrc,strTemp
'strEnvi = "Edge ( US Production )"  
  strObject = "WPFObject(""HwndSource: Shell"", """& strEnvi &""")"
  Set objEdgeMDI = Sys.Process("EdgeClient").WaitChild(strObject, 600000)
  If objEdgeMDI.Exists then
    strTemp="WPFObject(""TextBlock"", ""Report"", 1)"
    Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).FindChild("Name",strTemp,14,True)
    If objTemp.Exists = False then
        Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("RibbonControl").WPFObject("RibbonSelectedPageControl", "", 1).WPFObject("RibbonPagesControl", "", 1).WPFObject("RibbonPageGroupsControl", "", 1).WPFObject("RibbonPageGroupControl", "", 1).WPFObject("BarItemLinkInfo", "", 17).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("TextSplitterControl", "", 1).WPFObject("ContentControl", "Report", 1)
        If objTemp.Exists = True then
           objTemp.Click
				   Call  sEdgeProcessor
      	   log.Message "Report layout is opened"
         End If       
    Else
      log.Message "Report is already opened"
      strTCRemarks="Report is already opened"
      Exit Sub  
    End If
  Else
    log.Message "RibbonWindow not found"
  End If
		
    If Err.Number <> 0 then
    Log.Message Err.Description 
				'  Set ObjSys=Nothing
'  Set objsrc=Nothing
  
End If
  If Err.Number > 0 Then
    Log.Warning("Error in 'Home_Report()' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Sub

'***************************************************************************************************************************************

Sub sReport(strParameters)
On Error Resume Next
'Sub sReport()
  Dim strTemp,objTemp,GridControl,GridSourceTree,strLevel1,strLevel2,intTotNodeCnt,intRow
  Dim strYear,strMonth,strOffice,strCountry,strLagtime,strSeriesStatus,strSourceOrder,strSeriesType,oSTP_ExcelObj

  strLevel1=getSplitValue(strParameters,"LEVEL1")
  strLevel2=getSplitValue(strParameters,"LEVEL2")
  strYear=getSplitValue(strParameters,"Year")
  strMonth=getSplitValue(strParameters,"Month")
		
		
'		strLevel1="Summary Report"
'  strLevel2="Layout Count Report"
'  strYear="2015"
'  strMonth="August"
		


   Set GridControl= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("ReportTreeLevel").WPFObject("ReportTreeView")
   Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("ReportTreeLevel")

  ''First level
    intTotNodeCnt=GridControl.Nodes_2.Count
    For intI=0 to intTotNodeCnt-1         
        If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strLevel1) then
          GridControl.Nodes_2.Item(intI).ExpandAll
          log.Message "First Level- " & GridControl.Nodes_2.Item(intI).Content.Description       
          blnFlag=False  
          Exit For
        End If
    Next
  
    ''Second level
    intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
    For intJ=0 to intTotNodeCnt-1
      If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2) then
        intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
        Call GridSourceTree.ClickCell(intRow, "Group Name") 
        log.Message "Second Level- " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description 
        blnFlag = False 
        Exit For
      End If
    Next
  
    Delay 4000,"Pls Wait.."
  
  
    ''Report Filter
    Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 1)
		If objTemp.Exists = True then
    	Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 1).WPFObject("ScrollViewer", "", 1).WPFObject("grdMainSearch").WPFObject("CntCtrl").WPFObject("grdSearch").WPFObject("cbo1")
		  If objTemp.Exists = True then
         objTemp.set_Text(strYear)
			   Delay 1000,"Year"
      End If
      ''Month
      Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 1).WPFObject("ScrollViewer", "", 1).WPFObject("grdMainSearch").WPFObject("CntCtrl").WPFObject("grdSearch").WPFObject("cbo2")
		  If objTemp.Exists = True then
        objTemp.set_Text(strMonth)
				Delay 1000,"Month"
       End If

      ''Clicking on Search button      
      Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 1).WPFObject("ScrollViewer", "", 1).WPFObject("grdMainSearch").WPFObject("Grid", "", 1).WPFObject("btnSearch").Click
	     Call sEdgeProcessor
    
      ''Checking for Excel
      blnFlag=False
      objArray = Sys.FindAllChildren("ProcessName","EXCEL", 1,True)
      For i=0 to ubound(objArray)
        log.Message objArray(i).FullName
        set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*" & strLevel2 & "*",1,True)
        If oSTP_ExcelObj.Exists = True Then
          strFileName=oSTP_ExcelObj.WndCaption 
          log.Message strFileName
          blnFlag=True
          Exit For
        Else
          log.Message "Excel file not found" 
        End If
      Next    
      If blnFlag=False then
          Delay 1000*60*1,"Opening Report...Pls Wait.."
          ''Checking for Excel
          objArray = Sys.FindAllChildren("ProcessName","EXCEL", 1,True)
          For i=0 to ubound(objArray)
            log.Message objArray(i).FullName
            set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*" & strLevel2 & "*",1,True)
            If oSTP_ExcelObj.Exists = True Then
              strFileName=oSTP_ExcelObj.WndCaption 
              log.Message "Found Excel in level I-" & strFileName
              blnFlag=True
              Exit For
            Else
              log.Message "Excel file not found" 
            End If
          Next
      End If
      ''II
      If blnFlag=False then
        Delay 1000*60*1,"Opening Report...Pls Wait.."

        ''Checking for Excel
        objArray = Sys.FindAllChildren("ProcessName","EXCEL", 1,True)
        For i=0 to ubound(objArray)
          log.Message objArray(i).FullName
          set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*" & strLevel2 & "*",1,True)
          If oSTP_ExcelObj.Exists = True Then
            strFileName=oSTP_ExcelObj.WndCaption 
            log.Message "Found Excel in level II-" & strFileName
            blnFlag=True
            Exit For
          Else
            log.Message "Excel file not found" 
          End If
        Next
      End If
      ''III
      If blnFlag=False then
        Delay 1000*60*1,"Opening Report...Pls Wait.."

        ''Checking for Excel
        objArray = Sys.FindAllChildren("ProcessName","EXCEL", 1,True)
        For i=0 to ubound(objArray)
          log.Message objArray(i).FullName
          set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*" & strLevel2 & "*",1,True)
          If oSTP_ExcelObj.Exists = True Then
            strFileName=oSTP_ExcelObj.WndCaption 
            log.Message "Found Excel in level III-" & strFileName
            blnFlag=True
            Exit For
          Else
            log.Message "Excel file not found" 
          End If
        Next
      End If
      ''IV
      If blnFlag=False then
        Delay 1000*60*1,"Opening Report...Pls Wait.."

        ''Checking for Excel
        objArray = Sys.FindAllChildren("ProcessName","EXCEL", 1,True)
        For i=0 to ubound(objArray)
          log.Message objArray(i).FullName
          set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*" & strLevel2 & "*",1,True)
          If oSTP_ExcelObj.Exists = True Then
            strFileName=oSTP_ExcelObj.WndCaption 
            log.Message "Found Excel in level IV-" & strFileName
            blnFlag=True
            Exit For
          Else
            log.Message "Excel file not found" 
          End If
        Next
      End If
      ''V
      If blnFlag=False then
        Delay 1000*60*1,"Opening Report...Pls Wait.."

        ''Checking for Excel
        objArray = Sys.FindAllChildren("ProcessName","EXCEL", 1,True)
        For i=0 to ubound(objArray)
          log.Message objArray(i).FullName
          set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*" & strLevel2 & "*",1,True)
          If oSTP_ExcelObj.Exists = True Then
            strFileName=oSTP_ExcelObj.WndCaption 
            log.Message "Found Excel in level V-" & strFileName
            blnFlag=True
            Exit For
          Else
            log.Message "Excel file not found" 
          End If
        Next
      End If
      ''VI
      If blnFlag=False then
        Delay 1000*60*1,"Opening Report...Pls Wait.."
        ''Checking for Excel
        objArray = Sys.FindAllChildren("ProcessName","EXCEL", 1,True)
        For i=0 to ubound(objArray)
          log.Message objArray(i).FullName
          set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*" & strLevel2 & "*",1,True)
          If oSTP_ExcelObj.Exists = True Then
            strFileName=oSTP_ExcelObj.WndCaption 
            log.Message "Found Excel in level VI-" & strFileName
            blnFlag=True
            Exit For
          Else
            log.Message "Excel file not found" 
          End If
        Next
      End If  
    End If
    If blnFlag=True then
				 'Sys.Process("EXCEL", 2).Close
      strTCRemarks="Report found for " & strlevel2
      Call CloseWindow
      oSTP_ExcelObj.Close
    End If
    Call CloseWindow
 
  If Err.Number > 0 Then
    Log.Warning("Error in 'sReport(strParameters)' function , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If  
    
End Sub

'***************************************************************************************************************************************

Sub sAddMCFlag(strParameters)
'Sub sAddMCFlag
    
    On Error Resume Next
    Dim strSource_Name,strLevel2src_Name,objNewWrkSpace_okbtn,objNewWrkSpace_Name,strWrkSpaceName
    Dim objNewWrkSpace_Txtbox,objopenforEdit,objWrkspace_popup
    Dim strTemp,objTemp,intRow,barManager,intTotNodeCnt,Text,strDesc1,strDesc2
    Dim objWrkSpace,objwrkspacepop,objwrkspcUpload,objConfirm,objGridCell,DescLocalText,intSeriesID
    Dim layoutGroup
    Dim strTemp1,objNewWrkSpaceName

    strSource_Name=getSplitValue(strParameters,"SOURCE")
    strLevel2src_Name=getSplitValue(strParameters,"LEVEL2SOURCE")
'    strSource_Name="Test"
'    strLevel2src_Name="Automation"
'				strEnvi = "Edge ( US Integration )" 
    
       
    strDesc1=aqDateTime.Now
    strDesc2=aqDateTime.Now
    DescText=Replace(strDesc1,"/","-")
    DescText=Replace(DescText,":","_")
    MCFlag=Replace(DescText," ","K")
    MCFlag=Replace(MCFlag,"_","K")
    MCFlag=Replace(MCFlag,"-","K")
    DescLocalText=DescText
    strWrkSpaceName=DescText
	   
   'Call sGridSelection(strParameters)
   Call SelectLevel2Source(strSource_Name,strLevel2src_Name)   
   
''Clicking on "New Workspace" Button and selecting "Open for Edit(Souce)" option 
    strTemp="WPFObject(""ContentControlEx"", ""New Workspace"", 2)"
    Set objNewWorkspace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    If objNewWorkspace.Exists = True then
      objNewWorkspace.Click
       strTemp="WPFObject(""ContentControlEx"", ""Open For Edit (Source)"", 2)"
        Set objopenforEdit=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        If objopenforEdit.Exists then
          objopenforEdit.Click    
        End If

      strTemp1="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
      Set objNewWrkSpaceName=Sys.Process("EdgeClient").WaitChild(strTemp1,50000)
      If objNewWrkSpaceName.Exists = True then
     
      ''Waiting for Workspace Name prompt
      strTemp="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
      Set objNewWrkSpace_Name=Sys.Process("EdgeClient").WaitChild(strTemp,60000)
        If objNewWrkSpace_Name.Exists = True then
          strTemp="WPFObject(""ChangeNameTextEdit"")"
          ''Entering Workspace Name
          Set objNewWrkSpace_Txtbox=objNewWrkSpace_Name.FindChild("Name",strTemp,9,True)
            If objNewWrkSpace_Txtbox.Exists = True then
              objNewWrkSpace_Txtbox.Click
              objNewWrkSpace_Txtbox.Text=strWrkSpaceName
             strTemp="WPFObject(""OkButton"")"
              Set objNewWrkSpace_okbtn=objNewWrkSpace_Name.FindChild("Name",strTemp,9,True)
              If objNewWrkSpace_okbtn.Exists = True then
                objNewWrkSpace_okbtn.Click
              End If
            End If
        End If
      End if
    End If

    ''Handling Validation for Source
    strTemp="WPFObject(""HwndSource: WindowContentHolder"", """")"
    Set objTemp=Sys.Process("EdgeClient").WaitChild(strTemp,10000)
    If objTemp.Exists = True then
      objTemp.Keys "[Enter]"
      strTestCaseResult = "FAIL"
      Exit Sub
    End If



    ''WorkSpace Edit Window
    strTemp="WPFObject(""LayoutPanel"", """", 2)"
    Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,13,True)
    If objTemp.Exists then
    Set GridControl= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl").WPFObject("SourceTreeListView")
    Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl")
        ''Expanding First Node in Tree      
        intTotNodeCnt=GridControl.Nodes_2.Count  
        For intI=0 to intTotNodeCnt-1         
          If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
            GridControl.Nodes_2.Item(intI).ExpandAll
            blnFlag=False  
            Exit For
          End If
        Next
    
        ''Expanding Second Node in Tree
        intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
        For intJ=0 to intTotNodeCnt-1
          If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then
            GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
            intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(0).get_RowHandle
            GridControl.Keys "^[Home]"
            Call GridControl.ClearSelectionCore
            Call GridControl.FocusViewAndRow(GridControl,intRow-1)
            GridControl.SetFocusOnCurrentItem
            Call GridControl.SelectRowCore(intRow-1)
            blnFlag = False 
            Exit For
          End If
        Next
    
        ''Clicking on New Folder
        Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 4).WPFObject("BarButtonItemLinkControl", "", 1)
        If objTemp.Exists = True then
          Delay 3000,"New Folder..."
          objTemp.Click
          Delay 8000,"New Folder..."
        End If
    
        ''Getting no. of Rows under level 2
        intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
        intK=intTotNodeCnt-1
    
        Set objDescCell=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK)
        Call objDescCell.Content.set_Description(DescText)
        Call objDescCell.Content.set_DescriptionLocal(DescLocalText)
                
        Call sCloseSource
        'Adding macro cap flag
        Call GridControl.MoveFocusedRowToLastScrollRow
        Delay 1000
        Call GridControl.MoveFirstCell
        Delay 1000
        Sys.Keys "[Tab]"
        Delay 1000
        Sys.Keys "[Tab]"
        Delay 1000
        Sys.Keys "[Tab]"
        Delay 1000
        Sys.Keys "[Tab]"
        Delay 1000
        Sys.Keys "[Tab]"
        Delay 1000
        Sys.Keys "[Tab]"
        Delay 1000
        Sys.Keys "[Tab]"
        Delay 1000
        Sys.Keys "[Tab]"
        Delay 1000
        Sys.Keys "[Tab]"
        Delay 1000
        Sys.Keys "[Tab]"
        Delay 1000
        Sys.Keys "[Tab]"
        Delay 1000
        Sys.Keys(MCFlag)
        Delay 1000
                
        'Clicking on workspace item to generate ATP confirmation
        strTemp="WPFObject(""ContentControlEx"", ""Workspace"", 2)"
        Set objWorkspace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        objWorkspace.Click
        
        Delay 2000
        
        Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Confirm")
        If objConfirm.Exists = true then
         strTemp="WPFObject(""Button_Yes"")"
         Set objYesButton=objConfirm.FindChild("Name",strTemp,50,true)
         objYesButton.Click
        End If
        
        'Attach series
        strTemp="WPFObject(""ContentControlEx"", ""Attach Series"", 2)"
        Set objAttach=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        objAttach.Click
        
        strTemp="WPFObject(""SeriesIdTextEdit"")"
        Set objText=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        If objText.Exists=True then
          objText.Text="368765647"
          strTemp="WPFObject(""OkButton"")"
          Set objOKButton=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
          Call objOKButton.Click
        End If
        
        'Clicking on workspace to upload
        While Not objWorkspace.Enabled
         Delay 1000
        Wend
        Call objWorkspace.Click
        
        strTemp="WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"
        Set objUpload=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        objUpload.Click
        
        Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: WindowContentHolder", "Confirm")
        If objConfirm.Exists = true then
         Sys.Keys("[Enter]")
        End If
        
        strTemp="WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Upload Workspace"")"
        Set objUploadConfirm=Sys.Process("EdgeClient").WaitChild(strTemp,30000)
        If objUploadConfirm.Exists=true then
         Sys.Keys("O")         
        End If
                
        Call sEdgeProcessor
        
        'opening source window
        Call sHome_Source 
        
        'selecting level3 source to verify macro cap flag
        Call SelectLevel3Source(strSource_Name,strLevel2src_Name,DescText)
       
        
        strTemp="WPFObject(""SourceTreeListView"")"
        Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        
        set objRow=GridControl.get_SelectedRows
        
        If objRow.Item(0).MacroCapFlag.OleValue=MCFlag then
          strTCRemarks=MCFlag&" : Successfully added Macro CAP Flag to level3 source folder"
        End If
        
        Call sCloseSource
        
        'opening source window
        Call sHome_Source 
        
        'Selecting level2source
        Call SelectLevel2Source(strSource_Name,strLevel2src_Name)      
        
        intResult=SourceClickR(strLevel2src_Name)        
        If intResult<>0 then
          Call SourceClickR(strLevel2src_Name)
        End If
        intResult=SourceClickR(strLevel2src_Name)        
        If intResult<>0 then
          Call SourceClickR(strLevel2src_Name)
        End If
        intResult=SourceClickR(strLevel2src_Name)        
        If intResult<>0 then
          Call SourceClickR(strLevel2src_Name)
        End If
        intResult=SourceClickR(strLevel2src_Name)        
        If intResult<>0 then
          Call SourceClickR(strLevel2src_Name)
        End If
        intResult=SourceClickR(strLevel2src_Name)        
        If intResult<>0 then
          Call SourceClickR(strLevel2src_Name)
        End If
        
        'Clicking/selecting macro cap flag
        strTemp="WPFObject(""ContentControlEx"", """&MCFlag&""", 2)"
        Set objMCFlag=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        If objMCFlag.Exists=true then
          objMCFlag.Click
          strTCRemarks=strTCRemarks & "<br />" & "Added Macro CAP Flag is found under ATP menu"
        End If
        
        'opening ATP file
        'Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "", 1).WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 3).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Open", 2)
        strTemp="WPFObject(""ContentControlEx"", ""Open"", 2)"
        Set objOpen=Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "", 1).WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).FindChild("Name",strTemp,50,true)
        If objOpen.Exists=true then
          objOpen.Click
        End If
        
       ' Delay 40000,"Opening ATP file..."
        
        'Close ATP file
        objArray = Sys.FindAllChildren("ProcessName","EXCEL", 5,True)
        While Not ubound(objArray) >= 1 
          objArray = Sys.FindAllChildren("ProcessName","EXCEL", 5,True)
          Delay 1000, "Waiting for Excel to open"
        Wend
        For i=0 to ubound(objArray)
          set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*"&MCFlag&"*",1,True)
          If oSTP_ExcelObj.Exists = True Then
            Set netUIHWND=  Aliases.EXCEL.wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND
            Call netUIHWND.Click(604, 40)
            Delay 5000,"ATP file..."
            objArray(i).Close
            strTCRemarks=strTCRemarks & "<br />" & "Successfully opened ATP file"
          End If
         Next       
        Call sCloseSource
    End If
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sAddMCFlag()' function , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
    
End Sub

'***************************************************************************************************************************************

Function  SelectLevel3Source(strLevel1,strLevel2,strLevel3)
'Sub SelectLevel3Source()
'    strEnvi = "Edge ( US Integration )"   
'    strLevel1 = "Test"
'    strLevel2 = "CopySeries_1"
'    strLevel3 = "FirstFolder1"  

on Error Resume Next 

  Dim IntCount(4)
      
    strTemp="WPFObject(""SourceTreeListView"")"
    Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,True)
    strTemp="WPFObject(""SourceTreeControl"")"
    Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,True)
    Delay 1000,"Pls Wait.."
    ''Selecting Country Name
    intTotNodeCnt=GridControl.Nodes_2.Count
    For intI=0 to intTotNodeCnt-1         
        If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strLevel1) then
          GridControl.Nodes_2.Item(intI).ExpandAll                        
          intRow=GridControl.Nodes_2.Item(intI).get_RowHandle
          GridControl.Keys "^[Home]"
          Call GridControl.ClearSelectionCore
          Call GridControl.FocusViewAndRow(GridControl,intRow)
          GridControl.SetFocusOnCurrentItem
          Call GridControl.SelectRowCore(intRow)
          IntCount(0) = intI
          log.Message "Country Name - " & GridControl.Nodes_2.Item(intI).Content.Description                 
          blnFlag=False  
          Exit For
        End If
    Next
    If blnFlag = True then
      strTCRemarks="Country Name not found"
      strTestCaseResult="FAIL"
      Exit Function 
    End If
  
    Delay 1000,"Pls Wait.."
        blnFlag = True 
    ''Selecting Level2Source_Name
    intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
  For intJ=0 to intTotNodeCnt-1
      If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2) then
          GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
         intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
         Call GridControl.FocusViewAndRow(GridControl,intRow)
        GridControl.SetFocusOnCurrentItem
        Call GridControl.SelectRowCore(intRow)
        IntCount(1) = intJ
        log.Message "Level2 Source Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
        blnFlag = False 
        Exit For
      End If
    Next
    If blnFlag = True then
      log.Message "Level2 Source Name not found"
      strTCRemarks="Level2 Source Name not found"
      strTestCaseResult="FAIL"
      Exit Function 
    End If
    Delay 1000,"Pls Wait.."
    
    ''Selecting Level3Source_Name
    intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
  For intK=0 to intTotNodeCnt-1
      If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel3) then       
        intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
        Call GridControl.FocusViewAndRow(GridControl,intRow)
        GridControl.SetFocusOnCurrentItem
        Call GridControl.SelectRowCore(intRow)
        IntCount(2) = intK
         blnFlag = False 
        Exit For
      End If
    Next
    If blnFlag = True then
      strTCRemarks="Level3 Source Name not found"
      strTestCaseResult="FAIL"
      Exit Function 
    End If
    Delay 2000,"Pls Wait.."  
    SelectLevel3Source = IntCount
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'SelectLevel3Source'  , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Function

'***************************************************************************************************************************************

Sub SelectLevel2Source(strLevel1,strLevel2)
On Error Resume Next

    strSource_Name=strLevel1
    strLevel2src_Name=strLevel2
    
   
     strTemp="WPFObject(""SourceTreeListView"")" 
     Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,True)
     strTemp="WPFObject(""SourceTreeControl"")"    
     Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,True)
     Delay 5000,"Pls Wait.."
     ''Selecting Country Name
     intTotNodeCnt=GridControl.Nodes_2.Count
     For intI=0 to intTotNodeCnt-1         
        If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
												GridControl.Nodes_2.Item(intI).ExpandAll          
          log.Message "Country Name - " & GridControl.Nodes_2.Item(intI).Content.Description       
          blnFlag=False  
          Exit For
        End If
    Next
    If blnFlag = True then
      strTCRemarks="Country Name not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If
  
    Delay 5000,"Pls Wait.."
        blnFlag = True 
    ''Selecting Level2Source_Name
    intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
  For intJ=0 to intTotNodeCnt-1
      If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then
        GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
        intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
        Call GridControl.ClearSelectionCore
        Call GridControl.FocusViewAndRow(GridControl,intRow)
        GridControl.SetFocusOnCurrentItem
        Call GridControl.SelectRowCore(intRow)
        log.Message "Level2 Source Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
        blnFlag = False 
        Exit For
      End If
    Next
    If blnFlag = True then
      log.Message "Level2 Source Name not found"
      strTCRemarks="Level2 Source Name not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If
    Delay 2000,"Pls Wait.."
    
    If Err.Number > 0 Then
    Log.Warning("Error in 'SelectLevel2Source' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Sub

'***************************************************************************************************************************************

Function SourceClickR(strLevel2src_Name)
On error Resume Next
      'Right-click on the selected level2 row
      
        strTemp="WPFObject(""SourceTreeListView"")"
        Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,True)
        strTemp="WPFObject(""SourceTreeControl"")"
        Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,True)
         
        objRowControl = GridControl.FindAllChildren("ClrClassName","RowControl",10,true)        
        For i = 0 to ubound(objRowControl)
        log.Message objRowControl(i).DataContext.Row.Description
        If objRowControl(i).DataContext.Row.Description=strLevel2src_Name then 
          objRowControl(i).ClickR
          Exit For
        End If
        Next
        
        'Clicking/selecting ATP from context-menu        
        strTemp="WPFObject(""ContentControlEx"", ""ATP"", 2)"
        Set objATP=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        objATP.Click
        
        SourceClickR=Err.Number
        
  If Err.Number > 0 Then
    Log.Warning("Error in 'SourceClickR' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Function

'***************************************************************************************************************************************

Sub sRelSch_STP(strParameters)
'Sub sRelSch_STP()
  On Error Resume Next

  STPSheetName=getSplitValue(strParameters,"STPSheetName")
  SeriesId=getSplitValue(strParameters,"SERIESID")
  strFileName = getSplitValue(strParameters,"TestDataFile")
  
  
  'Get the File Loacation 
  FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")&"\"&strFileName & ".xlsx"

      
    Set objSTPXls=GetObject(FilePath)
    With objSTPXls
     .Sheets(STPSheetName).Select
    End With
    
    With objSTPXls
     With .WorkSheets(STPSheetName)
      .Cells(4,1).Select 
       For i=25 to 45
        If cstr(.Cells(2,i).Value)=cstr(strTPDate) then
         Exit For
        End If
       Next
       If clng(.Cells(4,1).Value)=clng(SeriesId) and cstr(.Cells(2,i).Value)=cstr(strTPDate) then
          .Cells(4,i).Select
          .Cells(4,i).Value=50
          .Cells(4,i+1).Select
          .Cells(4,i).Select
          Call sClickTimePointDetails(2,strFileName) 
       End If
        ''Mark Good
        Delay 1000,"Mark Good..."
        With objSTPXls
          With .WorkSheets(STPSheetName)
               .Cells.Select
          End With
        End With
        
         ''Mark Good
       Call sClicKMarkGood(2,strFileName)
       
        ''Upload Series
        Call sClickUpload(2,strFileName)
        
        'Click Yes to close ExcelFile
       Call sClickonInformation(2,"Yes")  
       
     End With
    End With
    
    'Closing Source Series Window
     Call CloseSearch()
     
     'Refresh Release status
     strTemp="WPFObject(""ContentControlEx"", ""Refresh"", 2)"
     Set objRefresh=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
     Call objRefresh.Click
     Call sEdgeProcessor
 
     'Checking schedule(timepoint) status
     Set objStatus =	Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1)._
     WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 3).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("ReleaseScheduleGridControl").WPFObject("ReleaseScheduleTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", DescText).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 7).WPFObject("PART_Editor")
     Call objStatus.Click
     Delay 2000,"Showing Status..."
     Call objStatus.Click
     If objStatus.Text="Pending" then
       strTCRemarks=strTCRemarks & "<br/>"  &"The 'Release status' of the schedule is 'Pending'  as timepoint type and schedule type is different"
       strTestCaseResult="PASS"
     Else
       strTCRemarks=strTCRemarks & "<br/>"  &"The 'Release status' of the schedule is not 'Pending'  as timepoint type and schedule type is not different"
       strTestCaseResult="FAIL"
     End If
 
     Call CloseWindow  
     
  If Err.Number > 0 Then
    Log.Warning("Error in 'sRelSch_STP' function , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If            
 
    
End Sub

'**************************************************************************************************************************************
Sub sSourceSch_AddTP(strParameters)
'Sub sSourceSch_AddTP()

On Error Resume Next

  strLevel1=getsplitvalue(strParameters,"Source")
  strLevel2=getsplitvalue(strParameters,"Qcname")
  strLevel3=getsplitvalue(strParameters,"Workspace")
  
'  strLevel1="Test"
'  strLevel2="Automation"
'  strLevel3="Test Source 1"
'  strSeriesID="421317647"

  'open source schedule
  strTemp="WPFObject(""ContentControlEx"", ""New Workspace"", 2)"
  Set objWorkSpace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  Call objWorkSpace.Click
  
  strTemp="WPFObject(""ContentControlEx"", ""Open For Edit (Source Schedule)"", 2)"
  Set objEdit=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  Call objEdit.Click
  
  strTemp="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
  Set objWSName=Sys.Process("EdgeClient").WaitChild(strTemp,120000)
  If objWSName.Exists = True then
    strTemp="WPFObject(""ChangeNameTextEdit"")"
    Set objWSText=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    objWSText.Text="abc"
    
    strTemp="WPFObject(""OkButton"")"
    Set objOkButton=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    Call objOkButton.Click
    Call sEdgeProcessor()
    Delay 2000,"Loading Schedule..."
  End If
  
  Call sCloseSource
  
  Delay 5000
  
  'Activity on Source Schedule
  strTemp="WPFObject(""ContentControlEx"", ""Expand All"", 2)"
  Set objExpandButton=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  If objExpandButton.Exists Then 
    Call objExpandButton.Click
  End If
  Delay 2000,"Tree expanding..."
  
  Set objTreeViewFolder=Sys.Process("EdgeClient").FindChild("DisplayText",strLevel3,50,True)
  Call objTreeViewFolder.Click 'Clicking on cell having Test Source 1
  Call sEdgeProcessor
  
  'Scrolling and clicking on series ID
  strTemp="WPFObject(""SourceSeriesGridControl"")"
  Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  Call sFindSeriesID(strSeriesID)
  
  'Adding timepoint
  strTemp="WPFObject(""DateEdit"", """", 1)"
  Set objTimepoint=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  Call objTimepoint.Click
  Delay 1000
  Sys.Keys (Date)
  Delay 1000
  Call objTimepoint.Click
  Delay 1000
  
  'Drag for UIT machine
  strTemp="WPFObject(""GridSplitter"", """", 1)"
  Set objSplitter=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  Call objSplitter.Drag(2, 218, -360, 3)
  Delay 3000
  
  'upload workspace
  strTemp="WPFObject(""ContentControlEx"", ""Workspace"", 2)"
  Set objWorkspace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  Call objWorkspace.Click
  
  strTemp="WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"
  Set objUpload=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  Call objUpload.Click
  
  Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: WindowContentHolder", "Confirm")
  If objConfirm.Exists=True then
    Sys.Keys "[Enter]"
  End If
  
  strTemp="WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Upload Workspace"")"
  Set objUploadWindow=Sys.Process("EdgeClient").WaitChild(strTemp,120000)
  If objUploadWindow.Exists=True then
    Sys.Keys "O"
    strTCRemarks="Using Source Schedule,Timepoint has been added to the series"
    strTestCaseResult="PASS"
  End If
  
  Call sEdgeProcessor
  
  If strTCRemarks="" then
   strTestCaseResult="ABORT"
  End If
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sSourceSch_AddTP(strParameters)' function , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Sub

'***************************************************************************************************************************************

Sub sSourceSch_DailyCheck(strParameters)
'Sub sSourceSch_DailyCheck()
 On Error Resume Next
 
  Dim strStatus
 
  strLevel1=getsplitvalue(strParameters,"Source")
  strLevel2=getsplitvalue(strParameters,"Qcname")
  strLevel3=getsplitvalue(strParameters,"Workspace") 
  strStatus=getsplitvalue(strParameters,"SceduleStauts")

'  strLevel1="Test"
'  strLevel2="YP Test2"
'  strLevel3="prtw"
' '' strSeriesID="426118657"
'  ''strStatus = "Released"
'  strEnvi = "Edge ( US Integration )"  
   
  'opening panel
  Call sAutoHidePanelDock("Daily Check Panel")
  
  'setting country
  strTemp="WPFObject(""WrapPanel"", """", 1)"
  Set objPanel=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  strTemp="WPFObject(""ComboBox"", """", 1)"
  Set objCountry=objPanel.FindChild("Name",strTemp,50,True)
  Call objCountry.Set_Text(strLevel1)
  Delay 2000
  
  'Click Refresh
  strTemp="WPFObject(""ContentControlEx"", ""Refresh"", 2)"
  Set objRefresh=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  Call objRefresh.Click
  Call sEdgeProcessor
  
  'Expand Level2 folder in grid
  strTemp="WPFObject(""CheckListGridControl"")"
  Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  For i = 0 to objGridControl.wGroupCount-1
    If cstr(objGridControl.DataController.GroupInfo.Item(i).GroupValue.OleValue)=cstr(strLevel2) then
      intRow=objGridControl.DataController.GroupInfo.Item(i).Handle
      Call objGridControl.ExpandGroupRow_2(intRow,True)
      Delay 5000,"Grid expanding..."
      Exit For
    End If
  Next
  
  'Finding series
  strTemp="WPFObject(""CheckListTableView"")"
  Set objTableView=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  Call objTableView.SetFocusedRowHandle(intRow)
  Call objTableView.SelectRow(intRow)
  Delay 2000
  
  Do While(objTableView.FocusedRowHandle<0)
    log.Message objTableView.FocusedRowHandle
    Sys.Keys("[Down]")
    Delay 500
  Loop
  
  Do While(objTableView.FocusedRowHandle>0) And  Ucase(Trim(strStatus)) <>  Ucase(Trim("Released")) 
    If cstr(objTableView.FocusedRow.SeriesId)=cstr(strSeriesID) and ucase(objTableView.FocusedRow.ScheduleStatusDescription)=ucase("Delayed")  then
        strTCRemarks="Series with Delayed schedule found in Daily Check Panel"
        Delay 3000,"Found Series..."
        strTestCaseResult = "PASS"        
        Exit Do   
    End If      
    Sys.Keys("[Down]")
    Delay 1000
  Loop
    
  'The release schedule should not be shown in daily check panel
  If Ucase(Trim(strStatus)) =  Ucase(Trim("Released")) Then    
       Do While(objTableView.FocusedRowHandle>0)
      If cstr(objTableView.FocusedRow.SeriesId)=cstr(strSeriesID) and ucase(objTableView.FocusedRow.ScheduleStatusDescription)=ucase("Delayed") then
        If Err.Number=0 then
          Delay 3000,"Found Series..."
          strTCRemarks  = "  Release SeriesID = " & strSeriesID &" still present in Daily Check Panel "    
          strTestCaseResult = "FAIL"    
          Exit Do
        End If        
      Else
        strTCRemarks  = " Release SeriesID = " & strSeriesID &" is not present in Daily Check Panel "    
        strTestCaseResult = "PASS" 
      End If      
      Sys.Keys("[Down]")
      Delay 1000
    Loop  
  End If
      
  'Collapse Group
  Call objGridControl.CollapseGroup(i)
  
  'Close Panel
  Call sAutoHidePanelHide("Daily Check Panel")
  
  If strTCRemarks="" then
    strTestCaseResult="ABORT"
  End If
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sSourceSch_DailyCheck(strParameters)' function , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
  
End Sub

'***************************************************************************************************************************************

Sub sDailyCheckPointTimePoint(strParameters)
'Sub DailyCheckPointTimePoint()

  On Error Resume Next
  Dim STPSheetName, strTestDataFile, strTimepoints, objArray
  Dim strTemp, strAliasName, strFileName, FilePath, strSeriesIDNew
  Dim oSTP_ExcelObj,objTemp, objSTPXls, netUIHWND
  
  STPSheetName= getSplitValue(strParameters,"STPSheetName")  
  strTestDataFile=getSplitValue(strParameters,"TestDataFile")
  strTimepoints = getSplitValue(strParameters,"Timepoints")
  
'  STPSheetName="D_1"
'  strTestDataFile="YYY-Automation-Test Source 1"
'  strTimepoints="50"
'  strSeriesID="421317707"
  'date1 = "6/02/2019"
  


  FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")&"\"&strTestDataFile & ".xlsx"

  
  Set objSTPXls=GetObject(FilePath)
  With objSTPXls
    'Click on Refresh 
    Call sClickRefresh(2,strTestDataFile)
    Delay 2000
    Call sExcelFullHistory
    Delay 2000
    
    With .Sheets(STPSheetName).Select     
    End With    
    With .WorkSheets(STPSheetName)
      Delay Status_Wait, "Finding last Row the Excel sheets.. Pls wait.."
      For r = 1 To .UsedRange.Rows.Count
          If IsEmpty(.UsedRange.Cells(r, 1).Value) = True AND (.UsedRange.Cells(r, 1).Text) ="" Then           
           intlastRow=r-1          
           Exit For
          End  If 
       Next
       
       strSeriesIDNew = .Cells(intlastRow,1).Value
      inti=3
       intCnt = 0
       lastColumn=.UsedRange.Columns.Count
       
       For inti = 3 to lastColumn
          strText=.Cells(2,inti)
          .Cells(intlastRow,inti).Select      
          If isDate(strText)  then 
             strStartcolumnDate=strColumnNumber          
              If  strText = date then
                  strStartcolumn=inti              
                   intCnt = 1
                   Exit For
              End if 
          End If          
       Next 

       
      if intCnt = 0 Then
          'Add Date
          Call sClickAddDate(strTestDataFile)
          
          lastColumn=.UsedRange.Columns.Count
          For inti = 3 to lastColumn
            strText=.Cells(2,inti)
            .Cells(intlastRow,inti).Select
            If isDate(strText)  then
              strStartcolumn=inti                    
              Exit For
            End If 
          Next  
      End If 
      
      With .Sheets(STPSheetName).Select
      End With   
         
       With .WorkSheets(STPSheetName)      
        If Cstr(strSeriesIDNew) = Cstr(strSeriesID) Then
            .Cells(intlastRow,strStartcolumn).Select
            .Cells(intlastRow,strStartcolumn).Text = strTimepoints
            .Cells(intlastRow,strStartcolumn).Value=strTimepoints            
        End If         
      End With
     
      'Mark Good 
      Call sClicKMarkGood(2,strTestDataFile) 
      Delay 2000
      
      'Upload Series
      Call sClickUpload(2,strTestDataFile)
      Delay 2000
      
      'Click yes to close file
      Call sClickonInformation(2,"Yes")
      
      
     End With
  End With 
 
  If Err.Number > 0 Then
    Log.Warning("Error in 'DailyCheckPointTimePoint(strParameters)'function - " & Err.Description)
    Err.Clear
  End If
        
End Sub 

'***************************************************************************************************************************************

Sub sClickAddDate(strTestDataFile)
'Sub sClickAddDate()
  On Error Resume Next
 ' strTestDataFile = "YYY-PRT-PRT"
  
  Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
  wndXLMAIN.Activate
  Set netUIHWND = Sys.Process("EXCEL", 2).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
  
  strTemp = "MSAAObject(""pt_EDGE"")"
  Set objEdge = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objEdge.Click()
 
  strTemp ="MSAAObject(""btn_Add_Date"")"
  Set objAddDate = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objAddDate.Click()
  Delay 1000     
  strDate = Split(Now, " ")
  Sys.Process("EXCEL", 2).WinFormsObject("AddDateForm").WinFormsObject("tableLayoutPanel1").WinFormsObject("panel10").WinFormsObject("tableLayoutPanel3").WinFormsObject("fromButton").Click
  Sys.Process("EXCEL", 2).WinFormsObject("AddDateForm").WinFormsObject("tableLayoutPanel1").WinFormsObject("panel10").WinFormsObject("tableLayoutPanel3").WinFormsObject("endPicker").Set_Text(strDate(0))
  Delay 1000
  Sys.Process("EXCEL", 2).WinFormsObject("AddDateForm").WinFormsObject("tableLayoutPanel1").WinFormsObject("tableLayoutPanel2").WinFormsObject("okButton").Click
  Call sEdgeProcessor()
  Delay 2000
  
End Sub
'***************************************************************************************************************************************


Sub SaveCNSTP(strParameters)
'Sub SaveCNSTP()

On Error Resume Next
Dim objFSO
  
 strLevel1=getSplitValue(strParameters,"Source")
 strLevel2=getSplitValue(strParameters,"Qcname")
 strLevel3=getSplitValue(strParameters,"Workspace")
 
' strLevel1="Test"
' strLevel2="YYY-eAIP Test"
' strLevel3="YYY-eAIP Test 1"
'	strEnvi = "Edge ( US Integration )" 
	
	' Create a new folder
	Set objFSO = CreateObject("Scripting.FileSystemObject")
  FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")
  objFSO.CreateFolder FilePath
 
 	  'Open Source Dispaly Viewer  
  Call sOpenSourceDispalyViewer() 
  
  'Select the required Level  
  Call sGridSelection(strParameters)
  
  Delay 1000

 
  strTemp="WPFObject(""ContentControlEx"", ""Open CN STP"", 2)"
  Set objCNSTP=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  Call objCNSTP.Click
    
  Set objTRPForm=Sys.Process("EXCEL", 2).WaitChild("WinFormsObject(""TimeRangePickerForm"")",50000)
 
  If fCheckEmpty(objTRPForm)=TRUE then
    strTestCaseResult="ABORT"
    strTCRemarks="STP not found"
    Exit Sub
  End If
	
  strTemp="WinFormsObject(""FullHistoryButton"")"
  Set objFullHistory=objTRPForm.FindChild("Name",strTemp,50,true)
  Call objFullHistory.Click
  Delay 2000
 
  strTemp="WinFormsObject(""chbWithoutOpen"")"
  Set objNoOpen=objTRPForm.FindChild("Name",strTemp,50,true)
  Call objNoOpen.Click
  Delay 2000
  
 'Provide a Path to sav
  FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")
  Set objTemp = Sys.Process("EXCEL", 2).WinFormsObject("TimeRangePickerForm").WinFormsObject("tableLayoutPanel1").WinFormsObject("fileOpenOptionsControl").WinFormsObject("tbExportPath").WinFormsObject("HostedTextBoxBase", "")
  Call objTemp.set_Text(FilePath)   
  
  Delay 500
  
  StrTemp = "WinFormsObject(""OpenButton"")" 
  Set objTemp = Sys.Process("EXCEL", 2).WinFormsObject("TimeRangePickerForm").WinFormsObject("tableLayoutPanel1").FindChild("Name",strTemp,50,True)
  objTemp.Click
  
	
  strTemp="WinFormsObject(""SelectFreqForm"")"
	'Sys.Process("EXCEL", 2).WinFormsObject("SelectFreqForm")
  Set objTemp=Sys.Process("EXCEL",2).WaitChild(strTemp,10000)
  If objTemp.Exists Then
     strTemp="WinFormsObject(""radButton1"")"
	   Sys.Process("EXCEL", 2).WinFormsObject("SelectFreqForm").WinFormsObject("radButton1")
     Set objTemp=objTemp.FindChild("Name",strTemp,5)
     If objTemp.Exists = True then
        objTemp.Click
     End If
  End if
 
  For I = 0 to 400
    Set objtExcel = Sys.Process("EXCEL", 2).Window("XLMAIN", "Excel", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
    If objtExcel.Exists = True Then
      strTCRemarks="Saved CN STP file"
      log.Message strTCRemarks
      strTestCaseResult = "PASS" 
      Exit For 
    Else  
       Delay 1000, "Please wait Saving File"       
    End If
 Next 
 
 If Err.Number=0 then
  Delay 10000,"Pls wait saving file..." 
 End If 

 'Close the Opened Excel File
 Call ExcelProcessKill
 
 'close the Source Module
 Call SClosesource
 
  If Err.Number > 0 Then
    Log.Warning("Error in 'SaveCNSTP()' function - " & Err.Description)
    Err.Clear
  End If 
 
End Sub

'***************************************************************************************************************************************

Sub eAIP_STP(strParameters)
'Sub eAIP_STP

On Error Resume Next

  strLevel1=getSplitValue(strParameters,"Level1")
  strLevel2=getSplitValue(strParameters,"Level2Abbr")
  strLevel3=getSplitValue(strParameters,"Level3")

'  strLevel1="YYY"
'  strLevel2="YYYeAIPTest"
'  strLevel3="YYY-eAIP Test 1"
'	strEnvi = "Edge ( US Integration )"
  
  'Open eAIP window
  strTemp="WPFObject(""ContentControl"", ""eAIP Event"", 1)"
  Set objeAIP=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  Call objeAIP.Click
  Call sEdgeProcessor
  
  'Import STP file
  strTemp="WPFObject(""ContentControlEx"", ""Import Files"", 2)"
  Set objImport=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  Call objImport.Click
  
  'Files Window
  strTemp="Window(""#32770"", ""Open Timepoint Observation Files"", 1)"
  Set objFilesWindow=Sys.Process("EdgeClient").WaitChild(strTemp,30000)
  If objFilesWindow.Exists=True then
    
    'Edit Box
    strTemp="Window(""Edit"", """", 1)"
    Set objFilenameEditbox=objFilesWindow.FindChild("Name",strTemp,50,true)
    FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")
    FileName=FilePath &"\"& strLevel1 &"-"& strLevel2 &"-"& strLevel3 & ".xls"
    log.Message FileName
    Delay 1000
    Call objFilenameEditbox.SetText("")
    Delay 1000
    
    Call objFilenameEditbox.SetText(FileName)
    Delay 1000
    
    'Click Open
    Set objOpenButton=Sys.Process("EdgeClient").Window("#32770", "Open Timepoint Observation Files", 1).Window("Button", "&Open", 1)
    Call objOpenButton.Click
    
    'Confirm import
    Set objMessageBox=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "eAIP Event Manager")
    If objMessageBox.Exists=True then
      strTemp="WPFObject(""Button_Yes"")"
      Set objYesButton=objMessageBox.FindChild("Name",strTemp,50,true)
      Call objYesButton.Click
      
      strTemp = "WPFObject(""PART_InactiveBorder"")"
      Set objUpdateWindow = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "eAIP Event Manager").WPFObject("CustomMessageBoxWindow", "eAIP Event Manager", 1).WPFObject("Grid", "", 1).WaitChild(strTemp,30000)
      strTemp="WPFObject(""Button_OK"")"
      Set objOkButton=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
      Call objOkButton.Click
      Call sEdgeProcessor

     'Finding file upload status
      strTemp="WPFObject(""ImportStatusGridControl"")"
      Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)         
      For i=objGridControl.wRowCount-1 to 0 step -1
        If objGridControl.DataContext.Item(i).FileId = strLevel1 &"-"& strLevel2 &"-"& strLevel3 Then
         For  J = 0 to 400
            If objGridControl.DataContext.Item(i).ImportStatus= "Processing" then 
              Delay 1000, "Waiting to Complete the Upload Process" 
              strTemp = "WPFObject(""ContentControlEx"", ""Refresh"", 2)"
              Call sObjClick(strTemp) 
              Call sEdgeProcessor()
             ElseIf objGridControl.DataContext.Item(i).ImportStatus= "Uploaded" then
               strTCRemarks="CN STP successfully uploaded in eAIP Event Manager"
               log.Message strTCRemarks
               Exit For     
            End If            
          Next 
          Exit For 
        End If     
      Next
    Else
      strTCRemarks="Import Files Window Message Box not found"
      strTestCaseResult="ABORT"
    End If
  Else
    strTCRemarks="Import Files Window not found"
    strTestCaseResult="ABORT"
  End If
  
  If strTCRemarks="" then
    strTestCaseResult="ABORT"
  End If
  
  Call CloseWindow
  Call CloseWindow
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'eAIP_STP()' function , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Sub

'***************************************************************************************************************************************

Sub sLoadChineseKeySeries()
On Error Resume Next 

  Dim strTemp,strObject
  Dim ObjGridLoad,ObjGridClose,objEdgeMDI,objTemp,objEdge,objEdgepopup

'    ''Opening Chinese Key Series
   Set objEdge= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1)
	 If objEdge.Exists = False then
   Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("RibbonControl").WPFObject("RibbonSelectedPageControl", "", 1).WPFObject("RibbonPagesControl", "", 1).WPFObject("RibbonPageGroupsControl", "", 1).WPFObject("RibbonPageGroupControl", "", 1).WPFObject("BarItemLinkInfo", "", 21).WPFObject("BarSubItemLinkControl", "", 1).Click
		Set objEdgepopup= Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1)
		strTemp="WPFObject(""ContentControlEx"", ""Key Series Chinese Translation"", 2)"
    Set objTemp=objEdgepopup.FindChild("Name",strTemp,8,True)
    If objTemp.Exists = True then
      objTemp.Click
      log.Message "Opening Chinese Key Series"
    End if 
    strTemp="WPFObject(""LayoutPanel"", """", 1)"
    Set objTemp=objEdge.WaitChild(strTemp,50000)
    If objTemp.Exists = False then
      strTestCaseResult = "FAIL"
      Exit Sub
    End If
   ElseIf objTemp.Exists = True then
    If objTemp.Caption<>"Key Series Chinese Translation" then
      Call sCloseSource()
      Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("RibbonControl").WPFObject("RibbonSelectedPageControl", "", 1).WPFObject("RibbonPagesControl", "", 1).WPFObject("RibbonPageGroupsControl", "", 1).WPFObject("RibbonPageGroupControl", "", 1).WPFObject("BarItemLinkInfo", "", 21).WPFObject("BarSubItemLinkControl", "", 1).Click
			Delay 1000,"Opening Chinese Key Series.."
      Sys.Keys "[Down][Enter]"
       Call sEdgeProcessor
      log.Message "Opening Chinese Key Series"
    
      strTemp="WPFObject(""LayoutPanel"", """", 1)"
      Set objTemp=objEdge.WaitChild(strTemp,50000)
      If objTemp.Exists = False then
        strTestCaseResult = "FAIL"
        Exit Sub
      End If
    End if 
  End If
 strTCRemarks = "Opened Chinese Key Series Form Successfully"  
 Set objTemp=Nothing
 
 If Err.Number > 0 Then
    Log.Warning("Error in 'LoadChineseKeySeries()' ,Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
 End If
End Sub

'***************************************************************************************************************************************

Sub sUploadxlsfile(strParameters)
'Sub sUploadxlsfile()
On Error Resume Next 
 
  Dim strFileName,strFolderpath
  Dim strTemp,objEdge,objTemp ,strTemp1,strTemp2,strMyFileName
	Dim strOk,strClose

  strFileName=getSplitValue(strParameters,"Filename")
		strMyFileName = strFileName
  strFileName=strProjectFilesPath & "Files\" & strFileName
			
  
  Call sLoadChineseKeySeries()
 	Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("DockPanel", "", 1).WPFObject("StackPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("TextBox", "", 1).Text = ""
	Delay(200)

  strTemp="WPFObject(""Button"", ""..."", 1)"
  set objEdge= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("DockPanel", "", 1).WPFObject("StackPanel", "", 1).WPFObject("Grid", "", 1)
	set objTemp=objEdge.FindChild("Name",strTemp,5)
  If objTemp.Exists = True then
     objTemp.Click
     Delay(500)
  Else 
    strTCRemarks="ABORT"
    Exit Sub
  End if 

  Sys.Process("EdgeClient").Window("#32770", "Open Key Series Chinese Translation File", 1).Window("ComboBoxEx32", "", 1).Window("ComboBox", "", 1).SetText(strFileName)
  Sys.Keys "[Enter]"
  Delay 3000,"Selecting a file,Pls Wait.."
  
  
 	strTemp="WPFObject(""Button"", ""Upload"", 1)"
	 Set objEdge= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("DockPanel", "", 1).WPFObject("StackPanel", "", 1).WPFObject("StackPanel", "", 1)
		Set objTemp=objEdge.FindChild("Name",strTemp,5)
  If objTemp.Exists = True then
    objTemp.Click
    Call sEdgeProcessor
  Else 
    strTCRemarks="FAIL"
    Call SCloseChinese()
    Exit Sub
  End if 
  Delay (500)
		strTemp="WPFObject(""PART_ContainerContent"")"
		WPFObject("PART_ContainerContent")
    Set strOk= Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Key Series Chinese Translation").WPFObject("CustomMessageBoxWindow", "Key Series Chinese Translation", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1)
		If strOk.Exists Then
    Sys.Keys "Y"
  End If
   Call sEdgeProcessor
			strTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("DockPanel", "", 1).WPFObject("KeySeriesTranslationActionGridControl").WPFObject("KeySeriesTranslationActionTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 4).WPFObject("PART_Editor").Text
			If strMyFileName = "test.xls" Then
						If Trim(strTemp)= Trim("Extension '.xls' is not supported. Supported extensions are '.xlsx' and '.xslm'.") Then
							strTCRemarks = "Vaildated File formate Successfully"
						End If
			ElseIf strMyFileName = "test1.xlsx" Then
				strTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("DockPanel", "", 1).WPFObject("KeySeriesTranslationActionGridControl").WPFObject("KeySeriesTranslationActionTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 3).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 4).WPFObject("PART_Editor").Text
				strTemp1 =Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("DockPanel", "", 1).WPFObject("KeySeriesTranslationActionGridControl").WPFObject("KeySeriesTranslationActionTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 2).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 4).WPFObject("PART_Editor").Text.OleValue
				strTemp2 = "Worksheet 'Topic_Changes' doesn't exist."
				If Trim(strTemp)= Trim("Couldn't found any changes in all worksheets.") And Instr(strTemp1,strTemp2) > 0 Then
					strTCRemarks = "Extension .xls is not supported. Supported extensions are .xlsx and .xslm." 
				End If
			
			End IF
		
  Call SCloseChinese()
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sUploadxlsfile()' ,Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'***************************************************************************************************************************************
Sub SCloseChinese()
On Error Resume Next

  Dim objEdge,strTemp,objTemp, objStrClose
	set objEdge=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1)
  strTemp="WPFObject(""LayoutPanel"", """", 1)"
  Set objTemp=objEdge.FindChild("Name",strTemp,5)
  If objTemp.Exists = TRUE then
    If objTemp.Caption="Key Series Chinese Translation" Then
      set objStrClose= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1)
      objStrClose.Closed=true
      Delay 2000,"Closing Key Series Chinese Translation..."
    End IF  
  End If 
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'SCloseChinese()',Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
  End If
End sub

'***************************************************************************************************************************************
'Series Mapping Testcase
Sub sAddSeriesMapping(strParameters)
'Sub sAddSeriesMApping()

  On error Resume Next
  Dim strTemp, objTemp
  
  
  STPSheetName= getSplitValue(strParameters,"STPSheetName")

  Call fOpenSeriesMapping(strParameters)
  Call sEdgeProcessor()
  Delay 5000, "Please wait To open the Series Mapping Excel"
  
  strFolderPath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")
  
  Set fso = CreateObject("Scripting.FileSystemObject")
  Set folder = fso.GetFolder(strFolderPath)
  Set files = folder.Files
  
  For each folderIdx In files
    if instr(folderIdx.Name,Sys.UserName) >0 Then 
      strFileName = folderIdx.Name 
      strTestDataFile = left(strFileName, Len(strFileName)-5)      
      Exit For
    End IF    
  Next

  'Get the File Loacation 
  FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")&"\"&strTestDataFile & ".xlsx"

  
  Delay(2000)
  
  Set objSTPXls=GetObject(FilePath)
  With objSTPXls
    With .Sheets(STPSheetName).Select
    End With

    With .WorkSheets(STPSheetName)
      Dim r
        delay Status_Wait, "Finding last Row the Excel sheets.. Pls wait.."
        For r = 1 To .UsedRange.Rows.Count
          If IsEmpty(.UsedRange.Cells(r, 1).Value) = True AND (.UsedRange.Cells(r, 1).Text) ="" Then   
            intlastRow = r      
            Exit For
          End  If 
        Next

        intlastRow = r

        'Select any Row
        .Cells(5,1).Select
        Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
        wndXLMAIN.Activate
        
       'click on 'Add Mapping
        Set NetUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND.MSAAObject("property_page_Ribbon").MSAAObject("pane_Lower_Ribbon").MSAAObject("client").MSAAObject("property_page_EDGE")
        Call NetUIHWND.MSAAObject("tool_bar_3").MSAAObject("btn_Add_Mapping").Click()       
         
        'Upload Series...
        Call NetUIHWND.MSAAObject("tool_bar_2").MSAAObject("btn_Upload").Click()  
        Delay 2000    
        
        'Click on Ok Button 
        strTemp = "WPFObject(""Button_OK"")"
        Set objTemp =  Sys.Process("EXCEL", 2).WPFObject("HwndSource: CustomMessageBoxWindow", "Information").FindChild("Name",strTemp,50,True)
        If objTemp.Exists Then
          objTemp.Click
        End If
       End With 
    End With
        
    'Close the Series Mapping Excel
    Call ExcelProcessKill()
        
        
    'Open Series Mapping again 
     Call fOpenSeriesMapping(strParameters)
     Call sEdgeProcessor()
      Delay 4000, "Please wait To open the Series Mapping Excel"
  
    strFolderPath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")
  
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set folder = fso.GetFolder(strFolderPath)
    Set files = folder.Files
  
    For each folderIdx In files
      if instr(folderIdx.Name,Sys.UserName) >0 Then 
        strFileName = folderIdx.Name 
        strNewTestDataFile = left(strFileName, Len(strFileName)-5)  
        if strNewTestDataFile <> strTestDataFile Then 
           strTestDataFile = strNewTestDataFile
          Exit For
        End If
      End IF    
    Next  

  'Get the File Loacation 
  FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")&"\"&strTestDataFile & ".xlsx"

   Set objSTPXls=GetObject(FilePath)
  With objSTPXls
    With .Sheets(STPSheetName).Select
    End With

    With .WorkSheets(STPSheetName)      
        delay Status_Wait, "Finding last Row the Excel sheets.. Pls wait.."
        For r = 1 To .UsedRange.Rows.Count
          If IsEmpty(.UsedRange.Cells(r, 1).Value) = True AND (.UsedRange.Cells(r, 1).Text) ="" Then           
              Exit For
          End  If 
        Next
      End With
    End With

  
    IF r = intlastRow+1 Then
      log.Message "New Row is Added"
      strTCRemarks = "New Row is Added"
      strTestCaseResult = "PASS" 
    Else
      log.Message "New Row is not Added"
      strTCRemarks = "New Row is not Added"
      strTestCaseResult = "FAIL"
    End If
  
  'Close the Series Mapping Excel File
   Call ExcelProcessKill()
   
  If Err.Number > 0 Then
   Log.Warning("Error in 'SeriesMapping()' , Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'***************************************************************************************************************************************

Function fOpenSeriesMapping(strParameters)

On Error Resume Next
Dim strTemp, objTemp

 'Open Source Module
  Call sOpenSourceDispalyViewer()
  Call sEdgeProcessor()
  
  ' Select any level2 or last level soue folder
  Call sGridSelection(strParameters)
  
  'Click on 'Open Series Mapping'
   strTemp = "WPFObject(""ContentControlEx"", ""Open Series Mapping"", 2)"
   Call sObjClick(strTemp) 
   Set objTemp = Sys.Process("EXCEL", 2).WinFormsObject("SeriesMappingPickerForm").WinFormsObject("tableLayoutPanel1").WinFormsObject("tableLayoutPanel2").WinFormsObject("OpenButton")
   Call objTemp.Click
   Call sEdgeProcessor()
   
   Set objTemp = Nothing 
   
  If Err.Number > 0 Then
   Log.Warning("Error in 'fOpenSeriesMapping()', Error Description " & Err.Description &"Error Number : "& Err.Number)
    Err.Clear
  End If
End Function

'***************************************************************************************************************************************

Sub EdgeCleanUp
On Error Resume Next
'Err.Raise 6
If RouTime<>0 then
If DateDiff("s",RouTime,aqDateTime.Now)>600 Then 
    
    Set PicObj = Utils.Picture
     Set PicObj = Sys.Desktop.Picture
     PicObj.SavetoFile(strLogFolder & "Screenshots\" & strTestCase_No &  "_" & picCount & ".jpg")
     picCount = picCount + 1 
    
    strTestCaseResult = "FAIL"
    strTCRemarks=Err.Description
   
    Call Sys.Process("EdgeClient").Close
    Call Sys.Process("EdgeClient").Terminate
    Call sLaunchEDGE()

    'Drop Workspace
     Call SourceWorkSpacevwr
     Call DropSourceSchWS
     Call sCheckLayoutWorkSpaceVwrDropWorkspace
     Call CloseWindow
     Call CloseWindow
     Call closeWindow

    'Close excel books
     Call ExcelProcessKill()
      
      Delay(2000)
      Sys.Process("ISI.CeicDataManager.Startup").Close
      Sys.Process("ISI.CeicDataManager.Startup").Terminate
      Delay(2000)
 Err.Clear
 RouTime=0
End  If  
End If
End Sub

'***************************************************************************************************************************************

Sub EdgeCleanUp1
On Error Resume Next

    Set PicObj = Utils.Picture
     Set PicObj = Sys.Desktop.Picture
     PicObj.SavetoFile(strLogFolder & "Screenshots\" & strTestCase_No &  "_" & picCount & ".jpg")
     picCount = picCount + 1 
    
    
    strTestCaseResult = "FAIL"
    strTCRemarks=Err.Description
    
    'Close Panels
    Call sAutoHidePanelHide("Pending STP")
    Call sAutoHidePanelHide("Update Log")
    Call sAutoHidePanelHide("Pending MG/Released")
    Call sAutoHidePanelHide("Check List")
    Call sAutoHidePanelHide("Daily Check Panel")
   
    'Close Windows
    Call sCloseSource
    Call CloseWindow
    Call CloseWindow
    Call CloseWindow
    Call CloseSearch
    
    'Drop Workspace
     Call SourceWorkSpacevwr
     Call DropSourceSchWS
     Call sCheckLayoutWorkSpaceVwrDropWorkspace
     Call CloseWindow
     Call CloseWindow
     Call closeWindow

    'Close excel books
      Call ExcelProcessKill()
      Delay(5000)
      
      Set objTemp=Sys.WaitChild("Process(""ISI.CeicDataManager.Startup"")",10000)
      If objTemp.Exists = True  Then 
        Sys.Process("ISI.CeicDataManager.Startup").Close
        Sys.Process("ISI.CeicDataManager.Startup").Terminate
        Delay(5000)
      End If   
       Err.Clear
       RouTime=0

End Sub

'***************************************************************************************************************************************

Sub EdgeCleanUp2
On Error Resume Next
    
     Set PicObj = Utils.Picture
     Set PicObj = Sys.Desktop.Picture
     PicObj.SavetoFile(strLogFolder & "Screenshots\" & strTestCase_No &  "_" & picCount & ".jpg")
     picCount = picCount + 1 
    
    
    strTestCaseResult = "FAIL"
    Call Sys.Process("EdgeClient").Close
    Call Sys.Process("EdgeClient").Terminate
    Call sLaunchEDGE()

    'Drop Workspace
     Call SourceWorkSpacevwr
     Call DropSourceSchWS
     Call sCheckLayoutWorkSpaceVwrDropWorkspace
     Call CloseWindow
     Call CloseWindow
     Call closeWindow

    'Close excel books
      Call ExcelProcessKill   
   
      Delay(2000)     
      Sys.Process("ISI.CeicDataManager.Startup").Close
      Sys.Process("ISI.CeicDataManager.Startup").Terminate
      Delay(2000)
      
      RouTime=0

End Sub

'***************************************************************************************************************************************

Sub DropSourceSchWS

On Error Resume Next
  strTemp="WPFObject(""ContentControl"", ""Source Workspace"", 1)"
  Set objSourceWSVwr=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  Call objSourceWSVwr.Click
  Call sEdgeProcessor
  strTemp="WPFObject(""ContentControlEx"", ""Source Schedules"", 2)"
  Set objSourceSch=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  If objSourceSch.Exists = True Then 
    Call objSourceSch.Click
  End If
  Delay 5000
  ''Selecting Records
      strTemp="WPFObject(""PendingChangeGridControl"")"
      Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      intRowcnt=GridControl.wRowCount
      For intI=0 to intRowcnt-1      
        Call GridControl.ClickCell(0,1)
        strTemp="WPFObject(""ContentControlEx"", ""Drop"", 2)"
        Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).FindChild("Name",strTemp,20,True)
        If objTemp.Exists = True then
          objTemp.Click
        End If
        strTemp="WPFObject(""PART_ContainerContent"")"
         Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.").FindChild("Name",strTemp,50,True)
        If objTemp.Exists = True then
          Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.").WPFObject("CustomMessageBoxWindow", "Please Confirm.", 1).WPFObject("Grid", "", 1).WPFObject("FloatingContainerBorder").WPFObject("FloatingContainerBackground").WPFObject("Grid", "", 1).WPFObject("FloatingContainerBody").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").Click
          Sys.Keys("Y")        
          Call sEdgeProcessor
           End If
      Next
      Call sCloseSource()
End Sub

'***************************************************************************************************************************************

Sub sCheckLayoutWorkSpaceVwrDropWorkspace()
On Error Resume Next

    Dim strObject,objEdgeMDI,strTemp,objTemp,GridControl,intRowcnt,intI,intRow
 
    strObject = "WPFObject(""HwndSource: Shell"", """& strEnvi &""")"  
    Set objEdgeMDI = Sys.Process("EdgeClient").WaitChild(strObject, 600000)
    If objEdgeMDI.Exists then
      strTemp="WPFObject(""TextBlock"", ""Layout"", 1)"
      Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).FindChild("Name",strTemp,14,True)
      If objTemp.Exists = False then
        strTemp="WPFObject(""ContentControl"", ""Layout Workspace"", 1)"
        Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).FindChild("Name",strTemp,16,True)
        If objTemp.Exists = True then
          objTemp.Click
        End If
        Call sEdgeProcessor
        log.Message "Opening Layout Workspace.."
      Else
        log.Message "Layout Workspace is opened"
      End If
  
      ''Selecting Records
      strTemp="WPFObject(""PendingChangeGridControl"")"
      Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      
      intRowcnt=GridControl.wRowCount
      For intI=0 to intRowcnt-1
        intRow=GridControl.FindRow(1,"Workspace Name")
        Call GridControl.ClickCell(0,1)
        strTemp="WPFObject(""ContentControlEx"", ""Drop"", 2)"
        Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).FindChild("Name",strTemp,20,True)
        If objTemp.Exists = True then
          objTemp.Click
        End If
        strTemp="WPFObject(""PART_ContainerContent"")"
         Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.").WPFObject("CustomMessageBoxWindow", "Please Confirm.", 1).FindChild("Name",strTemp,50,True)
        If objTemp.Exists = True then
          Sys.Keys "Y"
          strTCRemarks = strTCRemarks & "<br />" & "Dropped Workspace Successfully" 
          Call sEdgeProcessor
        Else
        End If
        
         exit Sub 
      Next
      Call closeWindow

    Else
      log.Message "RibbonWindow not found"
    End If

End Sub

'***************************************************************************************************************************************

Sub CloseSearch()

On Error Resume Next

    Dim objEdge,i,j,objCaption,objText,strOk
    Set objEdge=Sys.Process("EdgeClient")
    If objEdge.Exists = True then  
    objText = objEdge.FindAllChildren("ClrClassName","LayoutGroup", 50,True)
        For i=0 to ubound(objText)
          log.Message objText(i).FullName
          log.Message objText(i).Name
          objCaption = objText(i).FindAllChildren("ClrClassName", "LayoutPanel",50,True)
          For j=0 to ubound(objCaption)
            log.Message objCaption(j).FullName
            log.Message objCaption(j).Name
            if objCaption(j).Content.Caption = "Source Series" then 
                  log.Message objCaption(j).FullName                 
                    Call objCaption(j).ClickR(275, 8)
                    Delay 2000,"Pls Wait.."
                    sys.Keys "[Down][Down][Down][Enter]"
                    Delay 2000,"Pls Wait.."
                     Set strOk=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Edge")
                    Delay 2000, "Closing Form..Pls wait.."
                    If strOk.Exists Then
                      SYS.Keys "[Enter]"
                    End If
                  Exit For 
              End if 
          Next
        Next   
  End If
  If Err.Number > 0 Then
    Log.Warning("Error in 'CloseSearch()' function , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
      
End Sub
'***********************************************************************************************************************************8

                                       'BMT Scripts Started
              
'**************************************************************************************************************************************8

Sub sSourceBM(strParameters)

On Error Resume Next

    Dim strSource_Name,strLevel2src_Name,objNewWrkSpace_okbtn,objNewWrkSpace_Name,strWrkSpaceName
    Dim objNewWrkSpace_Txtbox,objopenforEdit,objWrkspace_popup
    Dim strTemp,objTemp,intRow,barManager,intTotNodeCnt,Text,strDesc1,strDesc2
    Dim objWrkSpace,objwrkspacepop,objwrkspcUpload,objConfirm,objGridCell,DescLocalText,intSeriesID,strLocalname
    Dim layoutGroup
    Dim strTemp1,objNewWrkSpaceName

    strSource_Name=getSplitValue(strParameters,"SOURCE")
    strLevel2src_Name=getSplitValue(strParameters,"LEVEL2SOURCE")
    intSeriesID=getSplitValue(strParameters,"SERIESID")
    strLocalname=getSplitValue(strParameters,"WORKSPACENAME")
    
'     strSource_Name="Test" 
'     strLevel2src_Name="Automation_UIT3"
'     intSeriesID=0
     
    strDesc1=aqDateTime.Now
    strDesc2=aqDateTime.Now
    DescText=Replace(strDesc1,"/","-")
    DescText=Replace(DescText,":","_")
    DescLocalText=DescText
    strWrkSpaceName=DescText
    
    if intSeriesID=0 then
      Call sSourceseries
      intSeriesID=strSourceFileText
    End if 

    ''Setting grid Objects      
    strTemp="WPFObject(""SourceTreeListView"")"
    Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    strTemp="WPFObject(""SourceTreeControl"")"
    Set GridSourceTree=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
     
     Delay 5000,"Pls Wait.."
     
    ''Selecting Country Name
    intTotNodeCnt=GridControl.Nodes_2.Count
    For intI=0 to intTotNodeCnt-1         
        If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
          GridControl.Nodes_2.Item(intI).ExpandAll
          log.Message "Country Name - " & GridControl.Nodes_2.Item(intI).Content.Description       
'          strTCRemarks=strTCRemarks & Chr(10) & "Selected Node - " & GridControl.Nodes_2.Item(intI).Content.Description  
          blnFlag=False  
          Exit For
        End If
    Next
    If blnFlag = True then
      strTCRemarks="Country Name not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If
  
    Delay 4000,"Pls Wait.."
        blnFlag = True 
    ''Selecting Level2Source_Name
    intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
    For intJ=0 to intTotNodeCnt-1
      If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then
        GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll   
        intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
        Call GridControl.ClearSelectionCore
        Call GridControl.FocusViewAndRow(GridControl,intRow)
        GridControl.SetFocusOnCurrentItem
        Call GridControl.SelectRowCore(intRow)
        log.Message "Level2 Source Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
        blnFlag = False 
        Exit For
      End If
    Next
    If blnFlag = True then
      log.Message "Level2 Source Name not found"
      strTCRemarks="Level2 Source Name not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If
    
    Delay 2000,"Pls Wait.."

    ''Clicking on "New Workspace" Button and selecting "Open for Edit(Souce)" option 
    strTemp="WPFObject(""ContentControlEx"", ""New Workspace"", 2)"
    Set objNewWorkspace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    If objNewWorkspace.Exists = True then
      objNewWorkspace.Click
      strTemp="WPFObject(""BarPopupBorderControl"", """", 1)"
      Set objWrkspace_popup=Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,5,True)
      If objWrkspace_popup.Exists = True then
        strTemp="WPFObject(""ContentControlEx"", ""Open For Edit (Source)"", 2)"
        Set objopenforEdit=objWrkspace_popup.FindChild("Name",strTemp,8,True)
        If objopenforEdit.Exists then
          objopenforEdit.Click  
        End If
      End If
     
    
      strTemp1="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
      Set objNewWrkSpaceName=Sys.Process("EdgeClient").WaitChild(strTemp1,600000)
      If objNewWrkSpaceName.Exists = True then
     
      ''Waiting for Workspace Name prompt
      strTemp="WPFObject(""FloatingContainerBorder"")"
        If objNewWrkSpaceName.Exists = True then
          strTemp="WPFObject(""ChangeNameTextEdit"")"
          ''Entering Workspace Name
          Set objNewWrkSpace_Txtbox=objNewWrkSpaceName.FindChild("Name",strTemp,9,True)
            If objNewWrkSpace_Txtbox.Exists = True then
              objNewWrkSpace_Txtbox.Click  
              objNewWrkSpace_Txtbox.Text=strWrkSpaceName  
              ''Clicking on Ok Button 
              strTemp="WPFObject(""OkButton"")"
              Set objNewWrkSpace_okbtn=objNewWrkSpaceName.FindChild("Name",strTemp,9,True)
              If objNewWrkSpace_okbtn.Exists = True then
                objNewWrkSpace_okbtn.Click              
              End If
            End If
        End If
      End if
    End If

   Delay 3000, "Please Wait Form is Loading"
   Call sEdgeProcessor()

    ''WorkSpace Edit Window
    strTemp="WPFObject(""LayoutPanel"", """", 2)"
    Set objLayoutPanel2=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    If objLayoutPanel2.Exists then
        strTemp="WPFObject(""SourceTreeListView"")"
        Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl").FindChild("Name",strTemp,10,True)
        strTemp="WPFObject(""SourceTreeListControl"")"
        Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).FindChild("Name",strTemp,10,True)
        ''Expanding First Node in Tree      
        intTotNodeCnt=GridControl.Nodes_2.Count  
        For intI=0 to intTotNodeCnt-1         
          If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
            GridControl.Nodes_2.Item(intI).ExpandAll
            blnFlag=False  
            Exit For
          End If
        Next
    
        ''Expanding Second Node in Tree
        intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
        For intJ=0 to intTotNodeCnt-1
          If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then
            GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
            intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(0).get_RowHandle
            GridControl.Keys "^[Home]"
            Call GridControl.ClearSelectionCore
            Call GridControl.FocusViewAndRow(GridControl,intRow-1)
            GridControl.SetFocusOnCurrentItem
            Call GridControl.SelectRowCore(intRow-1)        
            If objGridCell.Exists = True then
              objGridCell.Click
'              strTCRemarks=strTCRemarks & Chr(10) & "Selected - " & strLevel2src_Name
            End If
            blnFlag = False 
            Exit For
          End If
        Next
    
        ''Clicking on New Folder
        strTemp="WPFObject(""ContentControlEx"", ""Add Folder"", 2)"
        Set objAddFolder=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 4).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Add Folder", 2)
        If objAddFolder.Exists = True then
          Delay 3000,"New Folder..."
          objAddFolder.Click
          Delay 8000,"New Folder..."
        End If
    
        ''Getting no. of Rows under level 2
        intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
        intK=intTotNodeCnt-1
    
        Set objDescCell=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl").WPFObject("SourceTreeListView").Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK)
        Call objDescCell.Content.set_Description(DescText)
        Call objDescCell.Content.set_DescriptionLocal(DescLocalText)
    
   
        ''Attach Series
        Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceSeriesViewControl").WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 1).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Attach Series", 2)
        If objTemp.Exists = True then
          objTemp.DblClick
          ''Entering Series      
          Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: SourceSeriesPrompt", "Attach Source Series").WPFObject("SourceSeriesPrompt", "Attach Source Series", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("StackPanel", "", 1).WPFObject("SeriesIdTextEdit")
          If objTemp.Exists = True then
             objTemp.Text=intSeriesID
             Delay(5000)
             ''Clicking on OK Button
             Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: SourceSeriesPrompt", "Attach Source Series").WPFObject("SourceSeriesPrompt", "Attach Source Series", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("OkButton")
             If objTemp.Exists = True then
                objTemp.Click
'                strTCRemarks=strTCRemarks & Chr(10) & "Attached Series- " & intSeriesID
             End If
          End If            
        End If
        
       Delay 60000 , "Please wait Form is Laoding"
       Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceSeriesViewControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("SourceSeriesGridControl").WPFObject("SourceSeriesTableView").WPFObject("HierarchyPanel", "", 1).Waitchild("WPFObject(""RowControl"", """", 1)",18000000)
	     Call SClosesource()        
       Dim objSaveWrk,objWait 
       strTemp="WPFObject(""ContentControlEx"", ""Workspace"", 2)"
       Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50)
       objWait=1
      Do until objTemp.Enabled = true 
        If objWait < 20 Then
          Delay 1000,"Pls Wait... Form is loading..."
          objWait=objWait+1
        else
          Call SClosesource()
          Call SourceWorkSpacevwr()
          Exit Sub
        end if 
    Loop 
    
    ''Save WorkSpace
    strTemp="WPFObject(""ContentControlEx"", ""Workspace"", 2)"
    Set objWrkSpace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    If objWrkSpace.Exists = True then
      objWrkSpace.Click
      Dim objEdgeFilter
      strTemp="WPFObject(""ContentControlEx"", ""Save Workspace"", 2)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50)
      If objTemp.Exists = TRUE then
        objTemp.Click
        Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Confirm save.")'.FindChild("Name",strTemp,50,True)

          If objConfirm.Exists = True then
            objConfirm.Click
            Sys.Keys("Y")
            strTemp="WPFObject(""PART_ContainerContent"")"
            Set objConfirm = Sys.Process("EdgeClient").Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", """")",600000)'
            If objConfirm.Exists = True Then
                objConfirm.Click
                SYS.Keys "[Enter]"
            End If
          End if 
      Else
        strTestCaseResult = "ABORT"
        Exit Sub  
      End If
 End if 
 End if 
    Call SClosesource()
End Sub


'**************************************************************************************************************************************8


Sub sSourceWorkSpacevwrBM()

    Dim strObject,objEdgeMDI,strTemp,objTemp,GridControl,intRowcnt,intI,intRow,strTempsource,objTempSource
    Dim Watchstr,Watchstr1,Time1,Time2,Watch1
    Dim i,objText
    
   On Error Resume Next
    'strEnvi = "Edge ( Development Test )"    
   ' strLocalname=getSplitValue(strParameters,"WORKSPACENAME")
    'strLocalname="UIT1_1"
    Watchstr=""
    Watchstr1=""
    iTestCaseFirstRow = 0

    Set Watch = HISUtils.StopWatch
    Set Watch1 = HISUtils.StopWatch
  
    Time1="12/12/2012"& " "& "00:00:00"
    Time1=aqConvert.StrToDateTime(Time1)
    Time2=Time1
    new_time=Time
    blnTimeRecorded = False
  
 
   Set objEdgeMDI = Sys.Process("EdgeClient")'.WaitChild(strObject, 600000)
   If objEdgeMDI.Exists then
      strTemp="WPFObject(""TextBlock"", ""Layout"", 1)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objTemp.Exists = False then
        strTemp="WPFObject(""ContentControl"", ""Source Workspace"", 1)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        If objTemp.Exists = True then
          objTemp.Click
        End If
        Call sEdgeProcessor
        log.Message "Opening Source Workspace.."
      Else
        log.Message "Source Workspace is opened"
      End If
  
      ''Selecting Records
      strTemp="WPFObject(""PendingChangeGridControl"")"
      Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)   
      intRowcnt=GridControl.VisibleRowCount      '
      intRow=GridControl.FindRow(1,"Workspace Name")
    Else
      log.Message "RibbonWindow not found"
    End If
     
     Set objCell = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1)
     objCell.Click    
    
      strTemp="WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"
     Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objTemp.Exists = True then
        objTemp.Click        
      End If 
      strTemp="WPFObject(""PART_ContainerContent"")"
      Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.")
      If objConfirm.Exists = True then
      objConfirm.Click
        sys.Keys("Y")
        If blnTimeRecorded = False Then
          Watch.Start
          Log.Message("Start Execution time: "  & now)
        End IF
      End if 
 
    Set objConfirm= Sys.Process("EdgeClient")._
      Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Upload Workspace"")",600000)   
         
         
          If objConfirm.Exists = True Then             
                  objConfirm.Click
                  SYS.Keys("O")                 
                  Watch.Stop
                  blnTimeRecorded = True                  
          End if       
     
       
      Log.Message("End Source Execution time: "  & now)
      Log.Message("Source finished. Execution time: " & Watch.Tostring)
      strTCRemarks = "Source Execution Time"
      strTCRemarks = strTCRemarks & "  " & Watch.Tostring & " - uploaded a Source successfully"
      Call sEdgeProcessor      
      Call sCloseSWV()
End Sub


'**************************************************************************************************************************************
Sub sSourceseries()
Dim objFileToRead
On Error Resume Next
  strFileText=""
  Set objFileToRead = CreateObject("Scripting.FileSystemObject").OpenTextFile(strProjectFilesPath &"Source.txt",1)
  strSourceFileText = objFileToRead.ReadAll()
  objFileToRead.Close
End sub 

'**************************************************************************************************************************************


Sub sLayoutseries()
Dim objFileToRead
On Error Resume Next
  strFileText=""
  Set objFileToRead = CreateObject("Scripting.FileSystemObject").OpenTextFile(strProjectFilesPath &"Layout.txt",1)
  strLayoutFileText = objFileToRead.ReadAll()
  objFileToRead.Close
End sub 

'**************************************************************************************************************************************


Sub sLayoutBM(strParameters)
On Error Resume Next 
    Dim strLevel1layout,strLevel2layout,strLevel3layout,strWrkSpaceName
    Dim objNewWrkSpace_okbtn,objNewWrkSpace_Name
    Dim objNewWrkSpace_Txtbox,objopenforEdit,objWrkspace_popup
    Dim strTemp,objTemp,intRow,barManager,intTotNodeCnt,Text,objCellText,intl,intK,strDesc1,strDesc2
    Dim objWrkSpace,objwrkspacepop,objwrkspcUpload,objConfirm,objGridCell,DescLocalText,intSeriesID,strLocalname

    strLevel1layout=getSplitValue(strParameters,"LEVEL1LAYOUT")
    strLevel2layout=getSplitValue(strParameters,"LEVEL2LAYOUT")
    strLevel3layout=getSplitValue(strParameters,"LEVEL3LAYOUT")
    strLocalname=getSplitValue(strParameters,"WORKSPACENAME")
    intSeriesID=0

'    strLevel1Layout="dX Non-Asia Database (Current Eng Version)"
'    strLevel2Layout="Z-Testing Topic(IT-use only)"
'    strLevel3Layout="Automation_UIT3"
'    strEnvi = "Edge ( US Integration )" 
'    intSeriesID=0



    strDesc1=aqDateTime.Now
    strDesc2=aqDateTime.Now
    DescText=Replace(strDesc1,"/","-")
    DescText=Replace(DescText,":","_")
    DescLocalText=DescText
    strWrkSpaceName=DescText
     
    if intSeriesID=0 then
      Call sLayoutseries
      intSeriesID=strLayoutFileText
    End if 

    Delay 3000,"Please Wait..."

    ''Setting grid Objects

    strTemp="WPFObject(""LayoutTreeListView"")"
    Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    strTemp="WPFObject(""LayoutTreeControl"")"
    Set GridSourceTree=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    
    Delay 2000,"Please Wait..."
    ''Selecting Level1 layout
    intTotNodeCnt=GridControl.Nodes_2.Count
    For intI=0 to intTotNodeCnt-1         
        If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strLevel1layout) then
          GridControl.Nodes_2.Item(intI).ExpandAll
          log.Message "Level 1 Layout - " & GridControl.Nodes_2.Item(intI).Content.Description       
          blnFlag=False  
          Exit For
        End If
    Next
    If blnFlag = True then
      strTCRemarks="Level 1 Layout not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If
  
    Delay 5000,"Please Wait..."
    blnFlag = True 
    ''Selecting Level2 Layout
    intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
    For intJ=0 to intTotNodeCnt-1
      If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2layout) then
        GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
        log.Message "Level2 layout Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
        blnFlag = False 
        Exit For
      End If
    Next
    If blnFlag = True then
      strTCRemarks="Level2 Source Name not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If

    Delay 2000,"Please Wait..."
    blnFlag = True    
    ''Selecting Level3 Layout
      intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
      For intK=0 to intTotNodeCnt-1
        If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel3layout) then
          GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).ExpandAll
          intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
            Call GridControl.ClearSelectionCore
            Call GridControl.FocusViewAndRow(GridControl,intRow)
            GridControl.SetFocusOnCurrentItem
            Call GridControl.SelectRowCore(intRow)
          log.Message "Level3 layout Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description
          blnFlag = False
          Exit For   
        End If 
      Next
      If blnFlag = True then
        strTCRemarks="Level3 Source Name not found"
        strTestCaseResult="FAIL"
        Exit Sub
      End If      
      ''Clicking on "New Workspace" Button and selecting "Open for Edit(Souce)" option   
      strTemp="WPFObject(""ContentControlEx"", ""New Workspace"", 2)"
      Set objNewWorkspace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objNewWorkspace.Exists = True then
          objNewWorkspace.Click
          strTemp="WPFObject(""BarPopupBorderControl"", """", 1)"
          Set objWrkspace_popup=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
          If objWrkspace_popup.Exists = True then
            strTemp="WPFObject(""ContentControlEx"", ""Open For Edit"", 2)"
            Set objopenforEdit=objWrkspace_popup.FindChild("Name",strTemp,8,True)
            If objopenforEdit.Exists then
              objopenforEdit.Click                 
            End If
          End If
      
          strTemp1="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
          Set objNewWrkSpaceName=Sys.Process("EdgeClient").WaitChild(strTemp1,80000)
          If objNewWrkSpaceName.Exists = True then
            ''Waiting for Workspace Name prompt
              If objNewWrkSpaceName.Exists = True then
              strTemp="WPFObject(""ChangeNameTextEdit"")"
              ''Entering Workspace Name
              Set objNewWrkSpace_Txtbox=objNewWrkSpaceName.FindChild("Name",strTemp,9,True)
                 If objNewWrkSpace_Txtbox.Exists = True then
                  objNewWrkSpace_Txtbox.Click
                  objNewWrkSpace_Txtbox.Text=strWrkSpaceName                    
                  ''Clicking on Ok Button 
                  strTemp="WPFObject(""OkButton"")"
                  Set objNewWrkSpace_okbtn=objNewWrkSpaceName.FindChild("Name",strTemp,9,True)
                  If objNewWrkSpace_okbtn.Exists = True then
                    objNewWrkSpace_okbtn.Click                 
                  End If
                 End If
            End If
          End if 
    End If


   Delay 5000 

    ''WorkSpace Edit Window
    strTemp="WPFObject(""LayoutPanel"", """", 2)"
    Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    If objTemp.Exists then
        Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("LayoutTreeListControl").WPFObject("LayoutTreeListView")
        Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("LayoutTreeListControl")
           ''Selecting Level1 layout
        intTotNodeCnt=GridControl.Nodes_2.Count
        For intI=0 to intTotNodeCnt-1         
            If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strLevel1layout) then
              GridControl.Nodes_2.Item(intI).ExpandAll
              log.Message "Level 1 Layout - " & GridControl.Nodes_2.Item(intI).Content.Description       
              blnFlag=False  
              Exit For
            End If
        Next
  
        blnFlag = True 
        ''Selecting Level2 Layout
        intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
        For intJ=0 to intTotNodeCnt-1
          If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2layout) then
            GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
            log.Message "Level2 layout Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
            blnFlag = False 
            Exit For
          End If
        Next
   
        ''Selecting Level3 Layout
          intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
          For intK=0 to intTotNodeCnt-1
            If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel3layout) then
              GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).ExpandAll
              intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
              GridControl.Keys "^[Home]"
              intRow=intRow+1
             Set objGridCell=GridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 3).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 2).WPFObject("InplaceBaseEdit", "", 1)
              If objGridCell.Exists = True then
                objGridCell.Click
              End If
              log.Message "Level3 layout Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description
              blnFlag = False
              Exit For   
            End If 
          Next
         
    
        ''Clicking on New Folder
        strTemp="WPFObject(""ContentControlEx"", ""Add Folder"", 2)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        If objTemp.Exists = True then
          objTemp.Click  
          Call sEdgeProcessor
          Delay 1000,"New Folder..."
        End If
        
        Dim intRowCount
      
        ''Getting no. of Rows under level 3
        intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(0).Nodes.Count
        intl=intTotNodeCnt-1
        intRowCount=intTotNodeCnt
       
        
        Set objCellText=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("LayoutTreeListControl").WPFObject("LayoutTreeListView").Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Nodes.Item(intL)
        Call objCellText.Content.set_Description(DescText)    
        Call objCellText.Content.set_DescriptionLocal(DescLocalText)
        Call objCellText.Content.set_DisabledFlag(True)
              

         
        ''Attach Series
        strTemp="WPFObject(""ContentControlEx"", ""Attach Series"", 2)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
         If objTemp.Exists = True then
          objTemp.DblClick
          ''Entering Series
          strTemp="WPFObject(""SeriesIdTextEdit"")"
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
          If objTemp.Exists = True then 
              objTemp.Text=intSeriesID
              Delay(5000)
             ''Clicking on OK Button
             Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: LayoutSeriesPrompt", "Attach Layout Series").WPFObject("LayoutSeriesPrompt", "Attach Layout Series", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("OkButton")
             If objTemp.Exists = True then
                objTemp.Click
             End If
          End If            
        End If
      
        Call SClosesource()
        Delay 60000, "Please Wait..."
        
        
      Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("LayoutSeriesViewControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("LayoutSeriesGridControl").WPFObject("LayoutSeriesTableView").Waitchild("WPFObject(""HierarchyPanel"", """", 1)",300000)
      Call sEdgeProcessor()
      
        Dim objSaveWrk,ObjWait 
        strTemp="WPFObject(""ContentControlEx"", ""Workspace"", 2)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50)
      objWait=1
      Do until objTemp.Enabled = true 
          If objWait < 200 Then
            Delay 1000,"Pls Wait... Form is loading..."
            objWait=objWait+1
          else
            Call SClosesource()
            Call SourceWorkSpacevwr()
            Exit Sub
          end if 
      Loop  
      
   
      
      ''Disable Flag
      Dim objAttGrid,objAttGridTree,intRowcnt,intAttRow,objAttCell,intR     
      GridControl.Keys "^[END]"
      GridControl.Click
      GridControl.Keys("[PageDown]")
      
      
      Dim objLayoutTable,i,j,objRowControl,objCheckBox
      Set objLayoutTable = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("LayoutTreeListControl").WPFObject("LayoutTreeListView").WPFObject("HierarchyPanel", "", 1)
      objRowControl = objLayoutTable.FindAllChildren("ClrClassName","RowControl", 50,True)
      For i=0 to ubound(objRowControl)
        If objRowControl(i).DataContext.Node_2.Content.Description = DescText Then
           objCheckBox = objRowControl(i).FindAllChildren("ClrClassName","CheckBox", 50,True)
              For j=0 to ubound(objCheckBox)
                 objCheckBox(j).click
                 Call sEdgeProcessor()
                 Delay (2000)
                 objCheckBox(j).click
                 Call sEdgeProcessor()
                 Delay (2000)
              Next
           Exit For
        End If
      Next
      
     Call sEdgeProcessor  
    ''Uploading WorkSpace
    strTemp="WPFObject(""ContentControlEx"", ""Workspace"", 2)"
    Set objWrkSpace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    If objWrkSpace.Exists = True then
      objWrkSpace.Click
      If objWrkSpace.Exists = True then
        strTemp="WPFObject(""ContentControlEx"", ""Save Workspace"", 2)"
        set objwrkspcUpload=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        If objwrkspcUpload.Exists = True then
          objwrkspcUpload.Click
          'Delay 5000,"Pls Wait.."
          strTemp="WPFObject(""PART_ContainerContent"")"
          Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Confirm save.").WPFObject("CustomMessageBoxWindow", "Confirm save.", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WaitChild(strTemp,180000)
          If objConfirm.Exists = True then
            objConfirm.Click
            sys.Keys("Y")            
            Set objConfirm = Sys.Process("EdgeClient").Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", """")",180000)
           If objConfirm.Exists = True Then
                objConfirm.Click
                SYS.Keys "[Enter]"
            End If            
            End If                            
          End If
        End If
      End If
    End If
    Call CloseWindow
End Sub

'**************************************************************************************************************************************


Sub sLayoutWorkSpacevwrBM()

    Dim strObject,objEdgeMDI,strTemp,objTemp,GridControl,intRowcnt,intI,intRow
    Dim Watchstr,Watchstr1,Time1,Time2,Watch1,strLocalname
    Dim i,objText
    
On Error Resume Next
 ' strLocalname=getSplitValue(strParameters,"WORKSPACENAME")

    Watchstr=""
    Watchstr1=""
    iTestCaseFirstRow = 0

    Set Watch = HISUtils.StopWatch
    Set Watch1 = HISUtils.StopWatch
    
    blnTimeRecorded = False
  
    Time1="12/12/2012"& " "& "00:00:00"
    Time1=aqConvert.StrToDateTime(Time1)
    Time2=Time1
    new_time=Time
    
    'strObject = "WPFObject(""HwndSource: RibbonWindow"")"
    Set objEdgeMDI = Sys.Process("EdgeClient")'.WaitChild(strObject, 600000)
    If objEdgeMDI.Exists then
      strTemp="WPFObject(""TextBlock"", ""Layout"", 1)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objTemp.Exists = False then
        strTemp="WPFObject(""ContentControl"", ""Layout Workspace"", 1)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        If objTemp.Exists = True then
          objTemp.Click
        End If
        Call sEdgeProcessor
        log.Message "Opening Layout Workspace.."
      Else
        log.Message "Layout Workspace is opened"
      End If
  
      ''Selecting Records
      strTemp="WPFObject(""PendingChangeGridControl"")"
      Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)     
        intRowcnt=GridControl.VisibleRowCount
        intRow=GridControl.FindRow(1,"Workspace Name")     
        Set objCell = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1)
        objCell.Click
    Else
      log.Message "RibbonWindow not found"
    End If
    
      strTemp="WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objTemp.Exists = True then
        objTemp.Click    
      End If 

      
      strTemp="WPFObject(""PART_ContainerContent"")"
      Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.")'.FindChild("Name",strTemp,50,True)
    If objConfirm.Exists = True then
        objConfirm.Click
        sys.Keys("Y")
        If blnTimeRecorded = False Then
          Watch.Start
          Log.Message("Start Execution time: "  & now)
        End IF
      End if 
    

   Set objConfirm= Sys.Process("EdgeClient")._
      Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Upload Workspace"")",600000)

      If objConfirm.Exists = True Then 
        objConfirm.Click
        SYS.Keys("O")
        Watch.Stop
        blnTimeRecorded = True
      End if       

      Log.Message("Layout finished. Execution time: " & Watch.Tostring)
            
      strTCRemarks = strTCRemarks & "<br />" & "Layout Execution Time"
      strTCRemarks = strTCRemarks & "  " & Watch.Tostring & " - uploaded a Layout successfully"
      
        Call sEdgeProcessor       
        Call CloseWindow

End Sub


'******************************************************************************************************************************
'BMT Sereis and Stress testing 

Sub sBMTStress(strParameters)
'Sub sBMTStress()
  On Error Resume Next
  
  Dim strTemp, objTemp, objGrid, objExcel, IntRowNumber(10), First_file_LastRow, Second_File_LastRow
  
  strLevel1Source1 =getSplitValue(strParameters,"Level2Source1")
  strLevel2Source1 =getSplitValue(strParameters,"Level2Source2")
  strLevel3Source1 =getSplitValue(strParameters,"Level3Source1")
  strLevel3Source2 =getSplitValue(strParameters,"Level3Source2")
  strTestDataFile1=getSplitValue(strParameters,"TestDataFile1")
  strTestDataFile2=getSplitValue(strParameters,"TestDataFile2")
  strCopyNumber=getSplitValue(strParameters,"CopyNumber")
  

  
  
'  strLevel1Source1 = "Test"
'  strLevel2Source1 = "Automation_STP2"
'  strLevel3Source1 = "BMT23"
'  strLevel3Source2 = "BMT24"
'  strTestDataFile1= "YYY-Automation_STP2-BMT23"
'  strTestDataFile2= "YYY-Automation_STP2-BMT24"
'  strCopyNumber = "2"
  
  'msgbox strCopyNumber

  
  
  'Open Source Module
   Call sHome_Source()
  'Select first Level3 source
  strTemp = "WPFObject(""SourceTreeListView"")"    
  IntRowNumber(0) = fGridone(strTemp,strLevel1Source1 )
  IntRowNumber(1) = fGridTwo(strTemp,strLevel2Source1 ,IntRowNumber(0))  
  IntRowNumber(2) = fGridThree(strTemp,strLevel3Source1 ,IntRowNumber(0), IntRowNumber(1))  
  Call sEdgeProcessor() 
  
  Delay 5000
  
  'Click on "Open global STP 
  strTemp= "WPFObject(""ContentControlEx"", ""Open Global STP"", 2)"
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  
  If objTemp.Exists Then 
    objTemp.Click
    'Call sEdgeProcessor()
    log.message "Selected Object " + strTemp + " is Clicked"
  Else
    log.message "Selected Object " + strTemp + " doesnot exists"
  End If
  'Call sobjClick(strTemp)

 'Click on Excel Timpoint
  Call fTimpoint_range_selection(2)
  
  'Select second Level3 Source
  Delay 2000
  strTemp = "WPFObject(""SourceTreeListView"")" 
  IntRowNumber(3) = fGridThree(strTemp,strLevel3Source2 ,IntRowNumber(0), IntRowNumber(1))  
  Call sEdgeProcessor() 
  
  Delay 5000
  
  'Click on "Open global STP 
  strTemp= "WPFObject(""ContentControlEx"", ""Open Global STP"", 2)"
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  
  If objTemp.Exists Then 
    objTemp.Click
    'Call sEdgeProcessor()
    log.message "Selected Object " + strTemp + " is Clicked"
  Else
    log.message "Selected Object " + strTemp + " doesnot exists"
  End If
  'Call sobjClick(strTemp)

 'Click on Excel Timpoint
  Call fTimpoint_range_selection(3)  
  
 'Select the Frequency and click ok on warning message
  Call fSelectFrequency(2)
  Delay 200
  Call fSelectFrequency(3)
  
   'Create Series for First File 
  First_file_LastRow = fSeries_Creation(strParameters, strTestDataFile1)
   
   Delay 200
  'Create Series for Second File
   Second_file_LastRow = fSeries_Creation(strParameters, strTestDataFile2)
  
  'Upload both file  
  Call sUploadBMTStree(strParameters,"Create Series Execution Time") 

' 
  
  'click on Refresh Button for Both Excel
  Delay 4000
  Call fClickRefreshButton(strTestDataFile1,2)
  Delay 5000, "Please wait to active second File"  
  Call fClickRefreshButton(strTestDataFile2,3)
 
   'Enter Timepoint for created Series for First Excel  
  Call fTimepoint_Creation(strParameters,strTestDataFile1,First_file_LastRow)
  Delay 2000
  
  'Enter Timepoint for created Series for Second Excel  
  strTestDataFile2=getSplitValue(strParameters,"TestDataFile2")
  Call fTimepoint_Creation(strParameters,strTestDataFile2,Second_file_LastRow)
  Delay 2000
  
  'Upload Timepoint
  Call sUploadBMTStree(strParameters, "Upload TimePoint Time") 
  
  'Close all Excelfiles
  Call  ExcelProcessKill()
  
End Sub

'*************************************************************************************************************************8
'Fucnction to select First Row
Function fGridone(strTemp,strLevel1 )
  
  'Function sLayoutLevel1GridSelection()
  On Error Resume Next   
  Dim objGridControl, IntCount
  
  Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  
   'Expanding First Node
   intTotNodeCnt=objGridControl.Nodes_2.Count  
   For intI=0 to intTotNodeCnt-1         
     If Ucase(objGridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strLevel1) then
         objGridControl.Nodes_2.Item(intI).ExpandAll                       
         intRow=objGridControl.Nodes_2.Item(intI).get_RowHandle         
         Call sSelcetLayoutLevel(objGridControl, intRow)   
         intRowControl =intRow +1 
        ' Call objGridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intRowControl).WPFObject("RowMarginControl", "", 1).Click(12, 10)
        Delay 200           
      Exit For
    End If
   Next 
   fGridone = IntI
   Set objGridControl = Nothing   
 
End Function

'##################################################################################################################33
'Fucnction to select Second Level
Function fGridTwo(strTemp,strLevel2 ,intI)
'Function sLayoutLevel2GridSelection()
  On Error Resume Next   
  Dim objGridControl, IntCount 

  Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  
  'Selceting the Second Level 
  intTotNodeCnt=objGridControl.Nodes_2.Item(intI).Nodes.Count
   For intJ=0 to intTotNodeCnt-1
    If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2) then 
        intRow=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
        Call sSelcetLayoutLevel(objGridControl, intRow)
         Delay 200     
      Exit For
    End If
   Next
    fGridTwo = IntJ
   Set objGridControl = Nothing 
End Function  
   
'##################################################################################################################33
'Fucnction to select Second Level
Function fGridThree(strTemp,strLevel3 ,intI, intJ)
'Function sLayoutLevel2GridSelection()
  On Error Resume Next   
  Dim objGridControl, IntCount   
  
  strLevel3FisrtFolder=getSplitValue(strParameters,"Level3FisrtFolder") 
  If strLevel3FisrtFolder <> "" And strLevel3 = "" Then 
    strLevel3 = strLevel3FisrtFolder
  End If
  
  Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  
  'Selecting the Third Level 
  intTotNodeCnt=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count        
  For intK=0 to intTotNodeCnt-1
    If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel3) then
           intRow =objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle          
          Call sSelcetLayoutLevel(objGridControl, intRow) 
                Dealy 200       
      Exit For
    End If
   Next

   fGridThree = IntK
   Set objGridControl = Nothing    
End Function 

'################################################################################################################################

'Fucnction to select Second Level
Function fGridFour(strTemp,strLevel4 ,intI, intJ,intK)
'Function sLayoutLevel2GridSelection()
  On Error Resume Next   
  Dim objGridControl, IntCount  
  
  Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  
  'Selecting the Third Level 
  intTotNodeCnt=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Nodes.Count        
  For intL=0 to intTotNodeCnt-1
    If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Nodes.Item(intL).Content.Description)=Ucase(strLevel4) then
      objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Nodes.Item(intL).ExpandAll      
      intRow =objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Nodes.Item(intL).get_RowHandle          
      Call sSelcetLayoutLevel(objGridControl, intRow)         
      Dealy 200       
      Exit For
    End If
   Next
   
   fGridFour = IntL
   Set objGridControl = Nothing    
End Function



'*************************************************************************************************************************8

'fucntion to Select Timpoint range

Function fTimpoint_range_selection(strExcelNumber)
'Function fTimpoint_range_selection()

  on Error Resume Next
  
  Dim objTemp, strTemp
  'strExcelNumber = 2
  strTemp = "WinFormsObject(""TimeRangePickerForm"")"
  Set CreateSTP=Sys.Process("EXCEL",strExcelNumber).WaitChild(strTemp,120000)  
 
  If CreateSTP.Exists = True  Then
    PropArray = Array("WndCaption", "Visible")
    ValuesArray = Array("Full History", True)
    Set objTemp = CreateSTP.FindChild(PropArray, ValuesArray, 50)  
    If objTemp.Exists = True Then
     'Click on Full History
      objTemp.Click
      log.Message "Selected Full History Radio button"
    Else
      log.Message "Full History Radio button not found"
    End If    

    PropArray = Array("WndCaption", "Visible")
    ValuesArray = Array("Open", True)
     'Click on open Button
    Set objTemp = CreateSTP.FindChild(PropArray, ValuesArray, 10)
    If objTemp.Exists = True Then
      objTemp.Click
      log.Message "Open button is clicked"
      Else
      log.Message "Open button not found"
    End If    
  End If   
  
  Set CreateSTP=Nothing  
  Set objTemp=Nothing 
  
  
End Function


'***********************************************************************************************************************************

Function fSelectFrequency(strExcelNumber)

  On Error Resume Next
  Dim File, strTemp
  
 'Select frequency if required
  strTemp="WinFormsObject(""SelectFreqForm"")"      
  Set objTemp=Sys.Process("EXCEL",strExcelNumber).WaitChild(strTemp,10000) 
  If objTemp.Exists Then
    strTemp="WinFormsObject(""radButton1"")"
    Set objTemp=objTemp.FindChild("Name",strTemp,5)
    If objTemp.Exists = True then
      objTemp.Click
      log.message "Frequecny is Selected"
      Delay 10000,"Pls Wait..."
    End If
  End If
  
 Set File = Sys.Process("EXCEL", strExcelNumber).Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Warning"")",60000)       
 If (File.Exists) Then
   strTemp = "WPFObject(""Button_Yes"")"         
   Set objYes = File.FindChild("Name", strTemp,50, True)
   If objYes.Exists = True Then
       objYes.Click
       log.Message "ok button clicked on Warning message"
   End If
   Delay 10000,"Pls Wait..." 
 End If
 
 Set File = Nothing 
End Function

'******************************************************************************************************************************8
'Create a Series 
Function fSeries_Creation(strParameters, strTestDataFile)
'Function fSeries_Timepoint() 

On Error Resume Next

  Dim STPSheetName, strSeriesName, strSourceSeriesName, strSeriesSourceCode,strForeCast
  Dim strSeriesStatus, strSeriesType, strSeriousCountry, strExcelNumber, strAddTimepoint,strTimepoints,strOutputUnit
  Dim strSeriesNature,strSeriesFreq,strSourceUnit,strUnitType,intlastRow,lastColumn,blnFlag


  
  STP= getSplitValue(strParameters,"STP")    
  STPSheetName= getSplitValue(strParameters,"STPSheetName")
  strSeriesName = getSplitValue(strParameters,"Series Name")
  strSourceSeriesName = getSplitValue(strParameters,"Source Series Name")
  strSeriesSourceCode=  getSplitValue(strParameters,"Series Source Code")
  strForeCast= getSplitValue(strParameters,"ForeCast")
  strSeriesStatus =  getSplitValue(strParameters,"Series Status")
  strSeriesType =  getSplitValue(strParameters,"Series Type")
  strSeriousCountry = getSplitValue(strParameters,"Serious Country")
  strOutputUnit=  getSplitValue(strParameters,"Output Unit")
  strSeriesNature =  getSplitValue(strParameters,"Series Nature")
  strSourceUnit =  getSplitValue(strParameters,"Source Unit")
  strSeriesFreq = getSplitValue(strParameters,"Series Freq")
  strUnitType = getSplitValue(strParameters,"Unit Type") 
  strTimepoints = getSplitValue(strParameters,"Timepoints")
  strCopyNumber = getSplitValue(strParameters,"CopyNumber")
  strOneSeries = getSplitValue(strParameters,"OneSeries")
  
' ' strExcelNumber = 2
'  STPSheetName="A1_1"
'  strCopyNumber="2"
'  STP="STP2"
'  'strTestDataFile="YYY-Automation_STP2-BMT23"
'  strSeriesName="test-series"
'  strSourceSeriesName="test-series"
'  strSeriesSourceCode="test-series"
'  strSeriesStatus="T"
'  strSeriesType="Key"
'  strSeriousCountry="YYY"
'  strOutputUnit="NA"
'  strSeriesNature="R"
'  strSourceUnit="NA"
'  strUnitType="%"
'  strTimepoints="2000"
'  strForeCast ="No"
''  strCopyNumber = "5" 
'    strSeriesFreq = "A1"
'    strOneSeries = "Yes"

  FilePath=aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")+ "\"+strTestDataFile +".xlsx"
  Set objSTPXls=GetObject(FilePath)
  objSTPXls.Maximize()
  With objSTPXls
    With .Sheets(STPSheetName).Select
    End With
    
    With .WorkSheets(STPSheetName)
      Dim r
      r=1
        delay Status_Wait, "Finding last Row the Excel sheets.. Pls wait.."        
         Do While (r < .UsedRange.Rows.Count)        
          If IsEmpty(.UsedRange.Cells(r, 1).Value) = True AND (.UsedRange.Cells(r, 1).Text) ="" Then
            If IsEmpty(.UsedRange.Cells(r-1, 1).Value) = False AND (.UsedRange.Cells(r-1, 1).Text) <>"" Then 
               fSeries_Creation =  r
               intlastRow = r
               strStartRowSTP= r
             Exit Do
            Else
             r=r-1
            End If            
          Else          
           r = r+100   
          End  If
        Loop
        
      inti=3
      lastColumn=.UsedRange.Columns.Count  
      For inti = 3 to lastColumn
          strText=.Cells(2,inti)
          .Cells(intlastRow,inti).Select
          If UCASE(strText)=UCase("Series Name") then 
          .Cells(intlastRow,inti).Value=strSeriesName
          ElseIf UCASE(strText)=UCase("Source Series Name") then 
          .Cells(intlastRow,inti).Value=strSourceSeriesName
          ElseIf UCASE(strText)=UCase("Series Source Code") then 
          .Cells(intlastRow,inti).Value=strSeriesSourceCode
           ElseIf UCASE(strText)=UCase("ForeCast") then 
          .Cells(intlastRow,inti).Value=strForeCast 
          ElseIf UCASE(strText)=UCase("Series Status") then 
          .Cells(intlastRow,inti).Value=strSeriesStatus
          ElseIf UCASE(strText)=UCase("Series Type") then 
          .Cells(intlastRow,inti).Value=strSeriesType
          ElseIf UCASE(strText)=UCase("Series Country") then 
          .Cells(intlastRow,inti).Value=strSeriousCountry
          ElseIf UCASE(strText)=UCase("Output Unit") then 
          .Cells(intlastRow,inti).Value=strOutputUnit
          ElseIf UCASE(strText)=UCase("Series Nature") then 
          .Cells(intlastRow,inti).Value=strSeriesNature
          ElseIf UCASE(strText)=UCase("Series Freq") then 
          .Cells(intlastRow,inti).Value=strSeriesFreq
          ElseIf UCASE(strText)=UCase("Source Unit") then 
          .Cells(intlastRow,inti).Value=strSourceUnit
          ElseIf UCASE(strText)=UCase("Unit Type") then 
              .Cells(intlastRow,inti).Value=strUnitType  
          ElseIf isDate(strText)  then
              strStartcolumn=inti
              Exit For
          End if 
         Next 
         Delay 5000 , "Creating a new series.."
         
         ''Copy the Series for 2000 Cells 
        strEndSeriesColumn=strStartcolumn-3
        strEndSeriesColumn=GetColumnName(strEndSeriesColumn)
        Delay(5000)
        
      If strOneSeries <> "Yes" Then 
        With objSTPXls
          With .Sheets(STPSheetName).Select
          End With      
          With .WorkSheets(STPSheetName)
             .Range("C" & intlastRow & ":" & strEndSeriesColumn & intlastRow ).Select               
               intTargetRow=intlastRow + Cint(strCopyNumber)
              .Range("C" & intlastRow & ":" &strEndSeriesColumn & intlastRow).AutoFill  .Range("C" & intlastRow & ":" & strEndSeriesColumn & intTargetRow), xlFillDefault
          End With
        END WITH  
      End If
      
        With objSTPXls
          With .Sheets(STPSheetName).Select
          End With      
          With .WorkSheets(STPSheetName) 
          'Click on Mark good
          Sys.Keys "~YY3" 
          End With
        END WITH               
        
      End With    
  End With  
          
End Function

'******************************************************************************************************************************************8
Sub sUploadBMTStree(strParameters, strText)
'Sub sUploadBMTStree()
  
  On Error Resume Next
  
  strTestDataFile1=getSplitValue(strParameters,"TestDataFile1")
  strTestDataFile2=getSplitValue(strParameters,"TestDataFile2")
  STPSheetName= getSplitValue(strParameters,"STPSheetName")
  
  Dim Watchstr1,Watchstr2
''  strTestDataFile1= "YYY-Automation_STP2-BMT23"
''  strTestDataFile2= "YYY-Automation_STP2-BMT24"
''  STPSheetName = "A1_1"
  

  
  Set Watch1 = HISUtils.StopWatch
  Set Watch2 = HISUtils.StopWatch  

  
  'upload for first excel
  Call fClickUpload(strTestDataFile1,2)
  
  Watch1.Start
  Log.Message("Start Execution time: "  & now)
   
  'upload for Second excel 
  Call fClickUpload(strTestDataFile2,3)
  Watch2.Start
  Log.Message("Start Execution time: "  & now)  
 
  Set File = Sys.Process("EXCEL", 2)._
          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Information"")",900000)

  If File.Exists Then
        Watch1.Stop
        File.Click
        Set PicObj = Utils.Picture
        Set PicObj = Sys.Desktop.Picture
        PicObj.SavetoFile(strLogFolder & "Screenshots\" & strTestCase_No &  "_" & picCount & ".jpg")
        picCount = picCount + 1 
        'Click on OK button    
        Set objOk = Sys.Process("EXCEL", 2).WPFObject("HwndSource: CustomMessageBoxWindow", "Information").WPFObject("CustomMessageBoxWindow", "Information", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).Waitchild("WPFObject(""Button_OK"")",10000)
        objOk.Click        
        blnTimeRecorded = True
        Log.Message("Time taken for First STP : "  & Watch1.ToString)     
       strTCRemarks = strTCRemarks & "<br />" & "First "& strText
        strTCRemarks = strTCRemarks & "  " & Watch1.ToString & " - uploaded a STP successfully"
        strTestCaseResult = "PASS"
  Else
      log.message "Information Dialog Box did not appear for first STP file"
      strTCRemarks = strTCRemarks & "  " &"Waited for "& Watch1.ToString & " - uploaded a STP Not successfully"
      strTestCaseResult = "FAIL"
  End If
         
  
  
  Set File = Sys.Process("EXCEL", 3)._
          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Information"")",900000)
          
  
  If File.Exists Then
     Watch2.Stop
     File.Click
     Set PicObj = Utils.Picture
     Set PicObj = Sys.Desktop.Picture
     PicObj.SavetoFile(strLogFolder & "Screenshots\" & strTestCase_No &  "_" & picCount & ".jpg")
     picCount = picCount + 1   
     'Click on OK Buttom     
     Set objOk = Sys.Process("EXCEL", 3).WPFObject("HwndSource: CustomMessageBoxWindow", "Information").WPFObject("CustomMessageBoxWindow", "Information", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).Waitchild("WPFObject(""Button_OK"")",10000)
     objOk.Click     
     blnTimeRecorded = True
     Log.Message("End Second Execution time: "  & now)
     Log.Message("Second STP finished. Execution time: " & Watch2.Tostring)         
      strTCRemarks = strTCRemarks & "<br />" & "Second "& strText
      strTCRemarks = strTCRemarks & "  " & Watch2.ToString & " - uploaded a STP successfully"
     strTestCaseResult = "PASS"
  Else
      log.message "Information Dialog Box did not appear for Second STP File"
      strTCRemarks = strTCRemarks & "  " &"Waited for "& Watch2.ToString & " - uploaded a STP Not successfully"  
      strTestCaseResult = "FAIL" 
  End If

  
  
  ''Question Msgbox
  Set File = Sys.Process("EXCEL", 2)._
          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Question"")",60000)

  If File.Exists Then  
    'Click on No Button
    Set objNo = Sys.Process("EXCEL", 2).WPFObject("HwndSource: CustomMessageBoxWindow", "Question").WPFObject("CustomMessageBoxWindow", "Question", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).Waitchild("WPFObject(""Button_No"")",10000)
    objNo.Click
  End If
            
  ''Question Msgbox
  Set File = Sys.Process("EXCEL", 3)._
          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Question"")",60000)

  If File.Exists Then    
    Set objNo = Sys.Process("EXCEL", 3).WPFObject("HwndSource: CustomMessageBoxWindow", "Question").WPFObject("CustomMessageBoxWindow", "Question", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).Waitchild("WPFObject(""Button_No"")",10000)
    objNo.Click
  End If
  
  sUploadBMTStree = strTestCaseResult
  
End Sub

'******************************************************************************************************************************************8

Function fClickUpload(strTestDataFile,intExcelNumber)
'Function fClickUpload()
   On Error Resume Next
   Dim NetUIHWND, wndXLMAIN
   
'  strTestDataFile1= "YYY-Automation_STP2-BMT23"
''  strTestDataFile2= "YYY-Automation_STP2-BMT24"
''  STPSheetName= "A1_1"
''  


  'intExcelNumber = 2
  If intExcelNumber=2 Then
      Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
      wndXLMAIN.Activate
    Else
       Set wndXLMAIN = Aliases.EXCEL2.wndXLMAIN
       wndXLMAIN.Activate    
    End If
    
   Set NetUIHWND = Sys.Process("EXCEL", intExcelNumber).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
     
    strTemp = "MSAAObject(""pt_EDGE"")"
  Set objEdge = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objEdge.Click()

    strTemp = "MSAAObject(""btn_Upload"")"
    Set objUpload = NetUIHWND.FindChild("Name", strTemp, 50, True)
    Call objUpload.Click()
    
    log.message "Upload button is clicked"
  
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'fClickUpload 'function - " & Err.Description)
    Err.Clear
  End If
  
End Function

'******************************************************************************************************************************************8


'Click on Refresh Button
Function fClickRefreshButton(strTestDataFile,ExcelNumber)
  On Error Resume Next
  Dim NetUIHWND, wndXLMAIN

  If ExcelNumber=2 Then
      Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
      wndXLMAIN.Activate
    Else
       Set wndXLMAIN = Aliases.EXCEL2.wndXLMAIN
       wndXLMAIN.Activate    
    End If

  Set NetUIHWND = Sys.Process("EXCEL", ExcelNumber).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
  
  strTemp = "MSAAObject(""pt_EDGE"")"
  Set objEdge = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objEdge.Click()
  
  strTemp = "MSAAObject(""btn_Refresh"")"
  Set objRefresh = NetUIHWND.FindChild("Name",strTemp,50,True)
  Call objRefresh.Click()
  
  log.message "Refresh button is clicked"
  
  
  
  'select the timepoint 
  Call fTimpoint_range_selection(ExcelNumber)
  'Select Frequency
  Call fSelectFrequency(ExcelNumber)
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'fClickRefreshButton'function - " & Err.Description)
    Err.Clear
  End If
End Function

'***********************************************************************************************************************************8

'Create Timpoint for created Series
Function fTimepoint_Creation(strParameters,strTestDataFile,strRowNumber)
'Function fTimepoint_Creation()
On Error Resume Next
  Dim strTemp, objTemp 
  strTimepoints = getSplitValue(strParameters,"Timepoints")
  STPSheetName= getSplitValue(strParameters,"STPSheetName")
  strCopyNumber = getSplitValue(strParameters,"CopyNumber")
  
'  msgbox strRowNumber
'  msgbox strStartRowSTP
'  msgbox strTestDataFile
  
'  strTimepoints="1"
'  STPSheetName="A1_1"
'  strCopyNumber="1"
'  'strTestDataFile= "YYY-Automation_STP2-BMT23"
  strStartRowSTP = strRowNumber
  
  
  FilePath=aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")+ "\"+strTestDataFile +".xlsx"
  Set objSTPXls=GetObject(FilePath) 
  With objSTPXls
    With .Sheets(STPSheetName).Select
    End With

    With .WorkSheets(STPSheetName)
      Dim r
        inti=3
        lastColumn=.UsedRange.Columns.Count
       For inti = 3 to lastColumn
          strText=.Cells(2,inti)
          .Cells(strStartRowSTP,inti).Select
          
          If isDate(strText)  then
              strStartcolumn=inti
              Exit For
          End if 
       Next 
       Delay 10000,"Please Wait"
       lastColumn=.UsedRange.Columns.Count
     

    With .Sheets(STPSheetName).Select
    End With      
    With .WorkSheets(STPSheetName)
        intcount=0
        if strStartcolumn=0 then
        End if
        intj= (strStartcolumn + 1)
        For intj= intj to lastColumn 
          If IsEmpty(.UsedRange.Cells(strStartRowSTP, intj).Value) = True AND (.UsedRange.Cells(strStartRowSTP, intj).Text) ="" Then
            if intcount<=9 then
              .Cells(strStartRowSTP,intj).Select
              .Cells(strStartRowSTP,intj).Text=strTimepoints
              .Cells(strStartRowSTP,intj).Value=strTimepoints
              strTimepoints=strTimepoints + 1
            Else
              Exit For
            End if 
            intcount=intcount+1 
          End If  
        Next
    End With    
     Dim strStartColumnName,StrEndColumnName
        strStartColumnName=strStartcolumn + 1
        strStartColumnName=GetColumnName(strStartColumnName)
        StrEndColumnName=GetColumnName(lastColumn)
        
        ''Copy the Series for 2000 Cells 
 
        With .Sheets(STPSheetName).Select
        End With
        With .WorkSheets(STPSheetName)
           .Range(strStartColumnName & strStartRowSTP & ":" & StrEndColumnName & strStartRowSTP ).Select                       
            intTargetRow=strStartRowSTP + Cint(strCopyNumber)
           .Range(strStartColumnName & strStartRowSTP & ":" & StrEndColumnName & strStartRowSTP).AutoFill  .Range(strStartColumnName & strStartRowSTP & ":" & StrEndColumnName & intTargetRow), xlFillDefault
        End With
  End With
  End With 
End Function

'################################################################################################################################################################33

'Fucntion to select Level

Function sSelcetLayoutLevel(objGridControl, intRow)
  on Error Resume Next
  
  objGridControl.Keys "^[Home]"
  Call objGridControl.ClearSelectionCore
  Call objGridControl.FocusViewAndRow(objGridControl,intRow)
  objGridControl.SetFocusOnCurrentItem
  Call objGridControl.SelectRowCore(intRow) 
  
End Function

'################################################################################################################################################################33

Sub sDM(strParameters)
'Sub sDM()
  
  Dim strSeriesName,strSourceSeriesName,strSeriesSourceCode,strSeriesStatus,strSeriesType,STPSheetName
  Dim strSeriousCountry,strOutputUnit,strSeriesNature,strSeriesFreq,strSourceUnit,strUnitType,strTestDataFile
  Dim strAliasName,strFileName,STP,strTimepoints,strText,strStartcolumn
  Dim i,FilePath,intcount,intj, intCol
  Dim objArray,oSTP_ExcelObj,objSTPXls,objActiveWB,netUIHWND,wndEXCEL7
  Dim intlastRow,lastColumn,inti,strTemp,objErrmsg,objOkClick,strStartRow,intFirstRow,strTimepts
  Dim Watchstr,Watchstr1,Time1,Time2,Watch1,File
  
  On Error Resume Next
  
  Watchstr=""
  Watchstr1=""
  iTestCaseFirstRow = 0

  Set Watch = HISUtils.StopWatch
  Set Watch1 = HISUtils.StopWatch
  Time1="12/12/2012"& " "& "00:00:00"
  Time1=aqConvert.StrToDateTime(Time1)
  Time2=Time1
  new_time=Time1
  
  strStartcolumn=0

  Const xlFillDefault = 0
  
  blnTimeRecorded = False
  
  STPSheetName= getSplitValue(strParameters,"STPSheetName") 
  strTestDataFile=getSplitValue(strParameters,"TestDataFile") 



 FilePath=aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")+ "\"+strTestDataFile +".xlsx"
 Set objSTPXls=GetObject(FilePath) 
 With objSTPXls
    With .Sheets(STPSheetName).Select
    End With

    With .WorkSheets(STPSheetName)
      intFirstRow=4 
      inti=3
      lastColumn=.UsedRange.Columns.Count
      lastColumn = .Cells(1, .Columns.Count).End(xlToLeft).Column
      
      
       For inti = 3 to lastColumn
          strText=.Cells(2,inti)
          .Cells(intFirstRow,inti).Select
          If isDate(strText)  then
              strStartcolumn=inti+1
              strColumnName = strStartcolumn
              Exit For
          End if 
         Next 
         

       
        strTimepoint =  Cint(.Cells(4,strStartcolumn).Text)+1
        strEndSeriesColumn=strStartcolumn-3
        strEndSeriesColumn=GetColumnName(strEndSeriesColumn)
        Delay(1000)   
  
    strEndSeriesColumn=strStartcolumn-3
    strEndSeriesColumn=GetColumnName(strEndSeriesColumn)
    Delay(1000)
  

    Set objSTPXls=GetObject(FilePath)     

    With .Sheets(STPSheetName).Select
    End With      
   With .WorkSheets(STPSheetName)
        intcount=0
        if strStartcolumn=0 then
        End if       
        For intj= strStartcolumn to lastColumn 
            if intcount<=9 then
              .Cells(intFirstRow,strStartcolumn).Select
              .Cells(intFirstRow,strStartcolumn).Text=strTimepoint
              .Cells(intFirstRow,strStartcolumn).Value=strTimepoint
              strTimepoint=strTimepoint + 1
              strStartcolumn= (strStartcolumn + 1)
            Else
              Exit For
            End if 
            intcount=intcount+1 
        Next
    End with    
    
      Dim strStartColumnName,StrEndColumnName
      strStartColumnName=GetColumnName(strColumnName)
      StrEndColumnName=GetColumnName(lastColumn)
        
      ''Copy the Series for 100 Cells  
      With .Sheets(STPSheetName).Select
      End With
      With .WorkSheets(STPSheetName)
         .Range(strStartColumnName & intFirstRow & ":" & StrEndColumnName & intFirstRow ).Select
           intTargetRow=intlastRow + 103
          .Range(strStartColumnName & intFirstRow & ":" & StrEndColumnName & intFirstRow).AutoFill  .Range(strStartColumnName & intFirstRow & ":" & StrEndColumnName & intTargetRow), xlFillDefault
      End With
  
  
      Call sClickUpload(2,strTestDataFile)
   
     
      If blnTimeRecorded = False Then
          Watch.Start
          Log.Message("Start Execution time: "  & now)
      End IF    
      


    Set File = Sys.Process("EXCEL", 2).Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Information"")",3000000)
    If File.Exists= True Then
        SYS.Keys "[Enter]"
        Watch.Stop
        blnTimeRecorded = True
      End If



      ''Question Msgbox
      strTemp="WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Question"")"
      Set File=Sys.Process("EXCEL", 2).WaitChild(strTemp,60000)
      If File.Exists Then
        Sys.Keys "Y"
      End If
              
      Log.Message("Time taken : "  & Watch.Tostring)     
         
         strTCRemarks = strTCRemarks & "<br />" & "DM Execution Time"
         strTCRemarks = strTCRemarks & "  " & Watch.Tostring & " - uploaded a DM successfully"

  End With
  End With 
  
End Sub

'################################################################################################################################################################33
