'USEUNIT DM
'USEUNIT EDGE_Util
'USEUNIT HTML
'USEUNIT Layout
'USEUNIT Master_Maintanance
'USEUNIT PRT_BMT
'USEUNIT Release_Schedule
'USEUNIT Series_Search
'USEUNIT Source
'USEUNIT SourceSchedule
'USEUNIT STP
'USEUNIT To_Do_Panel


Public strEnvi
'strEnvi = "Edge ( US Integration )"
  
Sub sLoadSource

On Error Resume Next

  Dim strTemp,strObject
  Dim ObjGridLoad,ObjGridClose,objEdgeMDI,objTemp,objEdge

  ''Opening Source  
  strTemp="WPFObject(""LayoutPanel"", """", 1)"
  Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  If objTemp.Exists = False then
    'Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("RibbonControl").WPFObject("RibbonSelectedPageControl", "", 1).WPFObject("RibbonPagesControl", "", 1).WPFObject("RibbonPageGroupsControl", "", 1).WPFObject("RibbonPageGroupControl", "", 1).WPFObject("BarItemLinkInfo", "", 1).WPFObject("BarButtonItemLinkControl", "", 1).Click
    'Delay 60000,"Opening Source.. Pls wait."
    strTemp="WPFObject(""ContentControl"", ""Source"", 1)"
    Set objSource=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    Call objSource.Click
    Call sEdgeProcessor
    strTemp="WPFObject(""LayoutPanel"", """", 1)"
    Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    If objTemp.Exists = False then
      strTestCaseResult = "FAIL"
      Exit Sub
    End If
  ElseIF objTemp.Exists = True then
    If objTemp.Caption<>"Source" then
      call sCloseSource()
      strTemp="WPFObject(""ContentControl"", ""Source"", 1)"
      Set objSource=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
      Call objSource.Click
      Call sEdgeProcessor
      strTemp="WPFObject(""LayoutPanel"", """", 1)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)    
      If objTemp.Exists = False then
        strTestCaseResult = "FAIL"
        Exit Sub
      End If
    End if 
  End If
  'Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).Click
  'Delay(5000)
  'Call sFindtree(strParameters,"Source")
  Call sFindtree
   
  Delay 2000,"Opening Source.. Pls wait.."
   ''Open STP and Full History
  Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 6).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Open Global STP", 2).Click
  'Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 6).WPFObject("BarButtonItemLinkControl", "", 1).Click
  Delay 3000,"Opening STP.. Pls wait.."
   ''Selecting Full History in STP
  Call sExcelFullHistory
  'Delay(5000)
  'strTCRemarks = "Opened STP Successfully"
  
  'msgbox "LoadSource is completed"
  Call sUpdateTimepoints
End Sub


'Sub sUpdateTimepoints(strParameters)
Sub sUpdateTimepoints

On Error Resume Next

  Dim STPSheetName,strTestDataFile
  Dim strAliasName,strFileName,STP,strTimepoints,strText,strStartcolumn
  Dim objArray,oSTP_ExcelObj,objSTPXls,objActiveWB,netUIHWND,wndEXCEL7
  Dim intlastRow,lastColumn,inti,strTemp,objErrmsg,objOkClick,i,FilePath,File
'  
'  STP= getSplitValue(strParameters,"STP") 
'  strTestDataFile=getSplitValue(strParameters,"TestDataFile") 
'  STPSheetName= getSplitValue(strParameters,"STPSheetName")
'  strTimepoints = getSplitValue(strParameters,"Timepoints")

    STPSheetName="A1_1"
    STP="Test Source 1"
    strTestDataFile="YYY-Automation-Test Source 1"
    strTimepoints="5"


    
  objArray = Sys.FindAllChildren("ProcessName","EXCEL", 1,True)
  For i=0 to ubound(objArray)
    log.Message objArray(i).FullName
    set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*" & strTestDataFile & "*",1,True)
    If oSTP_ExcelObj.Exists = True Then
      strAliasName=objArray(i).mappedname
      strFileName=oSTP_ExcelObj.WndCaption
      If instr(strFileName,"Microsoft Excel")>0 then
        strFileName=GetFileName(strFileName,"Microsoft Excel")
      Else
        strFileName=GetFileNameExcel13(strFileName," - Excel")
      End If
      FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")
      FilePath=FilePath & "\" & iif(instr(strFileName,"xlsx") > 0,strFileName,strFileName & ".xlsx")  
      log.Message FilePath
      Exit For
    Else
      log.Message "STP file not found in " & objArray(i).FullName
    End If
  Next
  
  Set objSTPXls=GetObject(FilePath)
  With objSTPXls
    With .Sheets(STPSheetName).Select
    End With

    With .WorkSheets(STPSheetName)
      Dim r
        Delay Status_Wait, "Finding last Row the Excel sheets.. Pls wait.."
        For r = 1 To .UsedRange.Rows.Count
          If IsEmpty(.UsedRange.Cells(r, 1).Value) = True AND (.UsedRange.Cells(r, 1).Text) ="" Then           
           intlastRow=r
           Exit For
          End  If 
        Next
        intlastRow=intlastRow-1
        inti=3
        lastColumn=.UsedRange.Columns.Count
         For inti = 3 to lastColumn
          strText=.Cells(2,inti)
          If isDate(strText)  then
              strStartcolumn=inti
              Exit For
          End if 
         Next 
'        if strStartcolumn <> lastColumn AND strStartcolumn < lastColumn then
'        .Cells(intlastRow,strStartcolumn).Value=strTimepoints-1
'        End if 
        strStartcolumn=strStartcolumn+1
        .Cells(intlastRow,strStartcolumn).Select
        .Cells(intlastRow,strStartcolumn).Value=strTimepoints-1
        .Cells(intlastRow,strStartcolumn+1).Value=strTimepoints
    
        Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND 
        ''Upload Series
        Call netUIHWND.Click(131, 69)
        'Delay 30000 , "Uploading.."
        
        ''Waiting for Msgbox
        Set File = Sys.Process("EXCEL", 2)._
          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Information"")",60000)._
          Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Information"", 1)",60000)._
          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
          Waitchild("WPFObject(""PART_InactiveBorder"")",60000)
          
           If File.Exists= True Then
            SYS.Keys "[Enter]"
            Delay 2000 , "Please Wait"
          End If
        
        ''Question Msgbox
        Set File = Sys.Process("EXCEL", 2)._
          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Question"")",60000)._
          Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Question"", 1)",60000)._
          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
          Waitchild("WPFObject(""PART_InactiveBorder"")",60000)
          
           If File.Exists= True Then
            Sys.Keys "N"
            Delay 2000 , "Please Wait"
          End If
          
              'Refresh Series
        With objSTPXls
          With .WorkSheets(STPSheetName)
               .Cells.Select
                Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND 
                Call netUIHWND.Click(296, 72)
                Call sExcelFullHistory
                .Cells(intlastRow,strStartcolumn).Select
          End With
        End With
  
    End With
  End With 
  log.Message "Updated Timepoints Successfully " 
  strTCRemarks = "Updated Timepoints Successfully"
  
  'objSTPXls.Close
    'objSTPXls.Close

  objArray = Sys.FindAllChildren("ProcessName","EXCEL", 5,True)
  For i=0 to ubound(objArray)
    log.Message objArray(i).FullName
    set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*RUN*",1,True)
    If oSTP_ExcelObj.Exists = True Then
    Else
      objArray(i).Close
    End If
  Next
  Delay(5000)
  'Set objSTPXls = Nothing
  Call SClosesource()
End Sub 

'Sub sFindTree(strParameters,sLoadGrid)
Sub sFindTree

On Error Resume Next
  
  Dim strSource_Name,strQC_Name,strWorkspace_Name
  Dim blnFlag,GridControl,GridSourceTree
  Dim intTotNodeCnt,intI,intJ,intK,intRow
  
  blnFlag = True
  
'  strSource_Name=getSplitValue(strParameters,"SOURCE")''Source Name
'  strQC_Name=getSplitValue(strParameters,"QCNAME")''QC Name
'  strWorkspace_Name=getSplitValue(strParameters,"WORKSPACE")''Workspace Name 
  
  strSource_Name="Test"
  strQC_Name="Automation"
  strWorkspace_Name="Test Source 1"
  sLoadGrid="Source"
  
  Delay(2000)
  ''Setting grid Objects
  if sLoadGrid="New" then 
    Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("LayoutTreeControl").WPFObject("LayoutTreeListView")
    Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("LayoutTreeControl")
  Elseif sLoadGrid="Edit" then 
    Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("LayoutTreeListControl").WPFObject("LayoutTreeListView")
    Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("LayoutTreeListControl")
  Elseif sLoadGrid="Source" then 
    strTemp="WPFObject(""SourceTreeListView"")"
    Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    strTemp="WPFObject(""SourceTreeControl"")"
    Set GridSourceTree=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    'Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceTreeControl").WPFObject("SourceTreeListView")
    'Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceTreeControl")
  End if 
  Delay(5000)
  ''First level(Source Name)
  intTotNodeCnt=GridControl.Nodes_2.Count
  For intI=0 to intTotNodeCnt-1         
      If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
        GridControl.Nodes_2.Item(intI).ExpandAll
        log.Message "First Level- " & GridControl.Nodes_2.Item(intI).Content.Description       
        blnFlag=False  
        Exit For
      End If
  Next
  If blnFlag = True then
    strTCRemarks="Source Node not found"
    strTestCaseResult="FAIL"
    Exit Sub
  End If
  Delay(5000)
  blnFlag = True 
  ''Second level(QC Name)
  intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
  For intJ=0 to intTotNodeCnt-1
    If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strQC_Name) then
      GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
      log.Message "Second Level- " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description 
      blnFlag = False 
      Exit For
    End If
  Next
  If blnFlag = True then
    strTCRemarks="QC Name not found"
    strTestCaseResult="FAIL"
    Exit Sub
  End If
  Delay(5000)
  blnFlag = True    
  ''Third Level(Workspace Name)  
  intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
  For intK=0 to intTotNodeCnt-1
    If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strWorkspace_Name) then
      GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).ExpandAll
      intRow =GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
      if sLoadGrid="New" then 
        Call GridControl.ClearSelectionCore
        Call GridControl.FocusViewAndRow(GridControl,intRow)
        GridControl.SetFocusOnCurrentItem
        Call GridControl.SelectRowCore(intRow)
      elseif sLoadGrid="Edit" then 
        Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("LayoutTreeListControl").WPFObject("LayoutTreeListView").WPFObject("HierarchyPanel", "", 1).WPFObject("GridRow", "", 3).WPFObject("ScrollablePart").WPFObject("CellItemsControl", "", 1).WPFObject("GridCellContentPresenter", "", 1).WPFObject("TextEdit", "", 1).Click
      elseif sLoadGrid="Source" then
        Call GridControl.ClearSelectionCore
        Call GridControl.FocusViewAndRow(GridControl,intRow)
        GridControl.SetFocusOnCurrentItem
        Call GridControl.SelectRowCore(intRow)
      End if  
      log.Message "Third Level- " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description     
      blnFlag = False
      Exit For   
    End If 
  Next
  Delay(2000)
  If blnFlag = True then
    strTCRemarks="Workspace not found"
    strTestCaseResult="FAIL"
    Exit Sub
  End If
End Sub

'Sub sReadCDMTree(strParameters)
Sub sReadCDMTree

On Error Resume Next 

  Dim objGrid,intRow,strTopic,intSectionCount,intI,intJ,intK,strSearch1,strs,strSearch2,strSearch3
  Dim FirstObsDate,LastObsDate,NumOfTP

'    strSearch1=getSplitValue(strParameters,"SEARCH1")
'    strSearch2=getSplitValue(strParameters,"SEARCH2")
'    strSearch3=getSplitValue(strParameters,"SEARCH3")
    DescText="9-22-2017 3_44_11 PM"

    strSearch1="Z-Testing Topic(IT-use only)"
    strSearch2="Automation"
    strSearch3="Sample1"

    Set objGrid=Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMMain_MDIParent").WinFormsObject("MdiClient", "").WinFormsObject("Layout_Form").WinFormsObject("Panel_Rebar").WinFormsObject("GridEX_Tree")
    intRow=objGrid.get_RowCount

    ''Expanding Topic
    For IntI=0 to intRow-1
        objGrid.set_Row(intI)
        strTopic=objGrid.CurrentRow.DataRow.Row.TP_WSValue_Name.ToString
        If strTopic=strSearch1 then        
            objGrid.CurrentRow.set_Expanded(True)
            Exit For
        End If
    Next
    ''Expanding Section
    For IntJ=1 to intRow
        objGrid.set_Row(intI + intJ)
        strTopic=objGrid.CurrentRow.DataRow.Row.SC_WSValue_Name.ToString
        If strTopic=strSearch2 then        
            objGrid.CurrentRow.set_Expanded(True)
            Exit For
        End If
    Next
    ''Expanding Section Table
    For IntK=1 to intRow
        objGrid.set_Row(intI + intJ + intK)
        strTopic=objGrid.CurrentRow.DataRow.Row.TB_WSValue_Name.ToString
        If strTopic=DescText then        
            objGrid.CurrentRow.set_Expanded(True)
            objGrid.set_Row(intI + intJ + intK+1)
            intId=objGrid.CurrentRow.DataRow.Row.SR_SeriesId
            FirstObsDate=objGrid.CurrentRow.DataRow.Row.SR_DisplayStartDate
            LastObsDate=objGrid.CurrentRow.DataRow.Row.SR_DisplayEndDate
            NumOfTP=objGrid.CurrentRow.DataRow.Row.SR_NumPoints
            Exit For
        End If
    Next

    Delay 5000,"New Table Created"
    ''Closing
    sys.Keys "~[F4]"
    Set objTemp=Sys.WaitChild("Process(""ISI.CeicDataManager.Startup"")",1200000)
    If objTemp.Exists = True then
        strTemp="WinFormsObject(""CDMYesNoDialog"")"
        Set objTemp=Sys.Process("ISI.CeicDataManager.Startup").WaitChild(strTemp,1200000)
        If objTemp.Exists = True then
          Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMYesNoDialog").WinFormsObject("TableLayoutPanel1").WinFormsObject("UiButton_Yes").Click
        Else
          strTestCaseResult = "ABORT"
  	      strTCRemarks="CDM Closing Dialog box not found"
          Exit Sub  
        End If
    Else
        strTestCaseResult = "ABORT"
	      strTCRemarks="CDM Dialog box not found"
        Exit Sub  
    End If
    Delay 15000,"Closing CDM"
    strTCRemarks="FirstObsDate="&FirstObsDate&"   LastObsDate="&LastObsDate&"   NumOfTP="&NumOfTP
End Sub

'Sub sDeleteTimepoints(strParameters)
Sub sDeleteTimepoints

On Error Resume Next

  Dim STPSheetName,strTestDataFile
  Dim strAliasName,strFileName,STP,strTimepoints,strText,strStartcolumn
  Dim objArray,oSTP_ExcelObj,objSTPXls,objActiveWB,netUIHWND,wndEXCEL7
  Dim intlastRow,lastColumn,inti,strTemp,objErrmsg,objOkClick,i,FilePath,File
  
'  STP= getSplitValue(strParameters,"STP") 
'  strTestDataFile=getSplitValue(strParameters,"TestDataFile") 
'  STPSheetName= getSplitValue(strParameters,"STPSheetName")
'  strTimepoints = getSplitValue(strParameters,"Timepoints")
  STP= "Test Source 1"
  strTestDataFile="YYY-Automation-Test Source 1"
  STPSheetName= "A1_1"
  strTimepoints = "5"
    
  objArray = Sys.FindAllChildren("ProcessName","EXCEL", 1,True)
  For i=0 to ubound(objArray)
    log.Message objArray(i).FullName
    set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*" & strTestDataFile & "*",1,True)
    If oSTP_ExcelObj.Exists = True Then
      strAliasName=objArray(i).mappedname
      strFileName=oSTP_ExcelObj.WndCaption
      If instr(strFileName,"Microsoft Excel")>0 then
        strFileName=GetFileName(strFileName,"Microsoft Excel")
      Else
        strFileName=GetFileNameExcel13(strFileName," - Excel")
      End If
      FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")
      FilePath=FilePath & "\" & iif(instr(strFileName,"xlsx") > 0,strFileName,strFileName & ".xlsx")  
      log.Message FilePath
      Exit For
    Else
      log.Message "STP file not found in " & objArray(i).FullName
    End If
  Next
  
  Set objSTPXls=GetObject(FilePath)
  With objSTPXls
    With .Sheets(STPSheetName).Select
    End With

    With .WorkSheets(STPSheetName)
      Dim r
        delay Status_Wait, "Finding last Row the Excel sheets.. Pls wait.."
        For r = 1 To .UsedRange.Rows.Count
          If IsEmpty(.UsedRange.Cells(r, 1).Value) = True AND (.UsedRange.Cells(r, 1).Text) ="" Then           
           intlastRow=r
           Exit For
          End  If 
        Next
        intlastRow=intlastRow-1
        inti=3
        lastColumn=.UsedRange.Columns.Count
        For inti = 3 to lastColumn
          strText=.Cells(2,inti)
          If isDate(strText) then
              strStartcolumn=inti
              Exit For
          End if 
         Next 
         
         
         Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND 
        .Cells(intlastRow,strStartcolumn+1).Select
        Call netUIHWND.Click(247, 111)
        Call netUIHWND.Click(53, 93)
        .Cells(intlastRow,strStartcolumn+6).Select
        Call netUIHWND.Click(247, 111)
        Call netUIHWND.Click(53, 93)
        Delay 3000,"Mark Good"
'        .Cells(intlastRow,lastColumn-1).Value=strTimepoints-1
        ''Mark Good
          Delay 1000,"Mark Good..."
          With objSTPXls
            With .WorkSheets(STPSheetName)
                 .Cells.Select
            End With
          End With
          Call netUIHWND.Click(32, 92)
       
        ''Upload Series
        Call netUIHWND.Click(131, 69)
        'Delay 25000 , "Uploading.."
        
        ''Waiting for Msgbox
        Set File = Sys.Process("EXCEL", 2)._
          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Information"")",600000)._
          Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Information"", 1)",600000)._
          Waitchild("WPFObject(""Grid"", """", 1)",600000)._
          Waitchild("WPFObject(""FloatingContainerBorder"")",600000)._
          Waitchild("WPFObject(""FloatingContainerBackground"")",600000)._
          Waitchild("WPFObject(""Grid"", """", 1)",600000)._
          Waitchild("WPFObject(""FloatingContainerBody"")",600000)._
          Waitchild("WPFObject(""Grid"", """", 1)",600000)._
          Waitchild("WPFObject(""Grid"", """", 1)",600000)._
          Waitchild("WPFObject(""PART_ContainerContent"")",600000)
          
      If File.Exists= True Then
        SYS.Keys "[Enter]"
        End If
        
        ''Question Msgbox
        Set File = Sys.Process("EXCEL", 2)._
          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Question"")",60000)._
          Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Question"", 1)",60000)._
          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
          Waitchild("WPFObject(""FloatingContainerBorder"")",60000)._
          Waitchild("WPFObject(""FloatingContainerBackground"")",60000)._
          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
          Waitchild("WPFObject(""FloatingContainerBody"")",60000)._
          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
          Waitchild("WPFObject(""PART_ContainerContent"")",60000)
        If File.Exists Then
          Sys.Keys "N"
        End If
              'Refresh Series
        With objSTPXls
          With .WorkSheets(STPSheetName)
               .Cells.Select
                Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND 
                Call netUIHWND.Click(296, 72)
                Call sExcelFullHistory
                .Cells(intlastRow,strStartcolumn+1).Select       
          End With
        End With
        strTCRemarks = "Deleted Timepoints Successfully"
    End With
  End With 
  
  'objSTPXls.Close
  objArray = Sys.FindAllChildren("ProcessName","EXCEL", 5,True)
  For i=0 to ubound(objArray)
    log.Message objArray(i).FullName
    set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*RUN*",1,True)
    If oSTP_ExcelObj.Exists = True Then
    Else
      objArray(i).Close
    End If
  Next
  Delay 10000,"Pls Wait..."
  'Set objSTPXls = Nothing
  Call SClosesource()
End Sub 


'If strTopic=DescText then        
'            objGrid.CurrentRow.set_Expanded(True)
'            objGrid.set_Row(intI + intJ + intK+1)
'            intId=objGrid.CurrentRow.DataRow.Row.SR_SeriesId
'           ' Exit For
'        End If

Sub sSourceWorkSpacevwrBM()

    Dim strObject,objEdgeMDI,strTemp,objTemp,GridControl,intRowcnt,intI,intRow,strTempsource,objTempSource
    Dim Watchstr,Watchstr1,Time1,Time2,Watch1,strWorkspaceName,strWorkspaceNameActual
    Dim i,objText
    
On Error Resume Next
    strWorkspaceName = "zvcdefr"
    Watchstr=""
    Watchstr1=""
    iTestCaseFirstRow = 0

    Set Watch = HISUtils.StopWatch
    Set Watch1 = HISUtils.StopWatch
  
    Time1="12/12/2012"& " "& "00:00:00"
    Time1=aqConvert.StrToDateTime(Time1)
    Time2=Time1
    new_time=Time
    blnTimeRecorded = False
  
    'strObject = "WPFObject(""HwndSource: RibbonWindow"")"
    Set objEdgeMDI = Sys.Process("EdgeClient")'.WaitChild(strObject, 600000)
    If objEdgeMDI.Exists then
      strTemp="WPFObject(""TextBlock"", ""Layout"", 1)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objTemp.Exists = False then
        strTemp="WPFObject(""ContentControl"", ""Source Workspace"", 1)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        If objTemp.Exists = True then
          objTemp.Click
        End If
        Call sEdgeProcessor
        log.Message "Opening Source Workspace.."
      Else
        log.Message "Source Workspace is opened"
      End If
  
      ''Selecting Records
      strTemp="WPFObject(""PendingChangeGridControl"")"
      Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      intRowcnt=GridControl.wRowCount
      'For intI=0 to intRowcnt-1
        intRow=GridControl.FindRow(1,"Workspace Name")
        Call GridControl.ClickCell(0,1)
      'Next 
      
    Else
      log.Message "RibbonWindow not found"
    End If
    
    For i=0 to intRowcnt-1
        strWorkspaceNameActual = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Production )").WPFObject("Shell", "Edge ( US Production )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText
        If Ucase(Trim(strWorkspaceNameActual))= Ucase(Trim(strWorkspaceName)) Then 
           strTemp="WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"
            Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
            'Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 2).WPFObject("BarButtonItemLinkControl", "", 1).FindChild("Name",strTemp,16,True)
            If objTemp.Exists = True then
              objTemp.Click
            End If 
      
            strTemp="WPFObject(""PART_ContainerContent"")"
            Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.")'.FindChild("Name",strTemp,50,True)
           ' Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: WindowContentHolder", "Please Confirm.").FindChild("Name",strTemp,50,True)
            'strTemp="WPFObject(""DXMessageBox"", """", 1)"
            'Set objConfirm=objConfirm.WaitChild(strTemp,300000)
            If objConfirm.Exists = True then
            objConfirm.Click
              sys.Keys("Y")
              If blnTimeRecorded = False Then
                Watch.Start
                Log.Message("Start Execution time: "  & now)
              End IF
            End if 
        End If
      Next
 
'        intI = 0
'        Do Until intI > 3000
'          intI = intI + 1
'          Delay(10000)
        'Set objConfirm = Sys.Process("EdgeClient").Find("ClrClassName","ContentPresenter", 50,True)
      'strTemp="WPFObject(""PART_ContainerContent"")"
      'Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Upload Workspace").FindChild("Name",strTemp,50,True)
      Set objConfirm= Sys.Process("EdgeClient")._
      Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Upload Workspace"")",600000)'._
'      Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Upload Workspace"", 1)",600000)._
'      Waitchild("WPFObject(""Grid"", """", 1)",600000)._
'      Waitchild("WPFObject(""FloatingContainerBorder"")",600000)._
'      Waitchild("WPFObject(""FloatingContainerBackground"")",600000)._
'      Waitchild("WPFObject(""Grid"", """", 1)",600000)._
'      Waitchild("WPFObject(""FloatingContainerBody"")",600000)._
'      Waitchild("WPFObject(""Grid"", """", 1)",600000)._
'      Waitchild("WPFObject(""Grid"", """", 1)",600000)._
'      Waitchild("WPFObject(""PART_ContainerContent"")",60000)
      
         
         
          If objConfirm.Exists = True Then 
            'If objConfirm.Focusable=True  then
                  objConfirm.Click
                  SYS.Keys("O")
                  'SYS.Keys "[Enter]"
                  Watch.Stop
                  blnTimeRecorded = True
'                  Exit For 
'                Next 
             ' Exit Do
           ' End  If
          End if       
'        Loop
       
      Log.Message("End Source Execution time: "  & now)
      Log.Message("Source finished. Execution time: " & Watch.Tostring)
      strTCRemarks = "Source Execution Time"
      strTCRemarks = strTCRemarks & "  " & Watch.Tostring & " - uploaded a Source successfully"
      Call sEdgeProcessor
       ' Call SClosesource()
        Call SClosesource()
End Sub
'Sub sSourceWorkSpacevwrBM()
'
'    Dim strObject,objEdgeMDI,strTemp,objTemp,GridControl,intRowcnt,intI,intRow,strTempsource,objTempSource
'    Dim Watchstr,Watchstr1,Time1,Time2,Watch1
'    Dim i,objText
'    
'On Error Resume Next
'
'    Watchstr=""
'    Watchstr1=""
'    iTestCaseFirstRow = 0
'
'    Set Watch = HISUtils.StopWatch
'    Set Watch1 = HISUtils.StopWatch
'  
'    Time1="12/12/2012"& " "& "00:00:00"
'    Time1=aqConvert.StrToDateTime(Time1)
'    Time2=Time1
'    new_time=Time
'  
'    strObject = "WPFObject(""HwndSource: RibbonWindow"")"
'    Set objEdgeMDI = Sys.Process("EdgeClient").WaitChild(strObject, 600000)
'    If objEdgeMDI.Exists then
'      strTemp="WPFObject(""TextBlock"", ""Layout"", 1)"
'      Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).FindChild("Name",strTemp,14,True)
'      If objTemp.Exists = False then
'        strTemp="WPFObject(""ContentControl"", ""Source Workspace"", 1)"
'        Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).FindChild("Name",strTemp,16,True)
'        If objTemp.Exists = True then
'          objTemp.Click
'        End If
'        Call sEdgeProcessor
'        log.Message "Opening Source Workspace.."
'      Else
'        log.Message "Source Workspace is opened"
'      End If
'  
'      ''Selecting Records
'      strTemp="WPFObject(""PendingChangeGridControl"")"
'      Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
'      intRowcnt=GridControl.wRowCount
'      'For intI=0 to intRowcnt-1
'        intRow=GridControl.FindRow(1,"Workspace Name")
'        Call GridControl.ClickCell(0,1)
'      'Next 
'      
'    Else
'      log.Message "RibbonWindow not found"
'    End If
'    
'     strObject = "WPFObject(""HwndSource: RibbonWindow"")"
'    Set objEdgeMDI = Sys.Process("EdgeClient").WaitChild(strObject, 600000)
'    If objEdgeMDI.Exists then
'      strTemp="WPFObject(""TextBlock"", ""Layout"", 1)"
'      Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).FindChild("Name",strTemp,14,True)
'      If objTemp.Exists = False then
'        strTemp="WPFObject(""ContentControl"", ""Source Workspace"", 1)"
'        Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).FindChild("Name",strTemp,16,True)
'        If objTemp.Exists = True then
'          objTemp.Click
'        End If
'        Call sEdgeProcessor
'        log.Message "Opening Source Workspace.."
'      Else
'        log.Message "Source Workspace is opened"
'      End If
'  
'      ''Selecting Records
'      strTemp="WPFObject(""PendingChangeGridControl"")"
'      Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).FindChild("Name",strTemp,60,True)
'      intRowcnt=GridControl.wRowCount
'      'For intI=0 to intRowcnt-1
'        intRow=GridControl.FindRow(1,"Workspace Name")
'        Call GridControl.ClickCell(1,1)
'     ' Next 
'      
'    Else
'      log.Message "RibbonWindow not found"
'    End If
'    
'     strTemp="WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"
'      Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 2).WPFObject("BarButtonItemLinkControl", "", 1).FindChild("Name",strTemp,16,True)
'      If objTemp.Exists = True then
'        objTemp.Click
'      End If 
'      
'      strTemp="WPFObject(""PART_ContainerContent"")"
'      Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: WindowContentHolder", "Please Confirm.").FindChild("Name",strTemp,50,True)
'      strTemp="WPFObject(""DXMessageBox"", """", 1)"
'      Set objConfirm=objConfirm.WaitChild(strTemp,300000)
'      If objConfirm.Exists = True then
'        sys.Keys("^Y")
'        If blnTimeRecorded = False Then
'          Watch.Start
'          Log.Message("Start Execution time: "  & now)
'        End IF
'      End if 
'    
'      strTemp="WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"
'      Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 2).WPFObject("BarButtonItemLinkControl", "", 1).FindChild("Name",strTemp,16,True)
'      If objTemp.Exists = True then
'        objTemp.Click
'      End If
'      
'      strTemp="WPFObject(""PART_ContainerContent"")"
'      Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: WindowContentHolder", "Please Confirm.").WPFObject("WindowContentHolder", "Please Confirm.", 1).FindChild("Name",strTemp,50,True)
'      'Sys.Process("EdgeClient").WPFObject("HwndSource: WindowContentHolder", "Please Confirm.").WPFObject("WindowContentHolder", "Please Confirm.", 1).WPFObject("NonLogicalDecorator", "", 1).WPFObject("ThemedManagedContentPresenter", "", 1).WPFObject("Grid", "", 1).WPFObject("FloatingContainerBorder").WPFObject("FloatingContainerBackground").WPFObject("Grid", "", 1).WPFObject("FloatingContainerBody").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent")
'      strTemp="WPFObject(""DXMessageBox"", """", 1)"
'      Set objConfirm=objConfirm.WaitChild(strTemp,300000)
'      If objConfirm.Exists = True then
'        sys.Keys("^Y")
'        If blnTimeRecorded = False Then
'          Watch1.Start
'          Log.Message("Start First source Execution time: "  & now)
'        End IF 
'      End if
' 
'        intI = 0
'        Do Until intI > 3000
'          intI = intI + 1
'          Delay(5000)
'        Set objConfirm = Sys.Process("EdgeClient").Find("ClrClassName","DXMessageBox", 50,True)
'          If objConfirm.Exists = True Then 
'            If objConfirm.Focusable=True  then
''               objText = Sys.Process("EdgeClient").FindAllChildren("ClrClassName","DXMessageBox", 50,True)
''                For i=0 to ubound(objText)
''                  log.Message objText(i).FullName
''                  log.Message objText(i).Name
'                  'objText(i).Click
'                  SYS.Keys "[Enter]"
'                  
'                  Watch.Stop
'                  blnTimeRecorded = True
''                  Exit For 
''                Next 
'              Exit Do
'            End  If
'          End if       
'        Loop
'       
'      Log.Message("End First Source Execution time: "  & now)
'      Log.Message("First Source finished. Execution time: " & Watch.Tostring)
'      strTCRemarks = strTCRemarks & "<br />" & "First Source Execution Time"
'      strTCRemarks = strTCRemarks & "  " & Watch.Tostring & " - uploaded a Source successfully"
'      
'      strTemp="WPFObject(""PART_ContainerContent"")"
'  
'      intI = 0
'        Do Until intI > 5000
'          intI = intI + 1
'          Delay(5000)
'        Set objConfirm = Sys.Process("EdgeClient").Find("ClrClassName","DXMessageBox", 50,True)
'          If objConfirm.Exists = True Then 
'            If objConfirm.Focusable=True then
'               objText = Sys.Process("EdgeClient").FindAllChildren("ClrClassName","DXMessageBox", 50,True)
'                For i=0 to ubound(objText)
'                  log.Message objText(i).FullName
'                  log.Message objText(i).Name
'                  objText(i).Click 
'                  SYS.Keys "[Enter]"
'                  Watch1.Stop
'                  blnTimeRecorded = True
'                  Exit For 
'                Next 
'              Exit Do
'            End  If
'          End if       
'        Loop
'  
'        Log.Message("End Second Execution time: "  & now)
'        Log.Message("Second Source finished. Execution time: " & Watch1.Tostring)
'        
'        strTCRemarks = strTCRemarks & "<br />" & "Second Source Execution Time"
'        strTCRemarks = strTCRemarks & "  " & Watch1.Tostring & " - uploaded a Source successfully"
'        
'        Call sEdgeProcessor
'        Call SClosesource()
'        Call SClosesource()
'End Sub

'Sub sSourceWorkSpacevwrBM1(strParameters)
Sub sSourceWorkSpacevwrBM1()

    Dim strObject,objEdgeMDI,strTemp,objTemp,GridControl,intRowcnt,intI,intRow,strTempsource,objTempSource
    Dim Watchstr,Watchstr1,Time1,Time2,Watch1
    Dim i,objText
    
On Error Resume Next
    strLocalname=getSplitValue(strParameters,"WORKSPACENAME")
    strLocalname="UIT1_1"
    Watchstr=""
    Watchstr1=""
    iTestCaseFirstRow = 0

    Set Watch = HISUtils.StopWatch
    Set Watch1 = HISUtils.StopWatch
  
    Time1="12/12/2012"& " "& "00:00:00"
    Time1=aqConvert.StrToDateTime(Time1)
    Time2=Time1
    new_time=Time
    blnTimeRecorded = False
  
    'strObject = "WPFObject(""HwndSource: RibbonWindow"")"
    Set objEdgeMDI = Sys.Process("EdgeClient")'.WaitChild(strObject, 600000)
    If objEdgeMDI.Exists then
      strTemp="WPFObject(""TextBlock"", ""Layout"", 1)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objTemp.Exists = False then
        strTemp="WPFObject(""ContentControl"", ""Source Workspace"", 1)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        If objTemp.Exists = True then
          objTemp.Click
        End If
        Call sEdgeProcessor
        log.Message "Opening Source Workspace.."
      Else
        log.Message "Source Workspace is opened"
      End If
  
      ''Selecting Records
      strTemp="WPFObject(""PendingChangeGridControl"")"
      Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      intRowcnt=GridControl.wRowCount
      'For intI=0 to intRowcnt-1
        intRow=GridControl.FindRow(1,"Workspace Name")
        Call GridControl.ClickCell(0,1)
      'Next 
      
    Else
      log.Message "RibbonWindow not found"
    End If
     
     r=0 
  For i=1 to intRowcnt  
    Call GridControl.ClickCell(r,1)   
    strWorkspaceNameActual = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Production )").WPFObject("Shell", "Edge ( US Production )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", i).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText
    If InStr(strWorkspaceNameActual,strLocalname)> 0 Then    
     strTemp="WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      'Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 2).WPFObject("BarButtonItemLinkControl", "", 1).FindChild("Name",strTemp,16,True)
      If objTemp.Exists = True then
        objTemp.Click
        Exit for
      End If 
     End If
     r=r+1
  Next  
      strTemp="WPFObject(""PART_ContainerContent"")"
      Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.")'.FindChild("Name",strTemp,50,True)
     ' Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: WindowContentHolder", "Please Confirm.").FindChild("Name",strTemp,50,True)
      'strTemp="WPFObject(""DXMessageBox"", """", 1)"
      'Set objConfirm=objConfirm.WaitChild(strTemp,300000)
      If objConfirm.Exists = True then
      objConfirm.Click
        sys.Keys("Y")
        If blnTimeRecorded = False Then
          Watch.Start
          Log.Message("Start Execution time: "  & now)
        End IF
      End if 
 
      
 
'        intI = 0
'        Do Until intI > 3000
'          intI = intI + 1
'          Delay(10000)
        'Set objConfirm = Sys.Process("EdgeClient").Find("ClrClassName","ContentPresenter", 50,True)
      'strTemp="WPFObject(""PART_ContainerContent"")"
      'Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Upload Workspace").FindChild("Name",strTemp,50,True)
      Set objConfirm= Sys.Process("EdgeClient")._
      Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Upload Workspace"")",600000)'._
'      Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Upload Workspace"", 1)",600000)._
'      Waitchild("WPFObject(""Grid"", """", 1)",600000)._
'      Waitchild("WPFObject(""FloatingContainerBorder"")",600000)._
'      Waitchild("WPFObject(""FloatingContainerBackground"")",600000)._
'      Waitchild("WPFObject(""Grid"", """", 1)",600000)._
'      Waitchild("WPFObject(""FloatingContainerBody"")",600000)._
'      Waitchild("WPFObject(""Grid"", """", 1)",600000)._
'      Waitchild("WPFObject(""Grid"", """", 1)",600000)._
'      Waitchild("WPFObject(""PART_ContainerContent"")",60000)
      
         
         
          If objConfirm.Exists = True Then 
            'If objConfirm.Focusable=True  then
                  objConfirm.Click
                  SYS.Keys("O")
                  'SYS.Keys "[Enter]"
                  Watch.Stop
                  blnTimeRecorded = True
'                  Exit For 
'                Next 
             ' Exit Do
           ' End  If
          End if       
'        Loop
       
      Log.Message("End Source Execution time: "  & now)
      Log.Message("Source finished. Execution time: " & Watch.Tostring)
      strTCRemarks = "Source Execution Time"
      strTCRemarks = strTCRemarks & "  " & Watch.Tostring & " - uploaded a Source successfully"
      Call sEdgeProcessor
       ' Call SClosesource()
        Call SClosesource()
End Sub

Sub sLayoutWorkSpacevwrBM()

    Dim strObject,objEdgeMDI,strTemp,objTemp,GridControl,intRowcnt,intI,intRow
    Dim Watchstr,Watchstr1,Time1,Time2,Watch1,strLocalname
    Dim i,objText
    
On Error Resume Next
  strLocalname=getSplitValue(strParameters,"WORKSPACENAME")
  strLocalname = "UIT1_1"
    Watchstr=""
    Watchstr1=""
    iTestCaseFirstRow = 0

    Set Watch = HISUtils.StopWatch
    Set Watch1 = HISUtils.StopWatch
    
    blnTimeRecorded = False
  
    Time1="12/12/2012"& " "& "00:00:00"
    Time1=aqConvert.StrToDateTime(Time1)
    Time2=Time1
    new_time=Time
    
    'strObject = "WPFObject(""HwndSource: RibbonWindow"")"
    Set objEdgeMDI = Sys.Process("EdgeClient")'.WaitChild(strObject, 600000)
    If objEdgeMDI.Exists then
      strTemp="WPFObject(""TextBlock"", ""Layout"", 1)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objTemp.Exists = False then
        strTemp="WPFObject(""ContentControl"", ""Layout Workspace"", 1)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        If objTemp.Exists = True then
          objTemp.Click
        End If
        Call sEdgeProcessor
        log.Message "Opening Layout Workspace.."
      Else
        log.Message "Layout Workspace is opened"
      End If
  
      ''Selecting Records
      strTemp="WPFObject(""PendingChangeGridControl"")"
      Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      intRowcnt=GridControl.wRowCount
      'For intI=0 to intRowcnt-1
        intRow=GridControl.FindRow(1,"Workspace Name")
        Call GridControl.ClickCell(0,1)
      'Next 
      
    Else
      log.Message "RibbonWindow not found"
    End If
    
   r=0 
  For i=1 to intRowcnt  
    Call GridControl.ClickCell(r,1)   
    strWorkspaceNameActual = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Production )").WPFObject("Shell", "Edge ( US Production )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", i).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText
    If InStr(strWorkspaceNameActual,strLocalname)> 0 Then    
     strTemp="WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      'Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 2).WPFObject("BarButtonItemLinkControl", "", 1).FindChild("Name",strTemp,16,True)
      If objTemp.Exists = True then
        objTemp.Click
        Exit for
      End If 
     End If
     r=r+1
  Next  
      
      strTemp="WPFObject(""PART_ContainerContent"")"
      Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.")'.FindChild("Name",strTemp,50,True)
'      strTemp="WPFObject(""DXMessageBox"", """", 1)"
'      Set objConfirm=objConfirm.WaitChild(strTemp,300000)
      If objConfirm.Exists = True then
        objConfirm.Click
        sys.Keys("Y")
        If blnTimeRecorded = False Then
          Watch.Start
          Log.Message("Start Execution time: "  & now)
        End IF
      End if 
    
'        intI = 0
'        Do Until intI > 5000
'          intI = intI + 1
'          Delay(1000)
'        Set objConfirm = Sys.Process("EdgeClient").Find("ClrClassName","ContentPresenter", 50,True)
'          If objConfirm.Exists = True Then 
'            If objConfirm.Focusable=True  then
'                  SYS.Keys "[Enter]" 
'                  Watch.Stop
'                  blnTimeRecorded = True
'              Exit Do
'            End  If
'          End if       
'        Loop
'       

 Set objConfirm= Sys.Process("EdgeClient")._
      Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Upload Workspace"")",600000)'._
'      Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Upload Workspace"", 1)",600000)._
'      Waitchild("WPFObject(""Grid"", """", 1)",600000)._
'      Waitchild("WPFObject(""FloatingContainerBorder"")",600000)._
'      Waitchild("WPFObject(""FloatingContainerBackground"")",600000)._
'      Waitchild("WPFObject(""Grid"", """", 1)",600000)._
'      Waitchild("WPFObject(""FloatingContainerBody"")",600000)._
'      Waitchild("WPFObject(""Grid"", """", 1)",600000)._
'      Waitchild("WPFObject(""Grid"", """", 1)",600000)._
'      Waitchild("WPFObject(""PART_ContainerContent"")",60000)
              
      If objConfirm.Exists = True Then 
        objConfirm.Click
        SYS.Keys("O")
        Watch.Stop
        blnTimeRecorded = True
      End if       

      Log.Message("Layout finished. Execution time: " & Watch.Tostring)
            
      strTCRemarks = strTCRemarks & "<br />" & "Layout Execution Time"
      strTCRemarks = strTCRemarks & "  " & Watch.Tostring & " - uploaded a Layout successfully"
      
        Call sEdgeProcessor
        'Call sCloseLayout
        Call sCloseLayout

End Sub


'Sub sLaunchCDM(strParameters)

Sub sLaunchCDM()

On Error Resume Next

    Dim objTemp,poProcess,strTemp,objtxtusr,objtxtpass,strUserName,strPassword
    'Dim strEnvi
    
    strEnvi= "Edge ( US Production )" 
    
    If Ucase(Trim(strRequiredTCName))=Ucase(Trim("TC_RELEASESCHEDULE_04")) and Ucase(Trim(strEnvi)) = Ucase(Trim("Edge ( US Production )"  )) Then
      Exit Sub
    End If    
    
     strUserName="gnarayana"
     strPassword="Isi@222111"
  
'    strUserName=getSplitValue(strParameters,"USERNAME")
'    strPassword=getSplitValue(strParameters,"PASSWORD")

    set objTemp = Sys.WaitProcess("ISI.CeicDataManager.Startup",2000)
    If objTemp.exists = False then
      Set wshShell = CreateObject ("WSCript.shell")
    	Set poProcess = wshShell.Exec("""C:\Program Files (x86)\ISI Emerging Markets\CEIC Data Manager\ISI.CeicDataManager.Startup.exe""")
    End If
    Set objTemp = Sys.WaitProcess("ISI.CeicDataManager.Startup",120000)
    If objTemp.exists = True then    
      cdm_time1=aqdatetime.Now
      intCount=0
      Do while fCDM_MDI_Loaded = False 
          If  DateDiff("s",cdm_time1,aqDateTime.Now)>180 then
            strTestCaseResult="ABORT"
            strTCRemarks="Unable to load CDM"
            Exit Sub
           End If
          If  DateDiff("s",cdm_time1,aqDateTime.Now)>60 and intCount=0 then
            Sys.Process("ISI.CeicDataManager.Startup").Close
            Sys.Process("ISI.CeicDataManager.Startup").Terminate
            Delay(5000)
            Set wshShell = CreateObject ("WSCript.shell")
    	      Set poProcess = wshShell.Exec("""C:\Program Files (x86)\ISI Emerging Markets\CEIC Data Manager\ISI.CeicDataManager.Startup.exe""")
            Delay(30000)
            intCount=1          
          End If
      Loop  
    End If

    strTemp="WinFormsObject(""Login_Dialog"")"
    Set objTemp=Sys.Process("ISI.CeicDataManager.Startup").WaitChild(strTemp,12000)
    If objTemp.Exists = True then
       strTemp="WinFormsObject(""TxBox_User"")"
       Set objtxtusr=objTemp.FindChild("Name",strTemp,1,True)
       If objtxtusr.Exists = True then
          objtxtusr.Text=""
          objtxtusr.Text=strUserName
           Delay 2000, ""
       End If
       strTemp="WinFormsObject(""TxBox_Pass"")"
       Set objtxtpass=objTemp.FindChild("Name",strTemp,1,True)
       If objtxtpass.exists = True then
          objtxtpass.Text=""
          objtxtpass.Text=strPassword
          Delay 2000, ""
       End If
       Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("Login_Dialog").WinFormsObject("Panel1").WinFormsObject("Button_OK")
       Call objTemp.WinFormsObject("Panel1").WinFormsObject("Button_OK").Click


      Set otemp=Sys.Process("ISI.CeicDataManager.Startup").WaitChild("WinFormsObject(""UpgradeWarning_From"")",30000)
      If otemp.exists = True Then  ' Annoucement >> Click OK. 
        Delay 2000, "Closing Annoucement Form"
        otemp.WinFormsObject("TableLayoutPanel1").WinFormsObject("Panel4").WinFormsObject("Button_OK").Click()      
      End If
       Delay 6000, "Pls Wait.."
       set otemp=Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMMain_MDIParent").WinFormsObject("RibbonStatusBar1")
        StatusString=otemp.LeftPanelCommands.Item(0).Text

        cdm_time1=aqdatetime.Now
        Do while aqstring.find(ucase(StatusString),"READY")=-1
           Delay 1000,"Please wait"
           set otemp=Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMMain_MDIParent").WinFormsObject("RibbonStatusBar1")
           StatusString=otemp.LeftPanelCommands.Item(0).Text
           log.Message StatusString
           If  DateDiff("s",cdm_time1,aqDateTime.Now)>120 then
            'strTestCaseResult="ABORT"
            Exit Do
           End If
        Loop
        
         ''Refresh
        Delay 1000,"Refresh.."
        sys.Keys "~sa"
        'sys.Keys "+A"
        Delay 10000,"Refresh..."
        sys.Keys "[F5]"

        set otemp=Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMMain_MDIParent").WinFormsObject("RibbonStatusBar1")
        StatusString=otemp.LeftPanelCommands.Item(0).Text
        cdm_time1=aqdatetime.Now
        Do while aqstring.find(ucase(StatusString),"UPDATED")=-1
           Delay 1000,"Please wait till CDM Tab Refresh"
           set otemp=Sys.Process("ISI.CeicDataManager.Startup").WinFormsObject("CDMMain_MDIParent").WinFormsObject("RibbonStatusBar1")
           StatusString=otemp.LeftPanelCommands.Item(0).Text
           log.Message StatusString
           If  DateDiff("s",cdm_time1,aqDateTime.Now)>120 then
            'strTestCaseResult="ABORT"
            Exit Do
           End If
        Loop  
   
        
'       Call Aliases.ISI_CeicDataManager_Startup.CDMMain_MDIParent.TopRebar1.CommandBar_SeriesActions.Click(544, 12)
'       Delay 25000,"Refresh..."
'       Call sCDMTree(strParameters)
'     strTCRemarks="Opened CDM"
'      Dim strSearch3
'       strSearch3=getSplitValue(strParameters,"SEARCH3")
'       If strSearch3="0" then
'          Call sCDMFootnote(strParameters)
'       Else
'          Call sCDMTree(strParameters)
'       End If    
    End If
    
End Sub


''Procedure to open STP and select Full History 
Sub sExcelFullHistory()

  Dim strTemp,CreateSTP,PropArray,ValuesArray,objTemp,ReplaceFile 
  
On Error Resume Next
  Delay 10000,"Pls wait.."
  
  'strTemp = "WinFormsObject(""TimeRangePickerForm"")"
  Set CreateSTP=Sys.Process("EXCEL", 2).WinFormsObject("TimeRangePickerForm")  
  'Set CreateSTP1=Sys.Process("EXCEL", 3).WinFormsObject("TimeRangePickerForm")
  If CreateSTP.Exists = True  Then
    PropArray = Array("WndCaption", "Visible")
    ValuesArray = Array("Full History", True)
    Set objTemp = CreateSTP.FindChild(PropArray, ValuesArray, 50)  
    If objTemp.Exists = True Then
      objTemp.Click
      log.Message "Selected Full History Radio button"
    Else
      log.Message "Full History Radio button not found"
    End If    

    PropArray = Array("WndCaption", "Visible")
    ValuesArray = Array("Open", True)
    Set objTemp = CreateSTP.FindChild(PropArray, ValuesArray, 10)
    Delay 2000,"Opening STP.. Pls wait.."
    If objTemp.Exists = True Then
      objTemp.Click
    End If

'    strTemp="WinFormsObject(""OpenButton"")"
'    Set objTemp = CreateSTP.FindChild(Name,strTemp,50)
'    If objTemp.Exists = True Then
'      objTemp.Click
'    End If
' If Ucase(Trim(strEnvi))=Ucase(Trim("Edge ( US Production )")) then 
''      'Delay 100000,"Opening STP.. Pls wait.." 
''     ' Call sEdgeProcessor
''      Dim objProgress, strTemp1
''      'strTemp1 ="WinFormsObject(""WaitProgressForm"")"
''      'objProgress= Sys.Process("EXCEL", 2).Window("XLMAIN", "Excel", 1).WinFormsObject("WaitProgressForm").WinFormsObject("pnlMain")
''      objProgress = Sys.Process("EXCEL", 2).Window("XLMAIN", "Excel", 1).Window("XLDESK", "", 1)
''      Do until objProgress.Exists = False 
''     If objProgress.Focusable=False then
''      Delay 1000,"Pls Wait... Form is loading..."
''    End if 
''  Loop 
'     
'      Delay 2000,"Pls Wait..." 
'      'Call sProgressBar
'  End If
  If Ucase(Trim(strEnvi))=Ucase(Trim("Edge ( US Integration )")) then 
      Delay 50000,"Opening STP.. Pls wait.."  
  End If
  'Delay 40000,"Opening STP.. Pls wait.."  
  'Call sEdgeProcessor
    Set ReplaceFile= Sys.Process("EXCEL", 2).WPFObject("HwndSource: CustomMessageBoxWindow", "Warning").WPFObject("CustomMessageBoxWindow", "Warning", 1).WPFObject("Grid", "", 1).WPFObject("PART_InactiveBorder")
    If ReplaceFile.Exists=True Then        
       Sys.Keys("Y")
      ' msgbox ReplaceFile & "Found"
    End If
    Call sEdgeProcessor
    
'    Set ReplaceFile= Sys.Process("EXCEL", 3).WPFObject("HwndSource: CustomMessageBoxWindow", "Warning").WPFObject("CustomMessageBoxWindow", "Warning", 1).WPFObject("Grid", "", 1).WPFObject("PART_InactiveBorder")
'    If ReplaceFile.Exists=True Then        
'       Sys.Keys("Y")
'      ' msgbox ReplaceFile & "Found"
'    End If

      

    strTemp="WinFormsObject(""SelectFreqForm"")"
    Set objTemp=Sys.Process("EXCEL",2).WaitChild(strTemp,20000)
    If objTemp.Exists Then
        strTemp="WinFormsObject(""radButton1"")"
        Set objTemp=objTemp.FindChild("Name",strTemp,5)
        If objTemp.Exists = True then
          objTemp.Click
        End If
    End if
    
    
    Set ReplaceFile= Sys.Process("EXCEL", 2).WPFObject("HwndSource: CustomMessageBoxWindow", "Warning").WPFObject("CustomMessageBoxWindow", "Warning", 1).WPFObject("Grid", "", 1).WPFObject("PART_InactiveBorder")
     If ReplaceFile.Exists=True Then
        'ReplaceFile.Click
         Sys.Keys("Y")
         'msgbox ReplaceFile & "Found"
      End If
      
      
     'Sys.Process("EXCEL", 2).Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Warning"")",12000)'._
'          Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Warning"", 1)",60000)._
'          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
'          Waitchild("WPFObject(""FloatingContainerBorder"")",60000)._
'          Waitchild("WPFObject(""FloatingContainerBackground"")",60000)._
'          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
'          Waitchild("WPFObject(""FloatingContainerBody"")",60000)._
'          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
'          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
'          Waitchild("WPFObject(""PART_ContainerContent"")",60000)
     

'    Set ReplaceFile1 = Sys.Process("EXCEL", 3).WPFObject("HwndSource: CustomMessageBoxWindow", "Warning").WPFObject("CustomMessageBoxWindow", "Warning", 1).WPFObject("Grid", "", 1).WPFObject("PART_InactiveBorder")
'    If ReplaceFile1.Exists=True Then
'        'ReplaceFile.Click
'         Sys.Keys("Y")
'      End If
'      
    blnSTPfile=False
    'strTCRemarks = "STP file opened"
  Else
    log.Message "STP File not found"
    strTCRemarks="STP File not found"
    blnCriticalErrorFound = True
    strCriticalError = "Unable to find STP file"
    strTestCaseResult = "FAIL"
    blnSTPfile=True
    Call ExcelProcessKill
    Exit Sub
  End If

  Set CreateSTP=Nothing  
  Set objTemp=Nothing
End Sub
Sub sCheckSrcSourceModule()
On Error Resume Next

    Dim strSource_Name,strLevel2src_Name,objNewWrkSpace_okbtn,objNewWrkSpace_Name,strWrkSpaceName
    Dim objNewWrkSpace_Txtbox,objopenforEdit,objWrkspace_popup
    Dim strTemp,objTemp,intRow,barManager,intTotNodeCnt,Text,strDesc1,strDesc2
    Dim objWrkSpace,objwrkspacepop,objwrkspcUpload,objConfirm,objGridCell,DescLocalText,intSeriesID
    Dim layoutGroup,strSource1,StrSource2
    Dim strTemp1,objNewWrkSpaceName

'    strSource_Name=getSplitValue(strParameters,"SOURCE")
'    strLevel2src_Name=getSplitValue(strParameters,"LEVEL2SOURCE")
'    
'    'strWrkSpaceName=getSplitValue(strParameters,"WORKSPACENAME")
'    'DescText=getSplitValue(strParameters,"DESCRIPTIONTEXT")
'    'DescLocalText=getSplitValue(strParameters,"DESCRIPTIONLOCALTEXT")
'    
'    strDesc1=aqDateTime.Now
'    strDesc2=aqDateTime.Now
'    DescText=Replace(strDesc1,"/","-")
'    DescText=Replace(DescText,":","_")
'    DescLocalText=DescText
'    strWrkSpaceName=DescText

'   strSource1=getSplitValue(strParameters,"SOURCE")
'  StrSource2=getSplitValue(strParameters,"LEVEL2SOURCE")
'  StrSource3=getSplitValue(strParameters,"LEVEL3SOURCE")
    
    strSource1="Test"
    StrSource2="Automation_UIT2"
    StrSource3="Test"
    'intSeriesID=368766057

    Call sHome_Source
    
    strDesc1=aqDateTime.Now
    strDesc2=aqDateTime.Now
    DescText=Replace(strDesc1,"/","-")
    DescText=Replace(DescText,":","_")
    DescLocalText=DescText
    strWrkSpaceName=DescText
    intSeriesID=getSplitValue(strParameters,"SERIESID")
    if intSeriesID=0 then
      Call sSourceseries
      intSeriesID=strSourceFileText
    End if  
    
    strTemp="WPFObject(""SourceTreeListView"")"
    Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").FindChild("Name",strTemp,50,True)
    strTemp="WPFObject(""SourceTreeControl"")"
    Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").FindChild("Name",strTemp,50,True)
    Delay 10000,"Pls Wait.."
    ''Selecting Country Name
    intTotNodeCnt=GridControl.Nodes_2.Count
    For intI=0 to intTotNodeCnt-1         
        If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource1) then
          GridControl.Nodes_2.Item(intI).Expand(True)
          log.Message "Country Name - " & GridControl.Nodes_2.Item(intI).Content.Description       
    '      strTCRemarks=strTCRemarks & Chr(10) & "Selected Node - " & GridControl.Nodes_2.Item(intI).Content.Description  
          blnFlag=False  
          Exit For
        End If
    Next
    If blnFlag = True then
      strTCRemarks="Country Name not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If
  
    Delay 10000,"Pls Wait.."
        blnFlag = True 
    ''Selecting Level2Source_Name
    intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
  For intJ=0 to intTotNodeCnt-1
      If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(StrSource2) then
        GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Expand(True)
    '    intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(0).get_RowHandle
        intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
'        Call GridSourceTree.ClickCell(intRow, "Edit")
        Call GridControl.ClearSelectionCore
        Call GridControl.FocusViewAndRow(GridControl,intRow)
        GridControl.SetFocusOnCurrentItem
        Call GridControl.SelectRowCore(intRow)
        log.Message "Level2 Source Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
        blnFlag = False 
        Exit For
      End If
    Next
    If blnFlag = True then
      log.Message "Level2 Source Name not found"
      strTCRemarks="Level2 Source Name not found"
      strTestCaseResult="FAIL"
      Exit Sub
    End If
    Delay 2000,"Pls Wait.."

    ''Clicking on "New Workspace" Button and selecting "Open for Edit(Souce)" option 
    strTemp="WPFObject(""ArrowControl"", """", 1)"
    Set objNewWorkspace=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).FindChild("Name",strTemp,20,True)
    If objNewWorkspace.Exists = True then
      objNewWorkspace.Click
      strTemp="WPFObject(""BarPopupBorderControl"", """", 1)"
      Set objWrkspace_popup=Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,5,True)
      If objWrkspace_popup.Exists = True then
        strTemp="WPFObject(""ContentControlEx"", ""Open For Edit (Source)"", 2)"
        Set objopenforEdit=objWrkspace_popup.FindChild("Name",strTemp,8,True)
        If objopenforEdit.Exists then
          objopenforEdit.Click    
          'Delay 20000,"Please Wait..."
        End If
      End If
     
    
      strTemp1="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
      Set objNewWrkSpaceName=Sys.Process("EdgeClient").WaitChild(strTemp1,50000)
      If objNewWrkSpaceName.Exists = True then
     
      ''Waiting for Workspace Name prompt
      strTemp="WPFObject(""FloatingContainerBorder"")"
      Set objNewWrkSpace_Name=Sys.Process("EdgeClient").WPFObject("HwndSource: WorkspaceNamePrompt", "Please provide a new Workspace Name").WPFObject("WorkspaceNamePrompt", "Please provide a new Workspace Name", 1).WPFObject("Grid", "", 1).WaitChild(strTemp,15000000)
     ' Set objNewWrkSpace_Name=Sys.Process("EdgeClient").WaitChild(strTemp,15000000)
        If objNewWrkSpace_Name.Exists = True then
          strTemp="WPFObject(""ChangeNameTextEdit"")"
          ''Entering Workspace Name
          Set objNewWrkSpace_Txtbox=objNewWrkSpace_Name.FindChild("Name",strTemp,9,True)
            If objNewWrkSpace_Txtbox.Exists = True then
              objNewWrkSpace_Txtbox.Click
              objNewWrkSpace_Txtbox.Text=strWrkSpaceName
      '        strTCRemarks=strTCRemarks & Chr(10) & "Entered Workspace Name - " & strWrkSpaceName
              ''Clicking on Ok Button 
              strTemp="WPFObject(""OkButton"")"
              Set objNewWrkSpace_okbtn=objNewWrkSpace_Name.FindChild("Name",strTemp,9,True)
              If objNewWrkSpace_okbtn.Exists = True then
                objNewWrkSpace_okbtn.Click
                'Delay 5000,"Please wait..."
              End If
            End If
        End If
      End if
    End If

    ''Handling Validation for Source
    strTemp="WPFObject(""HwndSource: WindowContentHolder"", """")"
    Set objTemp=Sys.Process("EdgeClient").WaitChild(strTemp,10000)
    If objTemp.Exists = True then
      objTemp.Keys "[Enter]"
      strTestCaseResult = "FAIL"
      Exit Sub
    End If

    ''WorkSpace Edit Window
    strTemp="WPFObject(""LayoutPanel"", """", 2)"
    Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").FindChild("Name",strTemp,13,True)
    If objTemp.Exists then
        Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl").WPFObject("SourceTreeListView")
        Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl")

        ''Expanding First Node in Tree      
        intTotNodeCnt=GridControl.Nodes_2.Count  
        For intI=0 to intTotNodeCnt-1         
          If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(StrSource1) then
            GridControl.Nodes_2.Item(intI).Expand(True)
            blnFlag=False  
            Exit For
          End If
        Next
    
        ''Expanding Second Node in Tree
        intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
        For intJ=0 to intTotNodeCnt-1
          If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(StrSource2) then
            GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Expand(True)
            intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(0).get_RowHandle
            GridControl.Keys "^[Home]"
'            Set objGridCell=GridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("GridRow", "", intRow).WPFObject("ScrollablePart").WPFObject("CellItemsControl", "", 1).WPFObject("GridCellContentPresenter", "", 1).WPFObject("TextEdit", "", 1)
            Call GridControl.ClearSelectionCore
            Call GridControl.FocusViewAndRow(GridControl,intRow-1)
            GridControl.SetFocusOnCurrentItem
            Call GridControl.SelectRowCore(intRow-1)
        
            If objGridCell.Exists = True then
              objGridCell.Click
    '          strTCRemarks=strTCRemarks & Chr(10) & "Selected - " & strLevel2src_Name
            End If
            blnFlag = False 
            Exit For
          End If
        Next
    
        ''Clicking on New Folder
    '   strTemp="WPFObject(""BarButtonItemLinkControl"", """", 1)"
        Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 4).WPFObject("BarButtonItemLinkControl", "", 1)
        If objTemp.Exists = True then
          Delay 3000,"New Folder..."
          objTemp.Click
          Delay 8000,"New Folder..."
        End If
    
        ''Getting no. of Rows under level 2
        intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
        intK=intTotNodeCnt-1
    
        Set objDescCell=Aliases.EdgeClient.HwndSource_RibbonWindow.RibbonWindow.ContentControl.Grid.Grid.ContentControl.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel2.Root.BarManager.AdornerDecorator.AdornedControl.Grid.DockPanel.SourceTreeListControl.SourceTreeListView.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK)
        Call objDescCell.Content.set_Description(DescText)
        Call objDescCell.Content.set_DescriptionLocal(DescLocalText)
        
        ''Attach Series
        Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceSeriesViewControl").WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 1).WPFObject("BarButtonItemLinkControl", "", 1)
        If objTemp.Exists = True then
          objTemp.DblClick
          ''Entering Series      
          Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: SourceSeriesPrompt", "Attach Source Series").WPFObject("SourceSeriesPrompt", "Attach Source Series", 1).WPFObject("Grid", "", 1).WPFObject("FloatingContainerBorder").WPFObject("FloatingContainerBackground").WPFObject("Grid", "", 1).WPFObject("FloatingContainerBody").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("StackPanel", "", 1).WPFObject("SeriesIdTextEdit")
          If objTemp.Exists = True then
             objTemp.Text=intSeriesID
             Delay(10000)
             ''Clicking on OK Button
             Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: SourceSeriesPrompt", "Attach Source Series").WPFObject("SourceSeriesPrompt", "Attach Source Series", 1).WPFObject("Grid", "", 1).WPFObject("FloatingContainerBorder").WPFObject("FloatingContainerBackground").WPFObject("Grid", "", 1).WPFObject("FloatingContainerBody").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("OkButton")
             If objTemp.Exists = True then
                objTemp.Click
    '            strTCRemarks=strTCRemarks & Chr(10) & "Attached Series- " & intSeriesID
             End If
          End If            
        End If

    
      ''Closing Source
      Call SClosesource()
      Call sEdgeProcessor
      Delay(10000)
      Dim objSaveWrk,objWait 
      set objSaveWrk=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 12).WPFObject("BarSubItemLinkControl", "", 1)
      strTemp="WPFObject(""ContentControlEx"", ""Workspace"", 2)"
      Set objTemp=objSaveWrk.FindChild("Name",strTemp,50)
      objWait=1
    Do until objTemp.Enabled = true 
        If objWait < 20 Then
          Delay 1000,"Pls Wait... Form is loading..."
          objWait=objWait+1
        else
          Call SClosesource()
          Call SourceWorkSpacevwr()
          Exit Sub
        end if 
    Loop 
    ''Uploading WorkSpace
   strTemp="WPFObject(""ContentControlEx"", ""Workspace"", 2)"
    Set objWrkSpace=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).FindChild("Name",strTemp,50,True)
     Delay(10000)
    If objWrkSpace.Exists = True then
      Delay(1000)
      objWrkSpace.Click
      Delay(1000)

      strTemp="WPFObject(""PopupMenuBarControl"", """", 1)"
      Set objwrkspacepop=Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").Findchild("Name",strTemp,50,True)
      'Set objwrkspacepop=Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 2).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Upload Workspace", 2)
      If objwrkspacepop.Exists = True then
        strTemp="WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"
        set objwrkspcUpload=Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).FindChild("Name",strTemp,50,True)
        If objwrkspcUpload.Exists = True then
          objwrkspcUpload.Click
          'Delay 1000,"Pls Wait.."
          strTemp="WPFObject(""PART_ContainerContent"")"
          Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Confirm").FindChild("Name",strTemp,50,True)
'          strTemp="WPFObject(""DXMessageBox"", """", 1)"
'          Set objConfirm=objConfirm.WaitChild(strTemp,180000)
          If objConfirm.Exists = True then
            objConfirm.Keys "[Enter]"
            'Delay 8000,"Uploading..."
            Set objConfirm = Sys.Process("EdgeClient")._
            Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Upload Workspace"")",600000)._
            Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Upload Workspace"", 1)",60000)._
            Waitchild("WPFObject(""Grid"", """", 1)",60000)._
            Waitchild("WPFObject(""FloatingContainerBorder"")",60000)._
            Waitchild("WPFObject(""FloatingContainerBackground"")",60000)._
            Waitchild("WPFObject(""Grid"", """", 1)",60000)._
            Waitchild("WPFObject(""FloatingContainerBody"")",60000)._
            Waitchild("WPFObject(""Grid"", """", 1)",60000)._
            Waitchild("WPFObject(""Grid"", """", 1)",60000)._
            Waitchild("WPFObject(""PART_ContainerContent"")",60000)
            
            If objConfirm.Exists = True then
              Sys.Keys("O")
              'Delay 30000,"Pls Wait.."
             ' Call sEdgeProcessor
    '          strTCRemarks=strTCRemarks & Chr(10) & "WorkSpace Uploaded"
                  ''Reopen Source and Checking whether the new source is created              
                  strObject = "WPFObject(""HwndSource: RibbonWindow"")"
                  Set objEdgeMDI = Sys.Process("EdgeClient").WaitChild(strObject, 700000)
                  If objEdgeMDI.Exists then
                    objEdgeMDI.WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("RibbonControl").WPFObject("RibbonSelectedPageControl", "", 1).WPFObject("RibbonPagesControl", "", 1).WPFObject("RibbonPageGroupsControl", "", 1).WPFObject("RibbonPageGroupControl", "", 1).WPFObject("BarItemLinkInfo", "", 1).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("TextSplitterControl", "", 1).WPFObject("ContentControl", "Source", 1).Click
                    Delay 6000,"Opening Source.."
                  Else
                    log.Message "RibbonWindow not found"
                  End If
    
                strTemp="WPFObject(""SourceTreeListView"")"
                Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").FindChild("Name",strTemp,50,True)
                strTemp="WPFObject(""SourceTreeControl"")"
                Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").FindChild("Name",strTemp,50,True)

                ''Selecting Country Name
                intTotNodeCnt=GridControl.Nodes_2.Count
                For intI=0 to intTotNodeCnt-1         
                    If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
                      GridControl.Nodes_2.Item(intI).Expand(True)
                      log.Message "Country Name - " & GridControl.Nodes_2.Item(intI).Content.Description       
                      blnFlag=False  
                      Exit For
                    End If
                Next
                If blnFlag = True then
                  strTCRemarks="Country Name not found"
                  strTestCaseResult="FAIL"
                  Exit Sub
                End If
  
                    blnFlag = True 
                ''Selecting Level2Source_Name
                intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
                For intJ=0 to intTotNodeCnt-1
                  If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then
                    GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Expand(True)
                '    intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(0).get_RowHandle
                    intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
            '        Call GridSourceTree.ClickCell(intRow, "Edit")
                    Call GridControl.ClearSelectionCore
                    Call GridControl.FocusViewAndRow(GridControl,intRow)
                    GridControl.SetFocusOnCurrentItem
                    Call GridControl.SelectRowCore(intRow)
                    log.Message "Level2 Source Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
                    blnFlag = False 
                    Exit For
                  End If
                Next
                
                    blnFlag = True 
                ''Selecting Level2Source_Name
                intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
                For intJ=0 to intTotNodeCnt-1
                  If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then
                    GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Expand(True)
                '    intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(0).get_RowHandle
                    intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
            '        Call GridSourceTree.ClickCell(intRow, "Edit")
                    Call GridControl.ClearSelectionCore
                    Call GridControl.FocusViewAndRow(GridControl,intRow)
                    GridControl.SetFocusOnCurrentItem
                    Call GridControl.SelectRowCore(intRow)
                    log.Message "Level2 Source Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
                    blnFlag = False 
                    Exit For
                  End If
                Next
    
                If blnFlag = True then
                  strTCRemarks="Level2 Source Name not found"
                  strTestCaseResult="FAIL"
                  Exit Sub
                End If
                
              strTemp="WPFObject(""ArrowControl"", """", 1)"
              Set objNewWorkspace=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).FindChild("Name",strTemp,20,True)
              If objNewWorkspace.Exists = True then
                objNewWorkspace.Click
                strTemp="WPFObject(""BarPopupBorderControl"", """", 1)"
                Set objWrkspace_popup=Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,5,True)
                If objWrkspace_popup.Exists = True then
                  strTemp="WPFObject(""ContentControlEx"", ""Open For Edit (Source)"", 2)"
                  Set objopenforEdit=objWrkspace_popup.FindChild("Name",strTemp,8,True)
                  If objopenforEdit.Exists then
                    objopenforEdit.Click    
                   ' Delay 12000,"Please Wait..."
                  End If
                End If
                
                strTemp1="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
                Set objNewWrkSpaceName=Sys.Process("EdgeClient").WaitChild(strTemp1,50000)
                If objNewWrkSpaceName.Exists = True then
   
                  ''Waiting for Workspace Name prompt
                  strTemp="WPFObject(""FloatingContainerBorder"")"
                  Set objNewWrkSpace_Name=Sys.Process("EdgeClient").WPFObject("HwndSource: WorkspaceNamePrompt", "Please provide a new Workspace Name").WPFObject("WorkspaceNamePrompt", "Please provide a new Workspace Name", 1).WPFObject("Grid", "", 1).WaitChild(strTemp,900000)
                  If objNewWrkSpace_Name.Exists = True then
                    strTemp="WPFObject(""ChangeNameTextEdit"")"
                    ''Entering Workspace Name
                    Set objNewWrkSpace_Txtbox=objNewWrkSpace_Name.FindChild("Name",strTemp,9,True)
                      If objNewWrkSpace_Txtbox.Exists = True then
                        objNewWrkSpace_Txtbox.Click
                        objNewWrkSpace_Txtbox.Text=strWrkSpaceName
                        ''Clicking on Ok Button 
                        strTemp="WPFObject(""OkButton"")"
                        Set objNewWrkSpace_okbtn=objNewWrkSpace_Name.FindChild("Name",strTemp,9,True)
                        If objNewWrkSpace_okbtn.Exists = True then
                          objNewWrkSpace_okbtn.Click
                           Call sEdgeProcessor
                         ' Delay 5000,"Please wait..."
                        End If
                      End If
                  End If
                End if
            End If


          ''WorkSpace Edit Window
          strTemp="WPFObject(""LayoutPanel"", """", 2)"
          Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").FindChild("Name",strTemp,13,True)
          If objTemp.Exists then
              Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl").WPFObject("SourceTreeListView")
              Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl")

           
              intTotNodeCnt=GridControl.Nodes_2.Count  
              For intI=0 to intTotNodeCnt-1         
                If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
                  GridControl.Nodes_2.Item(intI).Expand(True)
                  blnFlag=False  
                  Exit For
                End If
              Next

              intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
              For intJ=0 to intTotNodeCnt-1
                If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then
                  GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Expand(True)
                  blnFlag = False 
                  Exit For
                End If
              Next
          
              intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
               For intK=0 to intTotNodeCnt-1
                  If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase( DescText) then
                      intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
    '                  Set objGridCell=GridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("GridRow", "", intRow+1).WPFObject("ScrollablePart").WPFObject("CellItemsControl", "", 1).WPFObject("GridCellContentPresenter", "", 1).WPFObject("TextEdit", "", 1)
    '                  If objGridCell.Exists = True then
    '                    objGridCell.Click
    '                  End If 
                      GridControl.set_FocusedRowHandle(intRow)
                      log.Message "New Source Created"
                      strTCRemarks="Upload successful" & "<br />" & "Level3 Source Created - " & DescText & "<br />" & "Attach Series - " & intSeriesID
                      Exit For   
                  End If 
               Next
              End If
            End If
          End If
        End If
      End If
    End If
    End If

    ''Closing Opened Window
    
    Call sCloseFileInsetLink()
    Call SClosesource()
    ''Dropping Workspace in Source Workspace viewer 
    Call SourceWorkSpacevwr 
End Sub


'Sub sCheckPendingSTP(strParameters)
Sub sCheckPendingSTP
    Dim strFileName
     strFileName="YYY-Automation-Test Source 1"   
     strEnvi = "Edge ( US Production )" 
     'strFileName=getSplitValue(strParameters,"TestDataFile")
     
    objArray = Sys.FindAllChildren("ProcessName","EXCEL", 5,True)
    For i=0 to ubound(objArray)
      log.Message objArray(i).FullName
      set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*RUN*",1,True)
      If oSTP_ExcelObj.Exists = True Then        
      Else
        objArray(i).Close
      End If
    Next 
        
    Call SClosesource()
    Call sAutoHidePanelDock("Pending STP")
    
    strTemp="WPFObject(""LayoutGroup"", """", 1)"
    Set objLayout=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    
    strTemp="WPFObject(""GridControl"")"
    Set objGridControl = objLayout.FindChild("Name",strTemp,50,true)    
    strTemp="WPFObject(""SourceLogTableView"")"
    Set objTableView = objLayout.FindChild("Name",strTemp,50,true)
    
    blnFlag=False
    intRefresh=0
    Do
    For i = 0 to objGridControl.wGroupCount-1
    If objGridControl.DataController.GroupInfo.Item(i).GroupValue.OleValue="Test" then
        Call objGridControl.ExpandGroup(i,true)
        Call objTableView.set_FocusedRowHandle(objGridControl.DataController.GroupInfo.Item(i).Handle)
        Call objTableView.SelectRow(objGridControl.DataController.GroupInfo.Item(i).Handle)
        Delay 5000,"Loading Grid Rows"
        Exit For 
    End If
    Next
    
    Do While(objTableView.FocusedRowHandle<0)
    Sys.Keys("[Down]")
    Loop
    
    Do While(objTableView.FocusedRowHandle>0)      
      If objTableView.FocusedRow.StpFileName=strFileName then
        If DateDiff("s",objTableView.FocusedRow.ExportedTimeLocal,aqDateTime.Now)<600 then
         strTCRemarks="STP file name found in Pending STP panel"
         log.Message(strTCRemarks)
         blnFlag=True
         intRefresh=3
         Exit Do
        Else
         Sys.Keys("[Down]")
        End  If
      Else
       Sys.Keys("[Down]")
      End If
    Loop
    
    If intRefresh<3 then
      strTemp="WPFObject(""Button"", ""Refresh"", 1)"
      Set objRefresh=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
      Call objRefresh.ClickButton
      Call sEdgeProcessor()
      intRefresh=intRefresh+1
    End If
    
    Loop while(intRefresh<3)
    
    Call objGridControl.CollapseGroup(i)
    Call SAutoHidePanelHide("Pending STP")
    
    If blnFlag=False then
      strTCRemarks="STP file name not found"
      strTestCaseResult="FAIL"
    End If
    
End Sub

Sub computename()
  Set wshShell = CreateObject( "WScript.Shell" )
  strComputerName = wshShell.ExpandEnvironmentStrings( "%COMPUTERNAME%" )
  msgbox "Computer Name: " & strComputerName 
End Sub

Sub sExcelFullHistory123()

  Dim strTemp,CreateSTP,PropArray,ValuesArray,strTemp1,ReplaceFile 
  Dim objProgress, objTemp,objRecovery,intCount
  
On Error Resume Next
  Delay 10000,"Pls wait.."
  intCount = 0
  
  Set CreateSTP=Sys.Process("EXCEL", 2).WinFormsObject("TimeRangePickerForm")  
  
  If CreateSTP.Exists = True  Then
    PropArray = Array("WndCaption", "Visible")
    ValuesArray = Array("Full History", True)
    Set objTemp = CreateSTP.FindChild(PropArray, ValuesArray, 50)  
    If objTemp.Exists = True Then
      objTemp.Click
      log.Message "Selected Full History Radio button"
    Else
      log.Message "Full History Radio button not found"
    End If    

    PropArray = Array("WndCaption", "Visible")
    ValuesArray = Array("Open", True)
    Set objTemp = CreateSTP.FindChild(PropArray, ValuesArray, 10)
    Delay 2000,"Opening STP.. Pls wait.."
    If objTemp.Exists = True Then
      objTemp.Click
    End If


 If Ucase(Trim(strTestMode))=Ucase(Trim("BMT"))Then      
     Dim objwshShell, strComputerName              
      Set wshShell = CreateObject( "WScript.Shell" )
      strComputerName = wshShell.ExpandEnvironmentStrings( "%COMPUTERNAME%") 
      'If Ucase(trim(strComputerName))= Ucase(trim("UIT01"))Or Ucase(trim(strComputerName))= Ucase(trim("UIT02"))Or Ucase(trim(strComputerName))= Ucase(Trim("UIT03"))Then
       If Ucase(trim(strComputerName))= Ucase(trim("in-blr-lspoongu"))OR Ucase(trim(strComputerName))= Ucase(trim("in-blr-lspoongu1"))  Then 
          Delay 120000,"Opening STP.. Pls wait.."  
          objProgress = Sys.Process("EXCEL", 2).Window("XLMAIN", "Excel", 1).Window("XLDESK", "", 1)
          Do until objProgress.Exists = False 
             Set ReplaceFile= Sys.Process("EXCEL", 2).WPFObject("HwndSource: CustomMessageBoxWindow", "Warning").WPFObject("CustomMessageBoxWindow", "Warning", 1).WPFObject("Grid", "", 1).WPFObject("PART_InactiveBorder")
              If ReplaceFile.Exists=True Then                 
                 Sys.Keys("Y")           
                 Exit Do          
              End If  
              If intCount = 15 Then          
               Exit Do
              End If 
              intCount= intCount+1   
          Loop 
      End If
    End If        
      Delay 3000,"Pls Wait..." 
      'Call sProgressBar


'       

  'Delay 40000,"Opening STP.. Pls wait.."  
  'Call sEdgeProcessor
    Set ReplaceFile= Sys.Process("EXCEL", 2).WPFObject("HwndSource: CustomMessageBoxWindow", "Warning").WPFObject("CustomMessageBoxWindow", "Warning", 1).WPFObject("Grid", "", 1).WPFObject("PART_InactiveBorder")
    If ReplaceFile.Exists=True Then        
       Sys.Keys("Y")
      ' msgbox ReplaceFile & "Found"
    End If
    Call sEdgeProcessor
    Delay 3000,"Pls Wait..." 
    
'    Set ReplaceFile= Sys.Process("EXCEL", 3).WPFObject("HwndSource: CustomMessageBoxWindow", "Warning").WPFObject("CustomMessageBoxWindow", "Warning", 1).WPFObject("Grid", "", 1).WPFObject("PART_InactiveBorder")
'    If ReplaceFile.Exists=True Then        
'       Sys.Keys("Y")
'      ' msgbox ReplaceFile & "Found"
'    End If

      

    strTemp="WinFormsObject(""SelectFreqForm"")"
    Set objTemp=Sys.Process("EXCEL",2).WaitChild(strTemp,20000)
    If objTemp.Exists Then
        strTemp="WinFormsObject(""radButton1"")"
        Set objTemp=objTemp.FindChild("Name",strTemp,5)
        If objTemp.Exists = True then
          objTemp.Click
        End If
    End if
    
    
    Set ReplaceFile= Sys.Process("EXCEL", 2).WPFObject("HwndSource: CustomMessageBoxWindow", "Warning").WPFObject("CustomMessageBoxWindow", "Warning", 1).WPFObject("Grid", "", 1).WPFObject("PART_InactiveBorder")
     If ReplaceFile.Exists=True Then
        'ReplaceFile.Click
         Sys.Keys("Y")
         'msgbox ReplaceFile & "Found"
      End If
      
      
    
'      
    blnSTPfile=False
    'strTCRemarks = "STP file opened"
  Else
    log.Message "STP File not found"
    strTCRemarks="STP File not found"
    blnCriticalErrorFound = True
    strCriticalError = "Unable to find STP file"
    strTestCaseResult = "FAIL"
    blnSTPfile=True
    Call ExcelProcessKill
    Exit Sub
  End If

  Set CreateSTP=Nothing  
  Set objTemp=Nothing
End Sub

Sub ReplaceFile()
  Dim strReplaceFile
  'File = Sys.Process("EXCEL", 2).WPFObject("HwndSource: CustomMessageBoxWindow", "Warning").WPFObject("CustomMessageBoxWindow", "Warning", 1).WPFObject("Grid", "", 1).WPFObject("PART_InactiveBorder")
  If Sys.Process("EXCEL", 2).WPFObject("HwndSource: CustomMessageBoxWindow", "Warning").WPFObject("CustomMessageBoxWindow", "Warning", 1).WPFObject("Grid", "", 1).WPFObject("PART_InactiveBorder").Exists = True then
    SYS.Keys "[Enter]"
    Delay 2000 , "Please Wait"
  End IF
'  If File.Exists= True Then
'    SYS.Keys "Y"
'    Delay 2000 , "Please Wait"
'  End If
End Sub 




Sub Test1
'  Dim grid
'  Dim contentControl
'  Dim dockPanel
'  Set grid = Aliases.EXCEL3.HwndSource_CustomMessageBoxWindow.CustomMessageBoxWindow.Grid.Grid
'  Set contentControl = grid.Header
'  Call contentControl.Click(145, 17)
'  Call contentControl.Click(145, 16)
'  Call contentControl.DblClick(459, 14)
'  Set dockPanel = grid.PART_ContentOffset.Grid.PART_ContainerContent.Grid.Grid.DockPanel
'  Call dockPanel.Button_Yes.RenderContentPresenterElement.Label_Yes.Click(5, 11)
'  Call dockPanel.Button_OK.RenderContentPresenterElement.Label_Ok.Click(10, 9)
  
  Set File = Sys.Process("EXCEL").WPFObject("HwndSource: CustomMessageBoxWindow", "Warning").WPFObject("CustomMessageBoxWindow", "Warning", 1).WPFObject("Grid", "", 1).WPFObject("PART_InactiveBorder")
  If File.Exists = True Then 
    Sys.Process("EXCEL").WPFObject("HwndSource: CustomMessageBoxWindow", "Warning").WPFObject("CustomMessageBoxWindow", "Warning", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).WPFObject("Button_Yes").Click
    Delay 1000, ""
  End If
End Sub


Sub sCreateSeriesSTP(strParameters)
On Error Resume Next

  Dim strSeriesName,strSourceSeriesName,strSeriesSourceCode,strSeriesStatus,strSeriesType,STPSheetName
  Dim strSeriousCountry,strOutputUnit,strSeriesNature,strSeriesFreq,strSourceUnit,strUnitType,strTestDataFile
  Dim strAliasName,strFileName,STP,strTimepoints,strText,strStartcolumn
  Dim i,FilePath,intcount,intj, intCol
  Dim objArray,oSTP_ExcelObj,objSTPXls,objActiveWB,netUIHWND,wndEXCEL7
  Dim intlastRow,lastColumn,inti,strTemp,objErrmsg,objOkClick,File
  
  Const xlFillDefault = 0
  strStartcolumn=0
  strTimepoints = getSplitValue(strParameters,"Timepoints")
'  STP= getSplitValue(strParameters,"STP") 
'  strTestDataFile=getSplitValue(strParameters,"TestDataFile") 
'  STPSheetName= getSplitValue(strParameters,"STPSheetName")
'  strSeriesName = getSplitValue(strParameters,"Series Name")
'  strSourceSeriesName = getSplitValue(strParameters,"Source Series Name")
'  strSeriesSourceCode=  getSplitValue(strParameters,"Series Source Code")
'  strSeriesStatus =  getSplitValue(strParameters,"Series Status")
'  strSeriesType =  getSplitValue(strParameters,"Series Type")
'  strSeriousCountry = getSplitValue(strParameters,"Serious Country")
'  strOutputUnit=  getSplitValue(strParameters,"Output Unit")
'  strSeriesNature =  getSplitValue(strParameters,"Series Nature")
'  strSeriesFreq = getSplitValue(strParameters,"Series Freq")
'  strSourceUnit =  getSplitValue(strParameters,"Source Unit")
'  strUnitType = getSplitValue(strParameters,"Unit Type") 
  

'  STPSheetName="A1_1"
'  STP="Test Source 1"
'  strTestDataFile="YYY-Automation-Test Source 1"
'  strSeriesName="test-series"
'  strSourceSeriesName="test-series"
'  strSeriesSourceCode="test-series"
'  strSeriesStatus="T"
'  strSeriesType="Key"
'  strSeriousCountry="YYY"
'  strOutputUnit="NA"
'  strSeriesNature="R"
'  strSeriesFreq="A1"
'  strSourceUnit="NA"
'  strUnitType="%"
'  strTimepoints="5"
' 
  

  
  'For Unit testcase(PRT)
'  If strUnitType="%" then
'   strUnitType=strUnit
'  End If
  


'    
  objArray = Sys.FindAllChildren("ProcessName","EXCEL", 1,True)
  For i=0 to ubound(objArray)
    log.Message objArray(i).FullName
    set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*" & strTestDataFile & "*",1,True)
    If oSTP_ExcelObj.Exists = True Then
      strAliasName=objArray(i).mappedname
      strFileName=oSTP_ExcelObj.WndCaption
      If instr(strFileName,"Microsoft Excel")>0 then
        strFileName=GetFileName(strFileName,"Microsoft Excel")
      Else
        strFileName=GetFileNameExcel13(strFileName," - Excel")
      End If
      FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")
      FilePath=FilePath & "\" & iif(instr(strFileName,"xlsx") > 0,strFileName,strFileName & ".xlsx")  
      log.Message FilePath
      Exit For
    Else
      log.Message "STP file not found in " & objArray(i).FullName
    End If
  Next
  
  Delay(2000)
  
  Set objSTPXls=GetObject(FilePath)
  With objSTPXls
    With .Sheets(STPSheetName).Select
    End With

    With .WorkSheets(STPSheetName)
      Dim r
        delay Status_Wait, "Finding last Row the Excel sheets.. Pls wait.."
        For r = 1 To .UsedRange.Rows.Count
          If IsEmpty(.UsedRange.Cells(r, 1).Value) = True AND (.UsedRange.Cells(r, 1).Text) ="" Then           
           intlastRow=r-1
           Exit For
          End  If 
        Next
        inti=3
        lastColumn=.UsedRange.Columns.Count
       For inti = 3 to lastColumn
          strText=.Cells(2,inti)              
          If isDate(strText)  Then
              strStartcolumn=inti
              Exit For
          End if 
         Next 
                 
         
            strTimepoints = getSplitValue(strParameters,"Timepoints")     
          .Cells(intlastRow,strStartcolumn).Select
          .Cells(intlastRow,strStartcolumn).Value=strTimepoints        
          .Cells(intlastRow,strStartcolumn+1).Value=strTimepoints          
          .Cells(intlastRow,strStartcolumn+2).Value=strTimepoints+5
          .Cells(intlastRow,strStartcolumn+3).Value=strTimepoints+5
                  
 
       Delay 5000 , "Creating a new Time Points.."         
           
          
          Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND 
          
          ''Mark Good
          'Delay 3000,"Mark Good..."
          With objSTPXls
            With .WorkSheets(STPSheetName)
                 .Cells.Select
            End With
          End With
          Call netUIHWND.Click(32, 92)
                         
          ''Upload Series
          Call netUIHWND.Click(131, 71)
          
          Delay 10000 , "Uploading Series.."   
          

                Set File = Sys.Process("EXCEL", 2)._
          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Information"")",60000)._
          Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Information"", 1)",60000)._
          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
          Waitchild("WPFObject(""PART_InactiveBorder"")",60000)
          
           If File.Exists= True Then
            SYS.Keys "[Enter]"
            Delay 2000 , "Please Wait"
          End If
          
              Set File = Sys.Process("EXCEL", 2)._
          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Question"")",60000)._
          Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Question"", 1)",60000)._
          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
          Waitchild("WPFObject(""PART_InactiveBorder"")",60000)
          
           If File.Exists= True Then
            Sys.Keys "N"
            Delay 2000 , "Please Wait"
          End If
          
       
                   
                  
          
      'For Unit Testcase(PRT)
      strUnitType = getSplitValue(strParameters,"Unit Type") 
      If strUnitType="%" then
        'Sys.Keys "Y"
        strTCRemarks="STP Timepoint created successfully with Timepoint:"&strTimepoints
        Call sCloseSource
        'msgbox "Createseries is completed"         
         Exit Sub
      End If
      
'      'For Daily Check Panel testcase(PRT)
'      strSeriesFreq = getSplitValue(strParameters,"Series Freq")     
'      If strSeriesFreq="D" then
'         With objSTPXls
'            With .WorkSheets(STPSheetName)
'                 strSeriesID=.Cells(intlastRow,1).Value
'            End With
'          End With
'          strTCRemarks="STP Series created successfully with Series ID="&strSeriesID
'          Sys.Keys "Y"
'          Exit Sub
'      End If
'          
'        If File.Exists Then
'          Sys.Keys "N"
'        End If
'        
'        With objSTPXls
'          With .WorkSheets(STPSheetName)
'               .Cells.Select
'                Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND 
'                Call netUIHWND.Click(296, 72)
'                Call sExcelFullHistory
'          End With
'        End With
'    End With
'  End With 
  log.Message  "New TP Created"
  strTCRemarks =  "Created TP for STP" 
  strTestCaseResult="PASS"
  
'  
'  
'  With objSTPXls
'    With .Sheets(STPSheetName).Select
'    End With      
'    With .WorkSheets(STPSheetName)
'        intcount=0
'        if strStartcolumn=0 then
'        End if
'        For intj= (strStartcolumn + 1) to lastColumn 
'          If IsEmpty(.UsedRange.Cells(intlastRow, intj).Value) = True AND (.UsedRange.Cells(r, intj).Text) ="" Then
'            if intcount<=5 then
'              .Cells(intlastRow,intj).select
'              .Cells(intlastRow,intj).Value=strTimepoints
'              strTimepoints=strTimepoints + 1
'            Else
'              Exit For
'            End if 
'            intcount=intcount+1 
'          End If  
'        Next
'        
'        strTimepoints = getSplitValue(strParameters,"Timepoints")        
'        If strTimepoints=6 then
'            ''Copy the Series for 2 rows
'            strStartColumnName=strStartcolumn + 1
'            strStartColumnName=GetColumnName(strStartColumnName) 
'            strEndSeriesColumn=intj
'            strEndSeriesColumn=GetColumnName(strEndSeriesColumn)
'            Delay(5000)
'        
'            With objSTPXls
'              With .Sheets(STPSheetName).Select
'              End With      
'              With .WorkSheets(STPSheetName)
'                 .Range(strStartColumnName & intlastRow & ":" & strEndSeriesColumn & intlastRow ).Select
'                  intTargetRow=intlastRow + 2
'                  .Range(strStartColumnName & intlastRow & ":" &strEndSeriesColumn & intlastRow).AutoFill  .Range(strStartColumnName & intlastRow & ":" & strEndSeriesColumn & intTargetRow), xlFillDefault
'              End With
'            END WITH
'        End If
'    
'        Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND 
'        ''Upload Series
'        Call netUIHWND.Click(131, 69)
'        'Delay 90000 , "Uploading.."
'        
'         'Mark Good Warning
'          Set File = Sys.Process("EXCEL", 2).Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Warning"")",5000)
'          If File.Exists= True Then
'            SYS.Keys "N"
'          End If
'             Set File = Sys.Process("EXCEL", 2)._
'          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Information"")",60000)._
'          Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Information"", 1)",60000)._
'          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
'          Waitchild("WPFObject(""PART_InactiveBorder"")",60000)
'          
'           If File.Exists= True Then
'            SYS.Keys "[Enter]"
'            Delay 2000 , "Please Wait"
'          End If
'          
'              
'           If File.Exists= True Then
'            Sys.Keys "N"
'            Delay 2000 , "Please Wait"
'          End If
'        
'
'          
'   
'        
'
'      Set File = Sys.Process("EXCEL", 2)._
'          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Question"")",60000)._
'          Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Question"", 1)",60000)._
'          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
'          Waitchild("WPFObject(""PART_InactiveBorder"")",60000)
'          
'       
'       ' For PRT testcase TC_Todo_30
'        strTimepoints = getSplitValue(strParameters,"Timepoints")
'        If strTimepoints=0 then
'           If File.Exists Then
'              Sys.Keys "Y"
'           End If
'           Exit Sub
'        End If
'        
'        If File.Exists Then
'          Sys.Keys "N"
'        End If
'        
        'For PRT testcase TC_Todo_11
        strTimepoints = getSplitValue(strParameters,"Timepoints")
        If strTimepoints=5 or strTimepoints=6 then
           With objSTPXls
          With .WorkSheets(STPSheetName)
               .Cells.Select
                Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND 
                Call netUIHWND.Click(296, 72) 'Click Refresh
                Call sExcelFullHistory
          End With
         End With          
         Exit Sub
        End If
              
        'Refresh Series
        With objSTPXls
          With .WorkSheets(STPSheetName)                 
                'Set wndEXCEL7 = Aliases.EXCEL.wndXLMAIN.XLDESK.wndEXCEL72
                .Cells(intlastRow,1).Select
                ' Call wndEXCEL7.Keys("^c")
               strSeriesID=.Cells(intlastRow,1).Value
               strSeriesID=.Cells(intlastRow,1).text
              .Cells(intlastRow,lastColumn).Select
          End With
        End With
         strTCRemarks =  "Created New Series for STP - "&strSeriesID 
    End With
  End With 
'  objSTPXls.Close
'  Delay(10000)
  objArray = Sys.FindAllChildren("ProcessName","EXCEL", 5,True)
  For i=0 to ubound(objArray)
    log.Message objArray(i).FullName
    set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*RUN*",1,True)
    If oSTP_ExcelObj.Exists = True Then
    Else
      objArray(i).Close
    End If
  Next
  Delay(5000)
  Call SClosesource()
End Sub 


Sub Test2
	Dim layoutPanel
	Dim gridControl
	Set layoutPanel = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.TabbedGroup.FastRenderPanelContentControl.LayoutPanel
	Call layoutPanel.Click(606, 21)
	Set gridControl = layoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.WaitControl.DockPanel.GridControl
	Call gridControl.ClickCellR(74, "Top Source Description")
	Call gridControl.PopupMenu.Click("Open Source")
	
	
End Sub

Sub Test3
	Call Aliases.explorer.wndShell_TrayWnd.ReBarWindow32.MSTaskSwWClass.MSTaskListWClass.Click(490, 10)
	Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.TabbedGroup.FastRenderPanelContentControl.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.WaitControl.DockPanel.GridControl.ClickCell(111, "Top Source Description")
End Sub

Sub test200
Set gridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("TabbedGroup", "", 2).WPFObject("FastRenderPanelContentControl", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("DockPanel", "", 1).WPFObject("GridControl").WPFObject("TodoListCounterTableView")
Call gridControl.SelectRow(1)
Call gridControl.ClickCellR(74, "Top Source Description")
Call gridControl.PopupMenu.Click("Open Source")

End Sub



Sub Test4
	Dim gridControl
	Set gridControl = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.TabbedGroup.FastRenderPanelContentControl.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.WaitControl.DockPanel.GridControl
	Call gridControl.ClickCell(0, "Top Source Description")
	Call gridControl.ClickCell(1, "Top Source Description")
	Call gridControl.ClickCellR(1, "Top Source Description")
	Call gridControl.PopupMenu.Click("Open Source")
End Sub

'Sub sToDo_CheckAll(strParameters)
Sub sToDo_CheckAll()

'  strLevel1=getSplitValue(strParameters,"Source")
'  strLevel2=getSplitValue(strParameters,"Qcname")
'  strLevel3=getSplitValue(strParameters,"Workspace")
  
  strLevel1="Test"
  strLevel2="PRT111"
  strLevel3="PRT222"
  strEnvi = "Edge ( US Integration )" 


  blnFlag1=False
  blnFlag2=False
  blnFlag3=False
  
  'ToDo:Pending STP
  Call sAutoHidePanelDock("Pending STP")
  Call Sys.Process("EdgeClient").Refresh
  strTemp="WPFObject(""LayoutGroup"", """", 1)"
  Set objLayout=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  
  strTemp="WPFObject(""Button"", ""Refresh"", 1)"
  Set objRefresh = objLayout.FindChild("Name",strTemp,50,true) 
  If objRefresh.Exists = TRUE then
    Call objRefresh.Click
  End if
  Call sEdgeProcessor
  
  strTemp="WPFObject(""GridControl"")"		
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
  strTemp="WPFObject(""SourceLogTableView"")"   
  Set objTableView=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
  
  
  If objGridControl.Exists = TRUE then
    Call objGridControl.ClickColumnHeaderRXY("Top Source Description", 94, 8)
  End if
  
  SYS.Keys "^F"
  Delay 1000,""
  
  strTemp="WPFObject(""ContentControlEx"", ""Show Search Panel"", 2)"
  Set objSearchMenu = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true) 
  If objSearchMenu.Exists = TRUE then
    Call objSearchMenu.Click
  End if
  
  'Clicking the search text box
  Call objTableView.Click(95, 21)
  Call objTableView.Keys(strLevel2)
  Delay 5000,"Loading Grid Rows"
  
 
  'Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("GridControl")
  'Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("TabbedGroup", "", 2).WPFObject("FastRenderPanelContentControl", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("GridControl")
  strTemp="WPFObject(""GridControl"")"  	
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
 	Call objGridControl.ExpandGroup(0,true)
		Delay 5000,"Loading Grid Rows"
  
'  intRow1=objGridControl.FindRow("Top Source Description",strLevel2)
'  If intRow1>=0 And intRowCount1 > 0 then
'    blnFlag1=True
'  End If

	intRow1 = objGridControl.wRowCount
  If intRow1 > 0 then 
    blnFlag1=True
  End If
  
  Delay 2000
  Call objTableView.Click(226, 18) 'Click search close button
  Delay 2000
  
  Set objLayout=nothing
  Set objGridControl=nothing
 
  Call sAutoHidePanelHide("Pending STP")
  
  'ToDo:Pending MG/Released
  Call sAutoHidePanelDock("Pending MG/Released")
  Call Sys.Process("EdgeClient").Refresh
  strTemp="WPFObject(""LayoutGroup"", """", 1)"
  Set objLayout=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  
  strTemp="WPFObject(""Button"", ""Refresh"", 1)"
  Set objRefresh = objLayout.FindChild("Name",strTemp,50,true) 
  If objRefresh.Exists = TRUE then
    Call objRefresh.Click
  End if
  Call sEdgeProcessor
 
  strTemp="WPFObject(""GridControl"")"  	
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
  strTemp="WPFObject(""TodoListCounterTableView"")"	
  Set objTableView = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
  
  
  
  If objGridControl.Exists = TRUE then
    Call objGridControl.ClickColumnHeaderRXY("Top Source Description", 94, 8)
  End if
  
  SYS.Keys "^F"
  Delay 1000,""
  
  strTemp="WPFObject(""ContentControlEx"", ""Show Search Panel"", 2)"
  Set objSearchMenu = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true) 
  If objSearchMenu.Exists = TRUE then
    Call objSearchMenu.Click
  End if
  
  'Clicking the search text box
  Call objTableView.Click(95, 21)
  Call objTableView.Keys(strLevel2)
  Delay 5000,"Loading Grid Rows"
  
 
  'Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1)
   'Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("TabbedGroup", "", 2).WPFObject("FastRenderPanelContentControl", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("DockPanel", "", 1).WPFObject("GridControl") 
  strTemp="WPFObject(""GridControl"")"  	
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
  Call objGridControl.ExpandGroup(0,true)
  Delay 5000,"Loading Grid Rows"
  
  'intRow2 = objGridControl.FindRow("Top Source Description",strLevel2)	
'		If intRow1>=0 And intRowCount2 > 0 then 
'    blnFlag2=True
'  End If

		intRow2 = objGridControl.wRowCount
  If intRow2 > 0 then 
    blnFlag2=True
  End If
  
  Delay 2000
  Call objTableView.Click(226, 18) 'Click search close button
  Delay 2000
  
  Set objLayout=nothing
  Set objGridControl=nothing
  
    
  Call sAutoHidePanelHide("Pending MG/Released")
  
  'ToDo:Update Log
  Call sAutoHidePanelDock("Update Log")
  Call Sys.Process("EdgeClient").Refresh


  strTemp="WPFObject(""LayoutGroup"", """", 1)"
  Set objLayout=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  
  strTemp="WPFObject(""Button"", ""Refresh"", 1)"
  Set objRefresh = objLayout.FindChild("Name",strTemp,50,true) 
  If objRefresh.Exists = TRUE then
    Call objRefresh.Click
  End if
  Call sEdgeProcessor
  

 	strTemp="WPFObject(""GridControl"")"		
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
  strTemp="WPFObject(""SourceLogTableView"")"  
	 Set objTableView=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
    
  If objGridControl.Exists = TRUE then
    Call objGridControl.ClickColumnHeaderRXY("Top Source Description", 94, 8)
  End if
  
  SYS.Keys "^F"
  Delay 1000,""
  
  strTemp="WPFObject(""ContentControlEx"", ""Show Search Panel"", 2)"
  Set objSearchMenu = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true) 
  If objSearchMenu.Exists = TRUE then
    Call objSearchMenu.Click
  End if
  
  'Clicking the search text box
  Call objTableView.Click(95, 21)
  Call objTableView.Keys(strLevel2)
  Delay 5000,"Loading Grid Rows"
  
		strTemp="WPFObject(""GridControl"")"		
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,true)
    For i = 0 to objGridControl.wGroupCount-1
    If Trim(cstr(ucase(objGridControl.DataController.GroupInfo.Item(i).GroupValue.OleValue)))=Trim(cstr(ucase(strLevel1))) then
        Call objGridControl.ExpandGroup(i,true)
'        intRow3=objGridControl.FindRow("Top Source Description",strLevel2)
'        If intRow3>=0 then
'          blnFlag3=True
'        End If
							 intRow3 = objGridControl.wRowCount
						  If intRow3 > 0 then 
						    blnFlag3=True
						  End If
        If blnFlag1=True and blnFlag2=True and blnFlag3=True then
          strTCRemarks="Found a record present in all three ToDo panels"
          'Call objGridControl.ClickRowIndicatorR(intRow3)
										'strTemp="WPFObject(""MenuItem"", ""Open Source"", 3)"
'          Set objSource=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
'          Call objSource.Click
											Call objGridControl.ClickCell(1, "Top Source Description")
											Call objGridControl.ClickCellR(1, "Top Source Description")
											Call objGridControl.PopupMenu.Click("Open Source")
					 End If     
        Delay 5000,"Loading Grid Rows"
        Exit For 
    End If
  Next
  
  Delay 2000
  Call objTableView.Click(226, 18) 'Click search close button
  Delay 2000
  
  Set objLayout=nothing
  Set objGridControl=nothing
    
  Call sAutoHidePanelHide("Update Log")

End Sub

Sub sFileRepository()
 
		On Error Resume Next
		strEnvi = "Edge ( US Integration )"
		Dim objDockPanel,objLayoutGroup,objFileRepositoryView,objGrid,objCombobox,objHwndSource,objGridView,objTemp,objCellItemsControl,gridCellContentPresenter
  Dim strCountry,objEdge,strTemp,objText
  
  strFooter=getSplitValue(strParameters,"FOOTER")''Footer Name
  strCountry=getSplitValue(strParameters,"COUNTRY")''Country Name
'		strFooter = "http://test"
'		strCountry = "Test"
  Dim strDes,strText
  strDes=aqDateTime.Now
  strText=Replace(strDes,"/","-")
  DescText=Replace(strText,":","_")
  strFooter=strFooter &""& strText

 
  Set objGridView= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("LinkTableControl")
		Call objGridView.ClickCell(0, "Group")
  Call objGridView.ClickCell(0, "Group")
  Call objGridView.ClickCell(0, "Group")
  SYS.Keys "[Down][Enter]"
  Delay(1000)
  
  Call objGridView.ClickCell(0, "File Name / Address")
  Call objGridView.ClickCell(0, "File Name / Address")  
		Set objFileAddress =Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("LinkTableControl").WPFObject("LinkTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 3).WPFObject("InplaceBaseEdit", "", 1).WPFObject("TextEdit", "", 1)  
		Call objFileAddress.Keys(strFooter)
		Call objFileAddress.Keys("[Tab]")
		Delay(1000)
		Set objFileAddress =Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("LinkTableControl").WPFObject("LinkTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 4).WPFObject("InplaceBaseEdit", "", 1).WPFObject("TextEdit", "", 1)  
		Call objFileAddress.Keys(strFooter)
		Call objFileAddress.Keys("[Tab]")
		Delay(1000)
  Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("StackPanel", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 1).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Import", 2).Click
  Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Import Links").WPFObject("CustomMessageBoxWindow", "Import Links", 1).WPFObject("Grid", "", 1).WPFObject("PART_InactiveBorder")
 If objTemp.Exists = True then
      Sys.Keys("[Enter]")
   End If
  
  Call sCloseFileInsetLink()
  Delay(1000)
  Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("Adorner").WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("StackPanel", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 9).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Refresh", 2).Click
	 Call sEdgeProcessor 
  Set gridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("Adorner").WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("FileRepositoryTableControl")
		intRowIndex=gridControl.FindRow("File Name / Address",strFooter)
  If intRowIndex>=0 then
   strTCRemarks="html / url in the country added Successfully"
			msgbox intRowIndex &"Done"
  End If
		  
  Call sCloseFileMaintaince()

  
 
End Sub



Sub Test5
'	Dim edgeClient
'	Set edgeClient = Aliases.EdgeClient
'	Call edgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel2.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.DockPanel.Grid.BarManager.LinkTableControl.ClickCell(0, "Group")
'	Call edgeClient.HwndSource_PopupRoot.PopupRoot.Decorator.NonLogicalAdornerDecorator.PopupBorderControl.PopupContentContainer.NonLogicalDecorator.PopupContentControl2.ComboboxedititemEdgeclientModulesInfrastru2.Click(75, 6)
	Set objTableView = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("LinkTableControl")
	Call objTableView.ClickCell(0,"Group")
	
End Sub



Sub sHome_MasterMaintenance()

On Error Resume Next
Dim objEdgeMDI,strObject,strObj,objsrc,strTemp,objEdgeFilter,objUnitPannel
    'strObject = "WPFObject(""HwndSource: RibbonWindow"")"
				 strObject = "WPFObject(""HwndSource: Shell"", """& strEnvi &""")"
    Set objEdgeMDI = Sys.Process("EdgeClient").WaitChild(strObject, 600000)
    If objEdgeMDI.Exists then
      'Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("RibbonControl").WPFObject("RibbonSelectedPageControl", "", 1).WPFObject("RibbonPagesControl", "", 1).WPFObject("RibbonPageGroupsControl", "", 1).WPFObject("RibbonPageGroupControl", "", 1).WPFObject("BarItemLinkInfo", "", 11).WPFObject("BarSubItemLinkControl", "", 1).Click
      Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("RibbonControl").WPFObject("RibbonSelectedPageControl", "", 1).WPFObject("RibbonPagesControl", "", 1).WPFObject("RibbonPageGroupsControl", "", 1).WPFObject("RibbonPageGroupControl", "", 1).WPFObject("BarItemLinkInfo", "", 11).WPFObject("BarSubItemLinkControl", "", 1).Click
						Set objEdgeFilter= Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1)
						strTemp="WPFObject(""ContentControlEx"", ""Unit"", 2)"
      Set objTemp=objEdgeFilter.FindChild("Name",strTemp,50)
      If objTemp.Exists = TRUE then
        Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 1).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Unit", 2).Click
        Call sEdgeProcessor								
								 Set objUnitPannel = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1)
        If objUnitPannel.Exists = True Then 
									log.Message "Opened Unit"
        	strTCRemarks="Opened Unit"
									msgbox strTCRemarks
								End If
						Else
        strTestCaseResult = "ABORT"
        Exit Sub  
      End If
    End if

				
				If Err.Number <> 0 then
      Log.Message Err.Description 
    End If
 
    Set ObjSys=Nothing
    Set objsrc=Nothing

End Sub



'Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("LayoutTreeControl").WPFObject("LayoutTreeListView").Nodes_2.Item(1)..Nodes_2.Item(1).ExpandAll

Sub Test6

		nRowCnt =250
		strMultiplier = "4426"
			strDate = Split(date, "/")
				ReqDate = strDate(1)& " " &MonthName(strDate(0),True)&" "&strDate(2)   
				
				For i= 1 to nRowCnt				
							strLastUpdate =Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("WaitControl").WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("UnitsGridControl").WPFObject("UnitsTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", i).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 7).WPFObject("InplaceBaseEdit", "", 1).DisplayText
							strMultiplier1 =Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("WaitControl").WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("UnitsGridControl").WPFObject("UnitsTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", i).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 4).WPFObject("InplaceBaseEdit", "", 1).DisplayText
		    	If InStr( strLastUpdate, ReqDate) > 0 And Trim(strMultiplier1) = "1"&Trim(strMultiplier) Then
							 strTCRemarks="New Unit Created- " & strUnit 
							End If					
				Next

End Sub


Sub Test7
	'Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.WaitControl.DockPanel.Grid.UnitsGridControl.ClickCell(1, 29)
	Call Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("WaitControl").WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("UnitsGridControl").ClickCell(10,"UMULTIPLIER")
'	Set GridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("WaitControl").WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("UnitsGridControl")
'    nRowCnt = GridControl.wRowCount
'				Entering UMULTIPLIER ,AMTCUR
'    Call GridControl.ClickCell(10,"Description")
    
End Sub

Sub Test8
Dim objAbc,objAbc1
Set objAbc = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("DockPanel", "", 1).WPFObject("KeySeriesTranslationActionGridControl").WPFObject("KeySeriesTranslationActionTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 2).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 4).WPFObject("PART_Editor")
Set objAbc1 = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("DockPanel", "", 1).WPFObject("KeySeriesTranslationActionGridControl").WPFObject("KeySeriesTranslationActionTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 3).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 4).WPFObject("PART_Editor")
msgbox objAbc.text.OleValue
msgbox objAbc1.text.OleValue
End Sub


Sub sHome_Report()
Dim objEdgeMDI,strObject,strObj,objsrc,strTemp

  strObject = "WPFObject(""HwndSource: Shell"", """& strEnvi &""")"
  Set objEdgeMDI = Sys.Process("EdgeClient").WaitChild(strObject, 600000)
  If objEdgeMDI.Exists then
    strTemp="WPFObject(""TextBlock"", ""Report"", 1)"
    Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).FindChild("Name",strTemp,14,True)
    If objTemp.Exists = False then
      '  Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("TextBlock", "Source", 1)
      'strTemp="WPFObject(""ContentControl"", ""Report"", 1)"
      Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("RibbonControl").WPFObject("RibbonSelectedPageControl", "", 1).WPFObject("RibbonPagesControl", "", 1).WPFObject("RibbonPageGroupsControl", "", 1).WPFObject("RibbonPageGroupControl", "", 1).WPFObject("BarItemLinkInfo", "", 17).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("TextSplitterControl", "", 1).WPFObject("ContentControl", "Report", 1)
      If objTemp.Exists = True then
        objTemp.Click
								Call sEdgeProcessor
      	log.Message "Report layout is opened"
      End If       
    Else
      log.Message "Report is already opened"
      strTCRemarks="Report is already opened"
      Exit Sub  
    End If
  Else
    log.Message "RibbonWindow not found"
  End If
		
    If Err.Number <> 0 then
    Log.Message Err.Description 
				'  Set ObjSys=Nothing
'  Set objsrc=Nothing
  
End If


End Sub




Sub Test9
	Dim sysTreeView32
	Set sysTreeView32 = Aliases.EXCEL.dlgBrowseForFolder.SHBrowseForFolderShellNameSpaceControl.SysTreeView32	
	'Set abc = aqEnvironment.GetEnvironmentVariable("USERPROFILE") 
	'Set def = aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")
	msgbox aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")
	msgbox aqEnvironment.GetEnvironmentVariable("USERPROFILE") 
	Call sysTreeView32.ClickItem("|Desktop|T- Ganesh Maduru|My Documents|Edge|EdgeAddinStorage")
	'Call sysTreeView32.ClickItem(aqEnvironment.GetEnvironmentVariable("USERPROFILE") &"|My Documents|Edge|EdgeAddinStorage|"& aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d") )
End Sub




 

Sub Test10
	Dim dlgBrowseForFolder
	Set dlgBrowseForFolder = Aliases.EXCEL.dlgBrowseForFolder	
	FilePath ="|Desktop|Computer|Local Disk (C:)|Users|t-gmaduru|My Documents|Edge|EdgeAddinStorage|"
	FilePath = FilePath & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")	
	Call dlgBrowseForFolder.SHBrowseForFolderShellNameSpaceControl.SysTreeView32.ClickItem( FilePath )
	dlgBrowseForFolder.btnOK.ClickButton
End Sub



Sub DailyCheckPointTimePoint1(strParameters)
On Error Resume Next

  Dim strSeriesName,strSourceSeriesName,strSeriesSourceCode,strSeriesStatus,strSeriesType,STPSheetName
  Dim strSeriousCountry,strOutputUnit,strSeriesNature,strSeriesFreq,strSourceUnit,strUnitType,strTestDataFile
  Dim strAliasName,strFileName,STP,strTimepoints,strText,strStartcolumn
  Dim i,FilePath,intcount,intj, intCol
  Dim objArray,oSTP_ExcelObj,objSTPXls,objActiveWB,netUIHWND,wndEXCEL7
  Dim intlastRow,lastColumn,inti,strTemp,objErrmsg,objOkClick,File
  
  Const xlFillDefault = 0
  strStartcolumn=0
'  STP= getSplitValue(strParameters,"STP") 
'  strTestDataFile=getSplitValue(strParameters,"TestDataFile") 
'  STPSheetName= getSplitValue(strParameters,"STPSheetName")
'  strSeriesName = getSplitValue(strParameters,"Series Name")
'  strSourceSeriesName = getSplitValue(strParameters,"Source Series Name")
'  strSeriesSourceCode=  getSplitValue(strParameters,"Series Source Code")
'  strSeriesStatus =  getSplitValue(strParameters,"Series Status")
'  strSeriesType =  getSplitValue(strParameters,"Series Type")
'  strSeriousCountry = getSplitValue(strParameters,"Serious Country")
'  strOutputUnit=  getSplitValue(strParameters,"Output Unit")
'  strSeriesNature =  getSplitValue(strParameters,"Series Nature")
'  strSeriesFreq = getSplitValue(strParameters,"Series Freq")
'  strSourceUnit =  getSplitValue(strParameters,"Source Unit")
'  strUnitType = getSplitValue(strParameters,"Unit Type") 
'  strTimepoints = getSplitValue(strParameters,"Timepoints")
  
  'For Unit testcase(PRT)
  If strUnitType="ZZZ" then
   strUnitType=strUnit
  End If
  

  STPSheetName="D_1"
  STP="Test Source 1"
  strTestDataFile="YYY-Automation-Test Source 1"
  strSeriesName="test-series"
  strSourceSeriesName="test-series"
  strSeriesSourceCode="test-series"
  strSeriesStatus="T"
  strSeriesType="Key"
  strSeriousCountry="YYY"
  strOutputUnit="NA"
  strSeriesNature="R"
  strSeriesFreq="D"
  strSourceUnit="NA"
  strUnitType="%"
  strTimepoints="5"
    
  objArray = Sys.FindAllChildren("ProcessName","EXCEL", 1,True)
  For i=0 to ubound(objArray)
    log.Message objArray(i).FullName
    set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*" & strTestDataFile & "*",1,True)
    If oSTP_ExcelObj.Exists = True Then
      strAliasName=objArray(i).mappedname
      strFileName=oSTP_ExcelObj.WndCaption
      If instr(strFileName,"Microsoft Excel")>0 then
        strFileName=GetFileName(strFileName,"Microsoft Excel")
      Else
        strFileName=GetFileNameExcel13(strFileName," - Excel")
      End If
      FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")
      FilePath=FilePath & "\" & iif(instr(strFileName,"xlsx") > 0,strFileName,strFileName & ".xlsx")  
      log.Message FilePath
      Exit For
    Else
      log.Message "STP file not found in " & objArray(i).FullName
    End If
  Next
  
  Delay(2000)
  
  Set objSTPXls=GetObject(FilePath)
  With objSTPXls
    With .Sheets(STPSheetName).Select
    End With

    With .WorkSheets(STPSheetName)
      Dim r
        delay Status_Wait, "Finding last Row the Excel sheets.. Pls wait.."
        For r = 1 To .UsedRange.Rows.Count
          If IsEmpty(.UsedRange.Cells(r, 1).Value) = True AND (.UsedRange.Cells(r, 1).Text) ="" Then           
           intlastRow=r           
           Exit For
          End  If 
        Next
        inti=3
        intCnt = 0
        lastColumn=.UsedRange.Columns.Count
       For inti = 3 to lastColumn
          strText=.Cells(2,inti)
          .Cells(intlastRow,inti).Select
          If isDate(strText)  then 
             strStartcolumnDate=inti
              If  strText = Date  then
                  strStartcolumn=inti
                   'msgbox strStartcolumn
                   intCnt = 1
                   Exit For
              End if 
          End If          
       Next 
        if intCnt = 0 Then
                Call Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND.Click(239, 74)
                Delay 1000
                strDate = Split(Now, " ")
                Sys.Process("EXCEL", 2).WinFormsObject("AddDateForm").WinFormsObject("tableLayoutPanel1").WinFormsObject("panel10").WinFormsObject("tableLayoutPanel3").WinFormsObject("fromButton").Click
                Sys.Process("EXCEL", 2).WinFormsObject("AddDateForm").WinFormsObject("tableLayoutPanel1").WinFormsObject("panel10").WinFormsObject("tableLayoutPanel3").WinFormsObject("endPicker").Set_Text(strDate(0))
                Delay 1000
                Sys.Process("EXCEL", 2).WinFormsObject("AddDateForm").WinFormsObject("tableLayoutPanel1").WinFormsObject("tableLayoutPanel2").WinFormsObject("okButton").Click
                Call sEdgeProcessor
                lastColumn=.UsedRange.Columns.Count
                For inti = 3 to lastColumn
                  strText=.Cells(2,inti)
                  .Cells(intlastRow,inti).Select
                  If isDate(strText)  then
                    strStartcolumn=inti
                    'msgbox strStartcolumn
                    Exit For
                  End If 
                Next  
        End If
        
               
          strTimepoints = getSplitValue(strParameters,"Timepoints")
          If strTimepoints=6 then
              ''Copy the Series for 1 row 
              strEndSeriesColumn=strStartcolumn-3
              strEndSeriesColumn=GetColumnName(strEndSeriesColumn)
              Delay(5000)
        
              With objSTPXls
                With .Sheets(STPSheetName).Select
                End With      
                With .WorkSheets(STPSheetName)
                   .Range("C" & intlastRow & ":" & strEndSeriesColumn & intlastRow ).Select
                    intTargetRow=intlastRow + 1
                    .Range("C" & intlastRow & ":" &strEndSeriesColumn & intlastRow).AutoFill  .Range("C" & intlastRow & ":" & strEndSeriesColumn & intTargetRow), xlFillDefault
																				.Cells(intlastRow+1,intFreqColumn).Select
																				.Cells(intlastRow+1,intFreqColumn).Value=strSeriesFreq	
																			'	.Cells(intlastRow+2,intFreqColumn).Select
																			'	.Cells(intlastRow+2,intFreqColumn).Value=strSeriesFreq																														       
                End With
              END WITH
          End If
          
          Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND  
          
          ''Mark Good
          'Delay 3000,"Mark Good..."
          With objSTPXls
            With .WorkSheets(STPSheetName)
                 .Cells.Select
            End With
          End With
          Call netUIHWND.Click(32, 92)
                         
          ''Upload Series
          Call netUIHWND.Click(131, 71)
          'Delay 95000 , "Uploading Series.."
          
          'Mark Good Warning
          Set File = Sys.Process("EXCEL", 2).Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Warning"")",5000)
          If File.Exists= True Then
            SYS.Keys "N"
          End If
		  
		  ''information Msgbox

        Set File = Sys.Process("EXCEL", 2)._
          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Information"")",60000)._
          Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Information"", 1)",60000)._
          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
          Waitchild("WPFObject(""PART_InactiveBorder"")",60000)
          
           If File.Exists= True Then
            SYS.Keys "[Enter]"
            Delay 2000 , "Please Wait"
          End If
        
        ''Question Msgbox
       
        
          Set File = Sys.Process("EXCEL", 2)._
          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Question"")",60000)._
          Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Question"", 1)",60000)._
          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
          Waitchild("WPFObject(""PART_InactiveBorder"")",60000)
										
										'For Unit Testcase(PRT)
      strUnitType = getSplitValue(strParameters,"Unit Type") 
      If strUnitType="ZZZ" then
        Sys.Keys "Y"
        strTCRemarks="STP Series created successfully with Unit:"&strUnit
        Call sCloseSource
        Exit Sub
      End If
          
           If File.Exists= True Then
            Sys.Keys "N"
            Delay 2000 , "Please Wait"
          End If
          
      
      
      'For Daily Check Panel testcase(PRT)
      strSeriesFreq = getSplitValue(strParameters,"Series Freq")
      If strSeriesFreq="D" then
         With objSTPXls
            With .WorkSheets(STPSheetName)
                 strSeriesID=.Cells(intlastRow,1).Value
                 DescText = intlastRow
                 
            End With
          End With
          strTCRemarks="STP Series created successfully with Series ID="&strSeriesID
          Sys.Keys "Y"
          Exit Sub
      End If
          
        If File.Exists Then
          Sys.Keys "N"
        End If
        
        With objSTPXls
          With .WorkSheets(STPSheetName)
               .Cells.Select
                Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND 
                Call netUIHWND.Click(296, 72)
                Call sExcelFullHistory
          End With
        End With
    End With
  End With 
  log.Message  "New Series Created"
  strTCRemarks =  "Created Series for STP" 
  strTestCaseResult="PASS"
  
  
  
  With objSTPXls
    With .Sheets(STPSheetName).Select
    End With      
    With .WorkSheets(STPSheetName)
        intcount=0
        if strStartcolumn=0 then
        End if
        For intj= (strStartcolumn + 1) to lastColumn 
          If IsEmpty(.UsedRange.Cells(intlastRow, intj).Value) = True AND (.UsedRange.Cells(r, intj).Text) ="" Then
            if intcount<=5 then
              .Cells(intlastRow,intj).select
              .Cells(intlastRow,intj).Value=strTimepoints
              strTimepoints=strTimepoints + 1
            Else
              Exit For
            End if 
            intcount=intcount+1 
          End If  
        Next
        
'        strTimepoints = getSplitValue(strParameters,"Timepoints")
'        If strTimepoints=6 then
'            ''Copy the Series for 1 row
'            strStartColumnName=strStartcolumn + 1
'            strStartColumnName=GetColumnName(strStartColumnName) 
'            strEndSeriesColumn=intj
'            strEndSeriesColumn=GetColumnName(strEndSeriesColumn)
'            Delay(5000)
'        
'            With objSTPXls
'              With .Sheets(STPSheetName).Select
'              End With      
'              With .WorkSheets(STPSheetName)
'                 .Range(strStartColumnName & intlastRow & ":" & strEndSeriesColumn & intlastRow ).Select
'                  intTargetRow=intlastRow + 1
'                  .Range(strStartColumnName & intlastRow & ":" &strEndSeriesColumn & intlastRow).AutoFill  .Range(strStartColumnName & intlastRow & ":" & strEndSeriesColumn & intTargetRow), xlFillDefault
'              End With
'            END WITH
'        End If
    
        Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND 
        ''Upload Series
        Call netUIHWND.Click(131, 69)
        'Delay 90000 , "Uploading.."
        
         'Mark Good Warning
          Set File = Sys.Process("EXCEL", 2).Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Warning"")",5000)
          If File.Exists= True Then
            SYS.Keys "N"
          End If
        
        ''Waiting for Msgbox
        Set File = Sys.Process("EXCEL", 2)._
          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Information"")",60000)._
          Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Information"", 1)",60000)._
          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
          Waitchild("WPFObject(""PART_InactiveBorder"")",60000)
          
           If File.Exists= True Then
            SYS.Keys "[Enter]"
            Delay 2000 , "Please Wait"
          End If
		  
		    ''Question Msgbox
          
              Set File = Sys.Process("EXCEL", 2)._
          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Question"")",60000)._
          Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Question"", 1)",60000)._
          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
          Waitchild("WPFObject(""PART_InactiveBorder"")",60000)
        
       ' For PRT testcase TC_Todo_30
       strTimepoints = getSplitValue(strParameters,"Timepoints")
        If strTimepoints=0 then
           If File.Exists= True Then
              Sys.Keys "Y"
              Delay 2000 , "Please Wait"
           End If
           Exit Sub
        End If
        
            If File.Exists= True Then
            Sys.Keys "N"
            Delay 2000 , "Please Wait"
          End If
        
        'For PRT testcase TC_Todo_11
       strTimepoints = getSplitValue(strParameters,"Timepoints")
        If strTimepoints=5 Then 'or strTimepoints=6 then
           With objSTPXls
          With .WorkSheets(STPSheetName)
               .Cells.Select
                Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND 
                Call netUIHWND.Click(296, 72) 'Click Refresh
                Call sExcelFullHistory
          End With
         End With          
         Exit Sub
        End If
              
        'Refresh Series
        With objSTPXls
          With .WorkSheets(STPSheetName)                 
                'Set wndEXCEL7 = Aliases.EXCEL.wndXLMAIN.XLDESK.wndEXCEL72
                .Cells(intlastRow,1).Select
                ' Call wndEXCEL7.Keys("^c")
               strSeriesID=.Cells(intlastRow,1).Value															
               strSeriesID=.Cells(intlastRow,1).text															
              .Cells(intlastRow,lastColumn).Select
          End With
        End With
         strTCRemarks =  "Created New Series for STP - "&strSeriesID 
    End With
  End With 
'  objSTPXls.Close
'  Delay(10000)
  objArray = Sys.FindAllChildren("ProcessName","EXCEL", 5,True)
  For i=0 to ubound(objArray)
    log.Message objArray(i).FullName
    set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*RUN*",1,True)
    If oSTP_ExcelObj.Exists = True Then
    Else
      objArray(i).Close
    End If
  Next
  Delay(5000)
  Call SClosesource()
End Sub 

Sub Test11
  
  Call Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND.Click(239, 74)
  Delay 1000
  strDate = Split(Now, " ")
  Sys.Process("EXCEL", 2).WinFormsObject("AddDateForm").WinFormsObject("tableLayoutPanel1").WinFormsObject("panel10").WinFormsObject("tableLayoutPanel3").WinFormsObject("fromButton").Click
  Sys.Process("EXCEL", 2).WinFormsObject("AddDateForm").WinFormsObject("tableLayoutPanel1").WinFormsObject("panel10").WinFormsObject("tableLayoutPanel3").WinFormsObject("endPicker").Set_Text(strDate(0))
  Delay 1000
  Sys.Process("EXCEL", 2).WinFormsObject("AddDateForm").WinFormsObject("tableLayoutPanel1").WinFormsObject("tableLayoutPanel2").WinFormsObject("okButton").Click
End Sub

Sub Test12
  strTemp="WPFObject(""CheckListTableView"")"
  Set objTableView=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)  
  strTemp = "WPFObject(""GroupRowDefaultSummaryItemControl"", """", 1)"
  Set objRowCount=objTableView.FindChild("Name",strTemp,50,True)
  intRowCnt = objRowCount.Text
  msgbox intRowCnt    
End Sub


Sub sExcell()

'create the excel object
	Set objExcel = CreateObject("Excel.Application") 

'view the excel program and file, set to false to hide the whole process
	objExcel.Visible = True 

'add a new workbook
	Set objWorkbook = objExcel.Workbooks.Add   
  
  'set a cell value at row 3 column 5
	objExcel.Cells(3,5).Value = "new value"

'change a cell value
	objExcel.Cells(3,5).Value = "something different"
	
'delete a cell value
	objExcel.Cells(3,5).Value = ""

'get a cell value and set it to a variable
	r3c5 = objExcel.Cells(3,5).Value
  
  'save the new excel file (make sure to change the location) 'xls for 2003 or earlier
	objWorkbook.SaveAs "C:\vbsTest.xlsx" 
  
  

End Sub



Sub Test13
  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.BarManager.ClickItem("[0]|Refresh")
End Sub


Sub sConfirm()

strTemp="WPFObject(""TextBlock_Message"")"
Set objText = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Confirm save.").FindChild("Name",strTemp,10,True)
If objText.Exists Then
  msgbox objText.Text
End If
End Sub



Sub Test14
    strTemp="WPFObject(""PendingChangeGridControl"")"    
      Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      Set objTableView = objGridControl.WPFObject("PendingChangeTableView")
      Call objGridControl.ClickCellR(0, "Created by")
      Delay 200
  msgbox Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 2).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Upload Workspace", 2).WPFControlText
End Sub

Sub sUploadFromSWV(strParameters)
'Sub sUploadFromSWV()

    strCategory=getSplitValue(strParameters,"CATEGORY")
'    strCategory="SOURCE_62_64"
'    strEnvi = "Edge ( US Integration )" 
    
    Call sOpenSourceWSViewer()
    Delay 1000 
On Error Resume Next

''Selecting Records 
      strTemp="WPFObject(""PendingChangeGridControl"")"
    
    Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      Set objTableView = objGridControl.WPFObject("PendingChangeTableView")
      intRowcnt=objGridControl.wRowCount
      
      
      
      'Testcase:SOURCE56: Verifying "Upload Workspace" button by selecting multiple workspaces
      If strCategory ="TC_SOURCEWV_06" Then 
          For intI = 0 to intRowcnt-1      
            Call objGridControl.ClickCell(intI , "Created by", skCtrl)
           Next   
            
          StrTemp = "WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"          
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",StrTemp,60,true)
          If objTemp.IsEnabled = False Then             
            strTCRemarks= "Upload WorkSpace Button is Inactive when we select multiple workspaces---"
            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_06 Testcase Pass"
            strTestCaseResult="PASS" 
            Exit Sub 
          Else       
            strTCRemarks= "Upload WorkSpace Button is Active when we select multiple workspaces---"
            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_06 Testcase Fail"            
            strTestCaseResult="FAIL" 
            Exit Sub  
          End If   
       End If  

       
         
     'Testcase:SOURCE55: Verifying "Upload Workspace" button by selecting Single Workspaces
      If strCategory ="TC_SOURCEWV_05" Then                
          Call objGridControl.ClickCell(0 , "Created by")              
          'Verifying Enabling status for Open workspace button"      
          StrTemp = "WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"          
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",StrTemp,60,true)
          If objTemp.IsEnabled = True Then             
            strTCRemarks= "Upload WorkSpace Button is Active when we select single workspaces---"
            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_05 Testcase Pass"
            strTestCaseResult="PASS" 
            Exit Sub  
          Else       
            strTCRemarks= "Upload WorkSpace Button is Inactive when we select single workspaces---"
            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_05 Testcase Fail"
            strTestCaseResult="FAIL"
            Exit Sub                                   
          End If   
       End If
       
       
      'Testcase"Source57 : Upload the Workspace From SourceWorkspace Viewer window
      If strCategory ="TC_SOURCEWV_07" Then                
          Call objGridControl.ClickCell(0 , "Created by")
          'Click on Upload Workspace button
          StrTemp = "WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"          
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",StrTemp,60,true)
          If objTemp.IsEnabled = True Then  
              objTemp.Click
              Delay 2000
              'strTemp = "WPFObject(""TextBlock_Message"")"
              strTemp="WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Please Confirm."")"
              'Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.").WPFObject("CustomMessageBoxWindow", "Please Confirm.", 1).WPFObject("Grid", "", 1).WPFObject("PART_InactiveBorder")
              Set objConfirm=Sys.Process("EdgeClient").WaitChild(strTemp,60000)
              'strTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.").WPFObject("CustomMessageBoxWindow", "Please Confirm.", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("DockPanel", "", 1).WPFObject("TextBlock_Message").Text.OleValue
              strTemp="WPFObject(""TextBlock_Message"")"
              Set objText = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.").FindChild("Name",strTemp,10,True)
              If objText.Exists Then
                strText = objText.Text.OleValue
              End If
              If objConfirm.Exists And Ucase(Trim(strText)) = Ucase(trim("Are you sure to upload the workspace?"))Then
                SYS.Keys "[Enter]"
               

              Set objConfirm = Sys.Process("EdgeClient")._
                  Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Upload Workspace"")",600000)'._
                   If objConfirm.Exists = True then
                    Sys.Keys("O")
                    Call sEdgeProcessor
                    strTCRemarks= "Selected WorkSpace is Uploaded---" 
                    strTCRemarks = strTCRemarks & "---TC_SOURCEWV_07 Testcase Pass" 
                    strTestCaseResult="PASS" 
                    Exit Sub
                   End If

              Else 
                strTCRemarks= "Selected WorkSpace is not Uploaded---" 
                strTCRemarks = strTCRemarks & "---TC_SOURCEWV_07 Testcase Fail" 
                strTestCaseResult="FAIL" 
                Exit Sub
              End If 
          End If        
      End If
       
End Sub

Sub sOpenWorkspaceRClick(strParameter)
'Sub sOpenWorkspaceRClick()

      Call sOpenSourceWSViewer()
      strCategory=getSplitValue(strParameters,"CATEGORY")
'       strCategory="TC_SOURCEWV_23"
'       strEnvi = "Edge ( US Integration )" 

On Error Resume Next

'Refreshing the SWV window

      StrRefresh = "WPFObject(""ContentControlEx"", ""Refresh"", 2)"  
      Set objRefresh=Sys.Process("EdgeClient").FindChild("Name",StrRefresh,60,true)
      If objRefresh.Exists Then
        objRefresh.Click    
        Call sEdgeProcessor()
      End If

''Selecting Records 
      strTemp="WPFObject(""PendingChangeGridControl"")"
      Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      Set objTableView = objGridControl.WPFObject("PendingChangeTableView")
      intRowcnt=objGridControl.wRowCount
      
      
'---------------------------------------------------------------------------------------------------------------------------     
       'Testcase:TC_SOURCEWV_22: Verifying Right click "Open Workspace" option by selecting multiple workspaces
      If strCategory ="TC_SOURCEWV_22" Then 
          For intI = 0 to intRowcnt-1      
            Call objGridControl.ClickCell(intI , "Created by", skCtrl)
           Next   
            
           strTemp = "WPFObject(""ContentControlEx"", ""Open Workspace"", 2)"
           Call objGridControl.ClickCellR(0, "Created by")
           Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
           If objTemp.IsEnabled = False Then             
              strTCRemarks= "Right Click Open WorkSpace Button is Inactive when we select multiple workspaces---"
              strTCRemarks = strTCRemarks & "---TC_SOURCEWV_22 Testcase Pass"
              strTestCaseResult="PASS" 
              Exit Sub 
          Else       
              strTCRemarks= "Right Click Open WorkSpace Button is Active when we select multiple workspaces---"
              strTCRemarks = strTCRemarks & "---TC_SOURCEWV_22 Testcase Fail"            
              strTestCaseResult="FAIL" 
              Exit Sub  
          End If   
       End If  
 '-----------------------------------------------------------------------------------------------------------    
      
     'Testcase:TC_SOURCEWV_21: Verifying Right click "Open Workspace" button by selecting Single Workspaces
      If strCategory ="TC_SOURCEWV_21" Then                
          Call objGridControl.ClickCell(0 , "Created by")              
          'Verifying Enabling status for Open workspace button"      
           strTemp = "WPFObject(""ContentControlEx"", ""Open Workspace"", 2)"
           Call objGridControl.ClickCellR(0, "Created by")
           Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
           If objTemp.IsEnabled = True Then               
              strTCRemarks= "Right Click Open WorkSpace Button is Active when we select single workspaces---"
              strTCRemarks = strTCRemarks & "---TC_SOURCEWV_21 Testcase Pass"
              strTestCaseResult="PASS" 
              Exit Sub  
          Else       
            strTCRemarks= "Right Click pen WorkSpace Button is Inactive when we select single workspaces---"
            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_21 Testcase Fail"
            strTestCaseResult="FAIL"
            Exit Sub                                   
          End If   
       End If
     
'-------------------------------------------------------------------------------------------------------------------     
     'Testcase:TC_SOURCEWV_22  By clicking on Right Click Open Workspace button it should open a selected workspace
      If strCategory ="TC_SOURCEWV_23" Then 
          Call objGridControl.ClickCell(0 , "Workspace Name")      
          For intI = 1 to intRowcnt-1  
            strWorkSpaceName= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intI).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText   
            Exit For
          Next    
          
      'Open the selected workspace      
        strTemp = "WPFObject(""ContentControlEx"", ""Open Workspace"", 2)"
           Call objGridControl.ClickCellR(0, "Created by")
           Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
           If objTemp.IsEnabled = True Then  
              objTemp.Click
              Call sEdgeProcessor
              strTemp = "WPFObject(""LayoutPanel"", """", 2)"
              Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2)
              If objTemp.Exists Then
                  strCaption = objTemp.Caption.OleValue
                  IF Trim(strCaption) = Trim("Source Workspace (For Edit) - " &strWorkSpaceName) Then
                      strTCRemarks= "Selected WorkSpace is opened---" 
                      strTCRemarks = strTCRemarks & "---TC_SOURCEWV_23 Testcase Pass" 
                      strTestCaseResult="PASS" 
                      strTemp = "WPFObject(""LayoutPanel"", """", 2)"
                     Set objStrClose=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2)
                     If objStrClose.Exists = True then  
                        objStrClose.Closed=true 
                        Delay 2000,"Closing Form..."  
                     End If  
                     Exit Sub 
            Else
                    strTCRemarks= "Selected WorkSpace is not opened---"
                    strTCRemarks = strTCRemarks & "---TC_SOURCEWV_23 Testcase Pass"
                    strTestCaseResult="FAIL"              
                  End IF
              End If                    
           Else       
            strTCRemarks= "---Open WorkSpace Button is Inactive---"
            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_22 Testcase Fail---"
            strTestCaseResult="FAIL"
            Exit Sub                                   
          End If   
       End If
     
End Sub


Sub sOpenWorkspaceRighClick(strParameters)
'Sub sOpenWorkspaceRighClick()

      Call sOpenSourceWSViewer()
      strCategory=getSplitValue(strParameters,"CATEGORY")     
'      strCategory="TC_SOURCEWV_23"
'      strEnvi = "Edge ( US Integration )" 

On Error Resume Next

    'Refreshing the SWV window

      StrRefresh = "WPFObject(""ContentControlEx"", ""Refresh"", 2)"  
      Set objRefresh=Sys.Process("EdgeClient").FindChild("Name",StrRefresh,60,true)
      If objRefresh.Exists Then
        objRefresh.Click    
        Call sEdgeProcessor()
      End If

''Selecting Records 
      strTemp="WPFObject(""PendingChangeGridControl"")"
      Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      Set objTableView = objGridControl.WPFObject("PendingChangeTableView")
      intRowcnt=objGridControl.wRowCount
      
'-------------------------------------------------------------------------------------------------------------      
    
       'Testcase:TC_SOURCEWV_22:   Verifying  Right Click "Open Workspace" button by selecting multiple workspaces
      If strCategory ="TC_SOURCEWV_22" Then 
          For intI = 0 to intRowcnt-1      
            Call objGridControl.ClickCell(intI , "Created by", skCtrl)
           Next   
           strTemp = "WPFObject(""ContentControlEx"", ""Open Workspace"", 2)"  
           Call objGridControl.ClickCellR(0, "Created by")        
           Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
           If objTemp.IsEnabled = False Then             
            strTCRemarks= "Right Click Open WorkSpace Button is Inactive when we select multiple workspaces---"
            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_22 Testcase Pass"
            strTestCaseResult="PASS" 
            Exit Sub 
          Else       
            strTCRemarks= "Right Click Open WorkSpace Button is Active when we select multiple workspaces---"
            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_22 Testcase Fail"            
            strTestCaseResult="FAIL" 
            Exit Sub  
          End If   
       End If  
     
'-------------------------------------------------------------------------------------------------------------      
     
     'Testcase:TC_SOURCEWV_21: Verifying Right Click "Open Workspace" button by selecting Single Workspaces
      If strCategory ="TC_SOURCEWV_21" Then                
          Call objGridControl.ClickCell(0 , "Created by")              
          'Verifying Enabling status for Open workspace button"      
           strTemp = "WPFObject(""ContentControlEx"", ""Open Workspace"", 2)"  
           Call objGridControl.ClickCellR(0, "Created by")        
           Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
          If objTemp.IsEnabled = True Then             
            strTCRemarks= "Right Click Open WorkSpace Button is Active when we select single workspaces---"
            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_21 Testcase Pass"
            strTestCaseResult="PASS" 
            Exit Sub  
          Else       
            strTCRemarks= "Right Click Open WorkSpace Button is Inactive when we select single workspaces---"
            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_21 Testcase Fail"
            strTestCaseResult="FAIL"
            Exit Sub                                   
          End If   
       End If
     
'-------------------------------------------------------------------------------------------------------------      
     
     'Testcase:TC_SOURCEWV_23  By clicking on Right Click Open Workspace button it should open a selected workspace
      If strCategory ="TC_SOURCEWV_23" Then 
          Call objGridControl.ClickCell(0 , "Workspace Name")      
          For intI = 1 to intRowcnt-1  
            strWorkSpaceName= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intI).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText   
            Exit For
          Next    
          
      'Open the selected workspace  
       strTemp = "WPFObject(""ContentControlEx"", ""Open Workspace"", 2)"  
       Call objGridControl.ClickCellR(0, "Created by")        
         Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
             
           If objTemp.Exists  Then  
            objTemp.Click
            Call sEdgeProcessor
            strTemp = "WPFObject(""LayoutPanel"", """", 2)"
            Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2)
            If objTemp.Exists Then
                strCaption = objTemp.Caption.OleValue
                IF Trim(strCaption) = Trim("Source Workspace (For Edit) - " &strWorkSpaceName) Then
                    strTCRemarks= "Selected WorkSpace is opened---" 
                    strTCRemarks = strTCRemarks & "---TC_SOURCEWV_04 Testcase Pass" 
                    strTestCaseResult="PASS" 
                    strTemp = "WPFObject(""LayoutPanel"", """", 2)"
                   Set objStrClose=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2)
                   If objStrClose.Exists = True then  
                      objStrClose.Closed=true 
                      Delay 2000,"Closing Form..."  
                   End If  
                   Exit Sub 
                Else
                    strTCRemarks= "Selected WorkSpace is not opened---"
                    strTCRemarks = strTCRemarks & "---TC_SOURCEWV_23 Testcase Pass"
                    strTestCaseResult="FAIL"              
                  End IF
              End If                    
           Else       
            strTCRemarks= "---Open WorkSpace Button is Inactive---"
            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_23 Testcase Fail---"
            strTestCaseResult="FAIL"
            Exit Sub                                   
          End If   
       End If
     
End Sub

Sub Test15
  strUser = CreateObject("WScript.Network").UserName
  
  'Dim arrWrkSpaceName(3)  
  'strDesc1=aqDateTime.Now
  strDate = Day(Date) & " "& Monthname(Month(date),true)&" " &Year(date)
  strDate1 = Split(Now , " ")
  WrkSpaceNameDate = strDate & " "& strDate1(1) & " "&  strDate1(2)  
  msgbox WrkSpaceNameDate
End Sub





Sub Test16
  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.BarManager.DockPanel.Grid.PendingChangeGridControl.PendingChangeTableView.HierarchyPanel.RowControl.CellsControl.LightweightCellEditor2.InplaceBaseEdit.Keys("^o")
 
  End Sub
   
  Sub sOpenWorkspaceShortCut(strParameters)


  Call objGridControl.ClickCell(0 , "Created by")
  'Open the selected Workspace
'      strTemp = "WPFObject(""ContentControlEx"", ""Open Workspace"", 2)"          
'      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,true)
'      If objTemp.IsEnabled  Then  
'        objTemp.Click
        Sys.Keys("^o")
        Call sEdgeProcessor
        strTemp = "WPFObject(""LayoutPanel"", """", 2)"
        'Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2)
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,true)
        If objTemp.IsEnabled Then          
'            Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl").WPFObject("SourceTreeListView")
'            Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl")
            strTemp = "WPFObject(""SourceTreeListControl"")"            
            Set GridSourceTree= Sys.Process("EdgeClient").FindChild("Name",strTemp,60,true)
            Set GridControl= GridSourceTree.WPFObject("SourceTreeListView")
            ''Expanding First Node in Tree      
            intTotNodeCnt=GridControl.Nodes_2.Count  
            For intI=0 to intTotNodeCnt-1         
              If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
                GridControl.Nodes_2.Item(intI).ExpandAll
                blnFlag=False  
                Exit For
              End If
            Next
    
            ''Expanding Second Node in Tree
            intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
            For intJ=0 to intTotNodeCnt-1
              If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then
                GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
                intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(0).get_RowHandle
                blnFlag=False  
                Exit For
              End If
            Next
            
           'update the opned Workspcae
            intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intI).Nodes.Count
            For intK=intTotNodeCnt-1 to 0 step-1
              If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strWorkSpaceName) then
                Set objDescCell=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK)
                strText = strWorkSpaceName &"_Updated"
                Call objDescCell.Content.set_Description(strText)
                blnFlag=False  
                Exit For
              End If         
            Next   
            
           'Closing SWV Window  
           Call sCloseSWV()
           
           
           'Save the Workspace            
        strTemp="WPFObject(""ContentControlEx"", ""Workspace"", 2)"
          Set objWrkSpace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
          If objWrkSpace.IsEnabled = True then         
            objWrkSpace.Click          
           If objWrkSpace.IsEnabled = True then
              strTemp="WPFObject(""ContentControlEx"", ""Save Workspace"", 2)"
               set objwrkspcSave=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
              If objwrkspcSave.IsEnabled = True then
                 objwrkspcSave.Click
                  Delay(3000)         
                  'Clicking on Do you want to Save message box
                  strTemp="WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Confirm save."")"
                  Set objConfirm=Sys.Process("EdgeClient").WaitChild(strTemp,60000)          
                  'Set objConfirm=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Confirm save.").WPFObject("CustomMessageBoxWindow", "Confirm save.", 1).WPFObject("Grid", "", 1).WPFObject("PART_InactiveBorder")
               If objConfirm.Exists = True then
                Sys.Keys "Y"              
                Set objConfirm = Sys.Process("EdgeClient")._
                Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", """")",600000)'._
                If objConfirm.Exists = True then
                   Sys.Keys("O")                
                   Call sEdgeProcessor
                   Call sCloseSWV()
	                 Delay 1000,"Closing SourceWorkspace for Edit..."
                End If
               End If 
              End If 
            End If
           End If         
          End If
        'End If
        
End Sub



Sub Test17
  Dim gridControl
  Call Aliases.explorer.wndShell_TrayWnd.ReBarWindow32.MSTaskSwWClass.MSTaskListWClass.Click(542, 14)
  Set gridControl = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.BarManager.DockPanel.Grid.PendingChangeGridControl
  Call gridControl.ClickCell(0, "Owner")
  Call gridControl.PendingChangeTableView.HierarchyPanel.RowControl.CellsControl.LightweightCellEditor3.PART_Editor.Keys("[Down][Enter]")
End Sub

Sub Test18
  Dim edgeClient
  Dim gridControl
  Set edgeClient = Aliases.EdgeClient
  Set gridControl = edgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.BarManager.DockPanel.Grid.PendingChangeGridControl
  Call gridControl.ClickCell(0, "Owner")
  Call edgeClient.HwndSource_PopupRoot.PopupRoot.Decorator.NonLogicalAdornerDecorator.PopupBorderControl.PopupContentContainer.NonLogicalDecorator.PopupContentControl2.Drag(225, 166, 25, -158)
  Call gridControl.PendingChangeTableView.HierarchyPanel.RowControl.CellsControl.LightweightCellEditor3.PART_Editor.Keys("[Down][Down][Down]")
End Sub

Sub Test19
  Dim edgeClient
  Dim gridControl
  Set edgeClient = Aliases.EdgeClient
  Set gridControl = edgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.BarManager.DockPanel.Grid.PendingChangeGridControl
  Call gridControl.ClickCell(0, "Owner")
  Call gridControl.PendingChangeTableView.HierarchyPanel.RowControl.CellsControl.LightweightCellEditor3.PART_Editor.Keys("s")
  edgeClient.HwndSource_CustomMessageBoxWindow8.CustomMessageBoxWindow.Grid.Grid.PART_ContentOffset.Grid.PART_ContainerContent.Grid.Grid.DockPanel.Button_No.ClickButton
End Sub


Sub Test20
Set objOwner = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 3).WPFObject("PART_Editor")
If objOwner.Exists = True then      
      objOwner.Click
      objOwner.keys("Shilpa Bhopalapur")
End If
strTemp = "WPFObject(""Button_No"")"
Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Change Ownership")._
WPFObject("CustomMessageBoxWindow", "Change Ownership", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1)._
WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1)._
WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).WaitChild(strTemp,60000)


If objTemp.Exists = True Then
  objTemp.Click
Else
   Log.Message "Message box Object not found"
End IF


End Sub


'Sub Test22
'  Dim comboBox
'  Set comboBox = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.BarManager.DockPanel.Border.SearchGrid.StackPanel.StackPanel4.ComboboxCreatedBy
'  Call comboBox.Click(127, 11)
'  Call comb



Sub Abc
'Object Identification
strCreatedBy = "(Select All)"
strOwner = "(Select All)"
Set objStackPanel= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Border", "", 1).WPFObject("SearchGrid").WPFObject("StackPanel", "", 1)
Set objWorkspaceName = objStackPanel.WPFObject("StackPanel", "", 1).WPFObject("StackPanel", "", 1).WPFObject("TextBox", "", 1)
Set objCreatedBy = objStackPanel.WPFObject("StackPanel", "", 2).WPFObject("ComboBox", "", 1)
Set objOwner = objStackPanel.WPFObject("StackPanel", "", 3).WPFObject("ComboBox", "", 1)
Set objApplyFilter = objStackPanel.WPFObject("StackPanel", "", 6).WPFObject("Button", "Apply Filter", 1)
Set objResetDefault = objStackPanel.WPFObject("StackPanel", "", 6).WPFObject("Button", "Reset Default", 2)

Call objCreatedBy.Click
Set objPopUpRoot = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1)
intCount = objPopUpRoot.ChildCount


For IntI = 0 to intCount-1
  strText = objPopUpRoot.WPFObject("ComboBoxItem", "", IntI+1).DataContext.Value.Description
  If Ucase(strText) = Ucase(strCreatedBy) Then
    Call objPopUpRoot.WPFObject("ComboBoxItem", "", IntI+1).WPFObject("StackPanel", "", 1).WPFObject("CheckBox", "", 1).ClickButton(cbChecked)
    Call objCreatedBy.ClickItem(IntI)
    Exit For
  End IF
  SYS.Keys "[Down]"
Next

Call objOwner.Click
Set objPopUpRoot = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1)
intCount = objPopUpRoot.ChildCount
For IntJ = 0 to intCount-1
  strText = objPopUpRoot.WPFObject("ComboBoxItem", "", IntJ+1).DataContext.Value.Description
  If Ucase(strText) = Ucase(strOwner) Then
    Call objPopUpRoot.WPFObject("ComboBoxItem", "", IntJ+1).WPFObject("StackPanel", "", 1).WPFObject("CheckBox", "", 1).ClickButton(cbChecked)
    Call objOwner.ClickItem(IntJ)
    Exit For
  End IF
  SYS.Keys "[Down]"
Next

EnD Sub



Sub SourceDispaly()
'  
'  'Object Identification
'  Set objLable = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceTreeControl").WPFObject("SourceTreeListView")
'  
'  'Assign  Values to Veriables
'  For IntI = 1 to 19
'    ArrLable(IntI) = objLable.WPFObject("GridColumnHeader", "", IntI).WPFObject("PART_Content").WPFControlText
'  Next
'
'  'Verifying the Attributes
'  If Ucase(ArrLable(1)) = Ucase("Description") And Ucase(ArrLable(2)) = Ucase("Description Local") And Ucase(ArrLable(3)) = Ucase("Source Abbr.")And Ucase(ArrLable(4)) = Ucase("Edit")And Ucase(ArrLable(5)) = Ucase("Schedule Edit")Then 
'    IntJ = IntJ+1
'  End If
'  
'  If Ucase(ArrLable(6)) = Ucase("Is Publication") And Ucase(ArrLable(7)) = Ucase("Tree Level") And Ucase(ArrLable(8)) = Ucase("Source Type")And Ucase(ArrLable(9)) = Ucase("Source Nature")And Ucase(ArrLable(10)) = Ucase("Is Official")Then 
'    IntJ = IntJ+1
'  End If
'  
'  If Ucase(ArrLable(11)) = Ucase("URL") And Ucase(ArrLable(12)) = Ucase("Macro Cap Flag") And Ucase(ArrLable(13)) = Ucase("Macro Path")And Ucase(ArrLable(14)) = Ucase("Remarks")And Ucase(ArrLable(15)) = Ucase("Version")Then 
'    IntJ = IntJ+1
'  End If
'  
'  If Ucase(ArrLable(16)) = Ucase("Last Updated Time") And Ucase(ArrLable(17)) = Ucase("Last Updated User ID") And Ucase(ArrLable(18)) = Ucase("Display Order")And Ucase(ArrLable(19)) = Ucase("System ID")Then 
'    IntJ = IntJ+1
'  End If
'  
'  If IntJ = 3 Then 
'    Call sResult("TC_SOURCE01", Pass)
'  Else
'    Call sResult("TC_SOURCE01", Fail)    
'  End If

End Sub



Sub Test21
msgbox "I Want new line " & vbCrLf  & "From here"
End Sub



Sub Test112()
Dim abc, abc1, abc2

  abc =  Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceTreeControl").WPFObject("SourceTreeListView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 2).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 4).WPFObject("InplaceBaseEdit", "", 1).DisplayText
  abc1 =  Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceTreeControl").WPFObject("SourceTreeListView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 2).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 5).WPFObject("InplaceBaseEdit", "", 1).DisplayText
  abc2 =  Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceTreeControl").WPFObject("SourceTreeListView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 2).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 6).WPFObject("InplaceBaseEdit", "", 1).DisplayText
 
  'msgbox abc,abc1,abc2
End Sub


Sub sColumn()
'SearchColumns.Length
msgbox Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceTreeControl").WPFObject("SourceTreeListView").get_ColumnMenuController
End Sub


Sub sSearch()

strSource_Name = "Test"
strLevel2src_Name = "Automation_UIT2"
Dim ArrLevel(10)
IntCnt = 0 


''WorkSpace Edit Window
    strTemp="WPFObject(""LayoutPanel"", """", 2)"
    Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    If objTemp.Exists then
        Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl").WPFObject("SourceTreeListView")
        Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl")
     
        ''Expanding First Node in Tree      
        intTotNodeCnt=GridControl.Nodes_2.Count  
        For intI=0 to intTotNodeCnt-1         
          If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
            GridControl.Nodes_2.Item(intI).ExpandAll
            Delay 5000
            intRow=GridControl.Nodes_2.Item(intI).get_RowHandle
            GridControl.Keys "^[Home]"
            Call GridControl.ClearSelectionCore
            Call GridControl.FocusViewAndRow(GridControl,intRow-1)
            GridControl.SetFocusOnCurrentItem
            Call GridControl.SelectRowCore(1)
            GridControl.Keys("[Tab][Tab][Tab][Tab]")
            GridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intRow+1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 8).WPFObject("InplaceBaseEdit", "", 1).Click
            Set objPopUp = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("PopupBorderControl", "", 1)
            If objPopUp.Exists = False Then 
               blnLevel1=False  
            End If              
            Exit For
          End If
        Next

        
        ' Selecting Second Level 
        
         ''Expanding Second Node in Tree
        intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
        For intJ=0 to intTotNodeCnt-1
          If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then
            GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
            Delay 2000
            intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
            GridControl.Keys "^[Home]"
            Call GridControl.ClearSelectionCore
            Call GridControl.FocusViewAndRow(GridControl,intRow-1)
            GridControl.SetFocusOnCurrentItem
            Call GridControl.SelectRowCore(intRow-1)        
            GridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intRow+1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 8).WPFObject("InplaceBaseEdit", "", 1).Click
            Set objPopUp = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("PopupBorderControl", "", 1)
            If objPopUp.Exists = False then 
               blnLevel2=False  
            End If  
            Exit For
          End If
        Next
        
        myCount=0
        'Selecting Third Level 
         intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
        For intK=0 to intTotNodeCnt-1         
            intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
            Call GridControl.ClearSelectionCore
            Call GridControl.FocusViewAndRow(GridControl,intRow-1)
            GridControl.SetFocusOnCurrentItem
            Call GridControl.SelectRowCore(intRow-1)        
            GridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intRow+1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 8).WPFObject("InplaceBaseEdit", "", 1).Click
            Set objPopUp = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("PopupBorderControl", "", 1)
            If objPopUp.Exists = False then 
               blnLevel3=False  
               msgbox "PopUp not Coming"
            Else 
                 blnLevel3=True  
                log.Message "'Source Type' field is shown only for levels > 2"
                Sys.Keys("[Esc]")
                Exit For    
            End If               
        Next    
    End If
   
    If blnLevel1 = False And blnLevel2= False And  blnLevel3= True Then
      strTCRemarks = " 'Source Type' field is shown only for levels > 2" 
      strTestCaseResult="PASS"
      Call sCloseSWV() 
      Call sCloseSWV() 
    Else 
      strTCRemarks = " 'Source Type' field is shown on all levels" 
      strTestCaseResult="FAIL"
      Call sCloseSWV() 
      Call sCloseSWV() 
    End If
End Sub



Sub Test22

  Dim objGridControl
  strEnvi = "Edge ( US Integration )" 
  On Error Resume Next
  Call sOpenSourceDispalyViewer()
  Delay 2000
  Call sSelectRow(strParameters)
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceTreeControl").WPFObject("SourceTreeListView")
  If objGridControl.Exists Then
    objGridControl.set_SearchString("Automation")
    objGridControl.Keys("[Enter]")
    Delay 2000
    strSearchText = objGridControl.SearchControl.SearchText
    If Ucase(strSearchText)= Ucase("Automation") Then
      strTCRemarks = "Entered description is searched"
      strTestCaseResult="PASS" 
      Call sCloseSWV()  
    Else
      strTCRemarks = "Entered description is not searched"
      strTestCaseResult="FAIL" 
      Call sCloseSWV()   
    End If
    
  End If 
End Sub





Sub sLaunchCDMNext(strParameters)
'Sub sLaunchCDMNext()

On Error Resume Next
  
  Dim strUserName,strPassword
  Dim objLoginPanel,objUserId , objPassword ,objLoginButton

  strUserName=getSplitValue(strParameters,"USERNAME")
  strPassword=getSplitValue(strParameters,"PASSWORD")
  strBrowserName = getSplitValue(strParameters,"BROWSERNAME")
  
  strUserName="gnarayana"
  strPassword="Isi@333444"
  strBrowserName = "https://qa.ceicdata.com"
  
  Call Browsers.Item(btIExplorer).Run(strBrowserName)
  Sys.Browser().BrowserWindow(0).Maximize
  Delay 5000 , "Please wait Browser is loading"
  
  
  Set objLoginPanel = Sys.Browser("iexplore").Page("https://qa.ceicdata.com/login").Panel(0).Panel(3).Panel(0).Panel(0).Form(0).Panel(1)
  Set objUserId = objLoginPanel.Panel(0).Panel(0).EmailInput("user_id")
  Set objPassword = objLoginPanel.Panel(1).Panel(0).PasswordBox("password")
  Set objLoginButton = objLoginPanel.Panel(2).Panel(1).Button(0)
  

  IF objUserId.Exists And objPassword.Exists  Then
    objUserId.Text = ""
    objUserId.Text = strUserName
    Delay 1000
    objPassword.Text = ""
    objPassword.Text = strPassword  
    Delay 1000  
  Else
    Set objTemp = Sys.Browser("iexplore").Page("https://qa.ceicdata.com/65bd180a-7489-490b-aa0b-c506049ccec9/views").Panel(0).Panel(0).Panel(0).Panel(0).Panel(0).Panel(0).Panel(0).Panel(0)
    If objTemp.Exists Then
      log.Message "CDMNext WebPage is already launched"
      strTCRemarks="CDMNEXT webpage is already launched"
      strTestCaseResult="PASS" 
      Exit Sub  
    Else
       strTCRemarks="Unable to Launch CDMNEXT webpage"
       strTestCaseResult="ABORT"
       Exit Sub
    End If
  End IF
  objLoginButton.Click
  Delay 5000 , "Please wait Page is loading"
  Set objTemp = Sys.Browser("iexplore").Page("https://qa.ceicdata.com/65bd180a-7489-490b-aa0b-c506049ccec9/views").Panel(0).Panel(0).Panel(0).Panel(0).Panel(0).Panel(0).Panel(0).Panel(0)
  If objTemp.Exists Then
    strTCRemarks="CDMNEXT webpage is Launched Successfully"
    strTestCaseResult="PASS"    
  Else
    strTCRemarks="Unable to Launch CDMNEXT webpage"
    strTestCaseResult="FAIL"
    Exit Sub
  End If
  
End Sub




 

Sub Test23
  Call Aliases.explorer.wndShell_TrayWnd.ReBarWindow32.MSTaskSwWClass.MSTaskListWClass.Click(33, 17)
  Call Browsers.Item(btIExplorer).Navigate("https://qa.ceicdata.com/65bd180a-7489-490b-aa0b-c506049ccec9/views")
  Call Aliases.browser.pageCdmnext.Keys("~[F4]")
End Sub


Sub sCrome()
  Browsers.Item("chrome").Run("https://insights.ceicdata.com/login")
 ' Browsers.Item(chrome, "", Browsers.pX64).Run("https://insights.ceicdata.com/login")
End Sub



Sub Test25
  Call TestedApps.chrome.Run(1, True)
  
End Sub

Sub Test24
  Dim treeListView
  Set treeListView = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.BarManager.DockPanel.Grid.SourceTreeControl.SourceTreeListView
  Call treeListView.Click(93, 17)
  Call treeListView.HierarchyPanel.RowControl7.RowMarginControl.Click(10, 12)
  Call treeListView.Click(47, 17)
  Call treeListView.Keys("Automation[Enter]")
End Sub

Sub Test26
  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.BarManager.DockPanel.Grid.SourceTreeControl.SourceTreeListView.Click(220, 19)
End Sub

Sub Test27
  Aliases.EXCEL3.wndXLMAIN.Minimize
End Sub

Sub Test28
  Aliases.EXCEL3.wndXLMAIN.Minimize
End Sub

Sub Test29
Dim abc, edf

abc = "Workspace"
edf = "Series Schedule"
strTemp =  "WPFObject(""TextBlock"", ""Source "&strEditName&" (For Edit) - " & DescText & """, 1)"

msgbox strTemp
End Sub

sub sEditText()
  Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl").WPFObject("SourceTreeListView")
  intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
    For intJ=0 to intTotNodeCnt-1
      intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(0).get_RowHandle
      'If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then
      Set objGridCell=GridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("GridRow", "", intRow).WPFObject("ScrollablePart").WPFObject("CellItemsControl", "", 1).WPFObject("GridCellContentPresenter", "", 1).WPFObject("TextEdit", "", 1)
        objGridCell.Click
     Next
 
End Sub


Sub sView(strParameters)
      Call sEdgeProcessor()
      strTemp="WPFObject(""ContentControl"", ""Expand All"", 2)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
      'Click on Expand All Button
      If objTemp.Exists()Then 
        objTemp.Click
        Delay 2000
        
        Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl").WPFObject("SourceTreeListView")
        ''Expanding First Node in Tree    Layout 2  
          intTotNodeCnt=GridControl.Nodes_2.Count  
          For intI=0 to intTotNodeCnt-1         
            If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
              GridControl.Nodes_2.Item(intI).ExpandAll
              blnFlag=False  
              Exit For
            End If
          Next
          
          
      End If
      
      


End Sub


Sub sFirstNode(strParameters)

On Error Resume Next 
  
    strSource_Name=getSplitValue(strParameters,"SOURCE")
    strSource_Name="Test"
    
    ''Expanding First Node in Tree    Layout 2  
          intTotNodeCnt=GridControl.Nodes_2.Count  
          For intI=0 to intTotNodeCnt-1         
            If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
              GridControl.Nodes_2.Item(intI).ExpandAll 
              sFirstNode= intI             
              Exit For
            End If
          Next

End Sub


Sub sSecondNode(strParameters,IntI)

On Error Resume Next 
  
   strLevel2src_Name=getSplitValue(strParameters,"QCNAME")
   strLevel2src_Name= "Automation_Source03"
    
    ''Expanding First Node in Tree    Layout 2  
          intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
           For intJ=0 to intTotNodeCnt-1
          If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then
              GridControl.Nodes_2.Item(intI).ExpandAll 
              sSecondNode= intJ             
              Exit For
            End If
          Next
End Sub

Sub sThirdNode(strParameters,IntI,IntJ)

On Error Resume Next 
  
   strLevel2src_Name=getSplitValue(strParameters,"WORKSPACE")
   strLevel2src_Name= "DM"
    
    ''Expanding First Node in Tree    Layout 2  
          intTotNodeCnt=GridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Count         
          For intK=0 to intTotNodeCnt-1
            If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strWorkspace_Name) then
              GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Expand(True)
              log.Message "Third Level- " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description
              blnFlag = False
              Exit For   
            End If 
          Next
End Sub

Sub sSelectTheCore(strLevel,intI,intJ,intK)

On Error Resume Next


  strKeyWord = strLevel
  
  Select case strKeyWord
    Case Ucase("First") 
      strTemp="WPFObject(""SourceTreeListView"")"
      Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    
    Case Ucase("Second") 
      strTemp = "WPFObject(""LayoutPanel"", """", 2)"          
      objTemp= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WaitChild(strTemp, 50000)
      Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl").WPFObject("SourceTreeListView")
    
    
   End Select

  Select case strLevel
    Case Ucase("First") 
            intRow=GridControl.Nodes_2.Item(intI).get_RowHandle            
   
    Case Ucase("Second") 
            intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(0).get_RowHandle            
    
   Case Ucase("Third") 
            intRow =GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle      
  End Select 
  
    GridControl.Keys "^[Home]"
    Call GridControl.ClearSelectionCore
    Call GridControl.FocusViewAndRow(GridControl,intRow-1)
    GridControl.SetFocusOnCurrentItem
    Call GridControl.SelectRowCore(intRow-1)    
  
End Sub



Sub sFinal()
  
  nCount = 0 
  Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Root").WPFObject("Root").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("StackPanel", "", 1).WPFObject("StackPanel", "", 5).WPFObject("SourceNatureComboEdit")
  For IntJ=0 to 5
    objTemp.set_SelectedIndex(IntJ)
    strText = objTemp.SelectedText
    If Ucase(strText)= Ucase("Association") Or Ucase(strText)= Ucase("CEIC Generated")Or Ucase(strText)= Ucase("Central Bank") _
       Or Ucase(strText)= Ucase("Company") Or Ucase(strText)= Ucase("Government")Or Ucase(strText)= Ucase("Stock Exchange") Then 
        strTCRemarks = strTCRemarks & "<br />" & "The DropDown Contains:" & strText  
        nCount = nCount+1
    End IF
  Next
  If nCount = 5 then
    strTCRemarks = strTCRemarks & "<br />" & "<br />"& "TC_SOURCE21 is Passed"
  Else
    strTCRemarks = strTCRemarks & "<br />" & "<br />"& "TC_SOURCE21 is Failed"
  End If
  
      
End Sub 

Sub Test30
   strText = "InsertSourceAfterComboEdit"
   Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Root").WPFObject("Root").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("StackPanel", "", 1).WPFObject("StackPanel", "", 10).WPFObject("InsertSourceAfterComboEdit")
   Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Root").FindChild("Name", strTemp1, 50, True)
    objTemp.set_Text("SourceDesc5")
End Sub




''Sub sLaunchCDMNext(strParameters)
''Sub sLaunchCDMNext()
'  
'  On Error Resume Next
'  
'  Dim strUserName,strPassword
'  Dim objLoginPanel,objUserId , objPassword ,objLoginButton
'
''  strUserName=getSplitValue(strParameters,"USERNAME")
''  strPassword=getSplitValue(strParameters,"PASSWORD")
''  strBrowserName = getSplitValue(strParameters,"BROWSERNAME")
'
'  strUserName="rchethana"
'  strPassword="!QAZxsw2BlackB1rd1"
'  strBrowserName ="https://stage.ceicdata.com/"
'  
'  'Launch Url
'  
'  Call Browsers.Item(btIExplorer).Run(strBrowserName)
'  Sys.Browser().BrowserWindow(0).Maximize
'  Delay 5000 , "Please wait Browser is loading"  
'  
'  'Verify for Dialog box if any 
'  strpage= strBrowserName & "Untitled-insight/views"
'  'set objTemp = Sys.Browser("iexplore").Page("https://qa.ceicdata.com/65bd180a-7489-490b-aa0b-c506049ccec9/views")  
'  Set objTemp = Sys.Browser("iexplore").Page(strpage)   
'  Set objDialog = objTemp.Panel(0).Panel(0).Panel(2).Panel(1).Panel(0).Panel(1)   
'  If objDialog.Exists Then 'Click OK button in series selection Dialog box
'    Set ObjOKButton = objDialog.Panel(0).Panel(1).Button(1)
'    ObjOKButton.Click
'    Sys.Keys("F5")
'    Dealy 4000, "Please Wait"
'  End IF
'  
'  'Provide Login Credentials
'                         
'    Set objLogo = objTemp.Panel(0).Panel(0).Panel(0).Panel(0).Panel(0).Panel(0).Panel(3).Panel(0)
'    If objLogo.Exists Then
'      log.Message  "CDMNext WebPage is already launched"
'      strTCRemarks="CDMNEXT Webpage is already Launched"
'      strTestCaseResult="PASS" 
'      Exit Sub  
'    Else
'      strpage= strBrowserName & "login"    
'      Set objLoginPanel= Sys.Browser("iexplore").Page(strpage).Panel(0).Panel(3).Panel(0).Panel(0).Form(0).Panel(1)      
'      If objLoginPanel.Exists Then 
'      'Entering Login Credentials
'         Set objUserId = objLoginPanel.Panel(0).Panel(0).EmailInput("user_id")
'         Set objPassword = objLoginPanel.Panel(1).Panel(0).PasswordBox("password")
'         Set objLoginButton = objLoginPanel.Panel(2).Panel(1).Button(0)
'         IF objUserId.Exists And objPassword.Exists  Then
'            objUserId.Text = ""
'            objUserId.Text = strUserName
'            Delay 1000
'            objPassword.Text = ""
'            objPassword.Text = strPassword  
'            Delay 1000 
'            objLoginButton.Click
'            Delay 5000 , "Please wait Page is loading"
'            strpage= strBrowserName & "/65bd180a-7489-490b-aa0b-c506049ccec9/views"
'            set objTemp = Sys.Browser("iexplore").Page(strpage)  
'            
'            'Check for Dailog box agian   
'            Set objDialog = objTemp.Panel(0).Panel(0).Panel(2).Panel(1).Panel(0).Panel(1)   
'            If objDialog.Exists Then 'Click OK button in series selection Dialog box
'              Set ObjOKButton = objDialog.Panel(0).Panel(1).Button(1)
'              ObjOKButton.Click
'              Sys.Keys("F5")
'              Dealy 4000, "Please Wait"
'            End IF
'            
'            'Verifying CIEC Logo
'            'https://stage.ceicdata.com/Untitled-insight
'             strpage= strBrowserName & "Untitled-insight/views"              
'            Set objTemp = Sys.Browser("iexplore").Page(strpage).Panel(0).Panel(0).Panel(0).Panel(0).Panel(0).Panel(0).Panel(3).Panel(0)
'            If objTemp.Exists Then
'              strTCRemarks="CDMNEXT webpage is Launched Successfully"
'              strTestCaseResult="PASS"    
'            Else
'              strTCRemarks="Unable to Launch CDMNEXT webpage"
'              strTestCaseResult="ABORT"
'              Exit Sub
'            End If             
'       End If      
'      End If
'    End If
''End Sub
'
'
Sub sLoginCDMNext()

  Dim strXPath, objTemp, EMAIL, PASSWORD,LOGIN
  
'    EMAIL = (By.NAME, "user_id")
'    PASSWORD = (By.NAME, "password")
'    LOGIN = (By.XPATH, "//button[text()=' Login ']")

    Call Browsers.Item(btIExplorer).Run("https://qa.ceicdata.com/login")
    Sys.Browser().BrowserWindow(0).Maximize
    Delay 5000 , "Please wait Browser is loading" 
    
  'strXPath = "//input[@name='user_id']"
  Set objTemp = Sys.Browser("iexplore").Page("https://qa.ceicdata.com/login").FindChildByXPath("//input[@name='user_id']",True)
  If objTemp.Exists then 
      objTemp.SetText("rchethana")
  End If

  
'  set objLoginPage = objBrowser.Page("https://insights.ceicdata.com/login")
'  '/html/body/div[2]/div[4]/div/div[4]/form/div[2]/div[1]/div/input
'  set obj = objLoginPage.FindChildByXPath(strXPath,True)
'  If obj.exists=true then
'    obj.Text="fddf"
'  End If



 
'    'Verify if already logged in 
'    strpage= strBrowserName & "Untitled-insight/views"    
'    Set objTemp = Sys.Browser("iexplore").Page(strpage) 
'    'objTemp.
'    Set objRequired = objTemp.Panel(0).Panel(0).Panel(0).Panel(0).Panel(0).Panel(0).Panel(0).Panel(0)   
'    If objRequired.Exists Then 
'        Set objUserName = objTemp.Panel(0).Panel(0).Panel(0).Panel(0).Panel(0).Panel(0).Panel(3).Panel(0).Panel(2).Panel(0).Panel(0)
'                          'objTemp.Panel(0).Panel(0).Panel(0).Panel(0).Panel(0).Panel(0).Panel(3).Panel(0).Panel(2).Panel(1).Link(0).Panel(0)
'        objUserName.Click
'        Delay 200
'        
'      log.message "CDMNext is already Logged in" 
'      strTCRemarks =  "CDMNext website is already Logged in"     
'      strTestCaseResult="PASS" 
'    End IF
End Sub


Sub sNodeCount ()


 strTemp="WPFObject(""SourceTreeListView"")"   
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  If objTemp.Exists Then
      Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)  
  End If 
  
  
  'Expanding First Node
   intTotNodeCnt=objGridControl.Nodes_2.Count  
   For intI=0 to intTotNodeCnt-1         
     If Ucase(objGridControl.Nodes_2.Item(intI).Content.Description)=Ucase("Test") then
      objGridControl.Nodes_2.Item(intI).ExpandAll 
      intToSecondNodeCnt=objGridControl.Nodes_2.Item(intI).Nodes.Count
      msgbox   intToSecondNodeCnt 
      msgbox IntI  
      For intJ=intI+1 to intToSecondNodeCnt-1 
                
      Next
    End If
   Next
   
End Sub

sub sName()
  strTemp = "Source Workspace"
  strText = "WPFObject(""TextBlock"", """ &strTemp& " (For View Only) "", 1)"
  msgbox strText
End Sub

Sub Test31
  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.BarManager.DockPanel.Grid.SourceTreeControl.SourceTreeListView.HierarchyPanel.RowControl8.CellsControl.LightweightCellEditor.InplaceBaseEdit.Click(188, 14)
End Sub

Sub Test32
Dim arrLabel(7)
arrLabel(1) =  "New Source Organization"
arrLabel(2) =  "New Workspace"
arrLabel(3) =  "Open Global STP"
arrLabel(4) =  "Open CN STP"
arrLabel(5) =  "Subscription"
arrLabel(6) =  "ATP"

For IntI = 1 to 6
  strTemp = "WPFObject(""ContentControlEx"", """&arrLabel(IntI)&""", 2)"
  msgbox strTemp
Next
End Sub


Sub sTest110()

        strLevel2src_Name = "Test"        

        strTemp="WPFObject(""SourceTreeListView"")"
        Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,True)
         
        objRowControl = GridControl.FindAllChildren("ClrClassName","RowControl",10,true)        
        For i = 0 to ubound(objRowControl)
        log.Message objRowControl(i).DataContext.Row.Description
        If objRowControl(i).DataContext.Row.Description=strLevel2src_Name then 
          objRowControl(i).ClickR
          Exit For
        End If
        Next
        
End Sub 

Sub Test33
  Dim edgeClient
  Dim barManager
  Set edgeClient = Aliases.EdgeClient
  Set barManager = edgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.BarManager
  Call barManager.DockPanel.Grid.SourceTreeControl.SourceTreeListView.HierarchyPanel.RowControl10.CellsControl.LightweightCellEditor.InplaceBaseEdit.ClickR(58, 10)
  Call edgeClient.HwndSource_PopupRoot.PopupRoot.Decorator.NonLogicalAdornerDecorator.BarPopupBorderControl10.PopupMenuBarControl.BaritemlinkinfoSubscription.BarsubitemlinkcontrolSubscription.ContentcontrolexSubscription.Click(29, 7)
  Call barManager.ClickItem("[0]|Subscription|Open Subscription")
End Sub

Sub Test34
  Dim barManager
  Call Aliases.explorer.wndShell_TrayWnd.ReBarWindow32.MSTaskSwWClass.MSTaskListWClass.Click(520, 21)
  Set barManager = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.BarManager
  Call barManager.DockPanel.Grid.SourceTreeControl.SourceTreeListView.HierarchyPanel.RowControl9.CellsControl.LightweightCellEditor.InplaceBaseEdit.ClickR(239, 11)
  Call barManager.ClickItem("[0]|Subscription|Open Subscription")
End Sub



Sub Test35
  Dim edgeClient
  Set edgeClient = Aliases.EdgeClient
  Call edgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.BarManager.DockPanel.Grid.SourceTreeControl.SourceTreeListView.GridColumnHeader5.ComboBoxEdit.Click(5, 5)
  Call edgeClient.HwndSource_PopupRoot.PopupRoot.Decorator.NonLogicalAdornerDecorator.PopupBorderControl.PopupContentContainer.NonLogicalDecorator.PopupContentControl2.ComboBoxEditItem4.Click(18, 11)
End Sub

Sub Test36
  Dim edgeClient
  Set edgeClient = Aliases.EdgeClient
  Call edgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.BarManager.DockPanel.Grid.SourceTreeControl.SourceTreeListView.GridColumnHeader5.ComboBoxEdit.Click(8, 1)
  Call edgeClient.HwndSource_PopupRoot.PopupRoot.Decorator.NonLogicalAdornerDecorator.PopupBorderControl.PopupContentContainer.NonLogicalDecorator.PopupContentControl2.ComboBoxEditItem3.Click(26, 14)
End Sub

Sub Test37
  Dim edgeClient
  Set edgeClient = Aliases.EdgeClient
  Call edgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.BarManager.DockPanel.Grid.SourceTreeControl.SourceTreeListView.GridColumnHeader.ComboBoxEdit.Click(4, 2)
  Call edgeClient.HwndSource_PopupRoot.PopupRoot.Decorator.NonLogicalAdornerDecorator.PopupBorderControl.PopupContentContainer.NonLogicalDecorator.PopupContentControl2.ComboboxedititemEdgeclientModulesInfrastru8.Click(31, 5)
End Sub

Sub Test38
  Dim edgeClient
  Call Aliases.explorer.wndShell_TrayWnd.ReBarWindow32.MSTaskSwWClass.MSTaskListWClass.Click(534, 7)
  Set edgeClient = Aliases.EdgeClient
  Call edgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.BarManager.DockPanel.Grid.SourceTreeControl.SourceTreeListView.GridColumnHeader8.Click(105, 2)
  Call edgeClient.HwndSource_PopupRoot.PopupRoot.Decorator.NonLogicalAdornerDecorator.PopupBorderControl.PopupContentContainer.NonLogicalDecorator.PopupContentControl2.CheckboxPriorToThisYear.ClickButton(cbChecked)
End Sub


Sub ColumClick()
  strTemp = "WPFObject(""SourceTreeControl"")"
  Set objGridControl = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  Set objColumn = objGridControl.Columns_2.Item(0)
  objColumn.set_Focusable(True)
  'objColumn.Click
  'Call objGridControl.MoveFocus("Description")
  'objGridControl.set_FilterString("[Description] = 'Automation'")
'  objTemp.Columns_2.Item(0).set_Focusable(True)
'  
''  For I= 0 to 19  
''    objTemp.Columns_2.Item(I).Click
''    Delay 2000
''  Next
End Sub

Sub sEdit()
'strTemp = "WPFObject(""ContentControlEx"", ""Add Folder"", 2)"
'strTemp = "WPFObject(""ContentControlEx"", ""Delete Folder"", 2)"
'strTemp = "WPFObject(""ContentControlEx"", ""Copy Folder"", 2)"
'strTemp = "WPFObject(""ContentControlEx"", ""Cut Folder"", 2)"
'strTemp = "WPFObject(""ContentControlEx"", ""Assign Values"", 2)"
'strTemp = "WPFObject(""ContentControlEx"", ""Workspace"", 2)"
'strTemp = "WPFObject(""ContentControlEx"", ""Find & Replace"", 2)"
'strTemp = "WPFObject(""ContentControlEx"", ""Expand All"", 2)"
strTemp = "WPFObject(""ContentControlEx"", ""Collapse All"", 2)"
'Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).FindChild("Name",strTemp,50,True)
Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
If objTemp.Exists Then
  msgbox "Done"
End If 
End Sub

Sub sArr()
 For IntI = 0 to 9
              strLabel = "Label" & CStr(IntI)
              ArrTemp(IntI) = getSplitValue(strParameters,strLabel)
              Set objTemp = Sys.Process("EdgeClient").FindChild("Name",ArrTemp(IntI),50,True)
              strText = Ucase(Trim(objTemp.WPFControlText))
              If  strText = Ucase(Trim("Paste Folder")) OR strText = Ucase(Trim("Workspace")) Then 
                objTemp.Click
              End If
              If objTemp.IsEnabled then
                blnFlag(IntI) = True
              Else
                blnFlag(IntI) = False
              End If
           Next
    sArr= blnFlag
End Sub


function ReturnArrayFunc()
 
    Dim aData(3)
    aData (0)="A"
    aData (1)="b"
    aData (2)="c"
 
    'populate  aData  with strings
 
    ReturnArrayFunc  = aData
 
End Function
 
Sub max() 
  val1=  ReturnArrayFunc ()
  For i=0 To UBound(val1)
    MsgBox val1(i)
  Next
End Sub



Sub Test39
  IntI = 1
'   DescText=Replace(aqDateTime.Now,"/","-")
'   msgbox aqDateTime.Now 
'   DescText=Replace(DescText,":","_") 
'   strText = Split(DescText," ")
'   'msgbox  strText(0)& "-" &strText(1)&"-"&Cstr(IntI)
'   msgbox  strText(0)& "-" & Cstr(IntI)

'strText1 = Day(aqDateTime.Now)&"-" & MonthName(Month(aqDateTime.Now)) &"-" & Year(aqDateTime.Now)
'strText2 = aqDateTime.Time &"-"& Cstr(IntI)
'msgbox strText1 &"-"&  strText2


' strLevel2src_Name="5-11-2018-2_47_46-PM-2"
' strTemp= "WPFObject(""InsertSourceAfterCheckEdit"")"
 'Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp1, 50, True) 
 

  strEnvi = "Edge ( US Integration )" 
        Call sCloseSWV()
       Call sOpenSourceDispalyViewer()
       Sys.Keys "[Enter]"    
   
End Sub

Sub Test40
Dim IntCount(3)
    strTemp="WPFObject(""SourceTreeListView"")"   
     Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
     IntCount(0) = 2
     IntCount(1) = 5 

 For intK=0 to 4      
     Level4Count = objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(intK).Nodes.Count
     DescText ="5-16-2018 5_27_56 PM"
     If Level4Count >0 then
        If  Ucase(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(intK).Nodes.Item(Level4Count-1).Content.Description)=Ucase(DescText) then         
                IntCnt = IntCnt+1                     
      End If   
     End If  
Next 
End Sub


Sub sDescText()
    Dim MyVariable(7)
    MyVariable(3) = "1-5-17-2018 1_27_26 PM" 
    MyVariable(4) = "2-1-5-17-2018 1_27_26 PM" 
    MyVariable(5) = "3-2-1-5-17-2018 1_27_26 PM" 
    MyVariable(6) = "4-3-2-1-5-17-2018 1_27_26 PM"
    
    DescLocal  = "1-5-17-2018 1_27_26 PM"
    
    For I = 0 to 7 
      If MyVariable(I) = DescLocal Then 
          msgbox DescLocal
          IntK = CInt(Left(DescLocal,1))+1
          DescLocal = CStr(IntK) &"-" & DescLocal
          msgbox DescLocal
      End If
    Next


      
End Sub

Sub Test41
'
'On Error Resume Next 
'  
'  strTemp ="WPFObject(""DXMessageBox"", """", 1)" 
'  Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: WindowContentHolder", "Confirm").FindChild("Name",strTemp,50,True)
'  If objTemp.Exists Then 
'     SYS.Keys "[Enter]"
'  End If




'Replace(, intNewNumber)


DescText=Replace(aqDateTime.Now,"/","-")
          intNewNumber =Replace(DescText,":","_")
          intNewNumber1 = left(intNewNumber,1)+ Minute(Time) + Second(Time) + J &"-" &intNewNumber
          msgbox intNewNumber1
  
End Sub

'======================================================================================================================================================================

Sub sLevle3CopyFolder(strParameters)
'Sub sCopyFolder()

  On Error Resume Next
  Dim strTemp, objGridControl, objTemp, blnFlag, newSourceName,  intTotNodeCnt
  
  
   strSource_Name=getSplitValue(strParameters,"SOURCE")
   strLevel2src_Name=getSplitValue(strParameters,"Level2Source")  
   strCopyOption= getSplitValue(strParameters,"COPYOPTION") 
   strPasteOption = getSplitValue(strParameters,"PASTEOPTION") 
   strCategory=getSplitValue(strParameters,"CATEGORY") 
   strLevel3Source=getSplitValue(strParameters,"WorkSpaceLevel3") 
   strFolderCount=getSplitValue(strParameters,"FolderCount")
   strText =getSplitValue(strParameters,"DISPLAYTEXT") 
   blnFlag = False
   
   'strLevel3src_Name=getSplitValue(strParameters,"WORKSPACE") 
   'strFolderCount=getSplitValue(strParameters,"FoldestrSourceNamerCount")
 
  
'   
'   strSource_Name = "Test"
'   strLevel2src_Name ="Level2-CopyFolder"
'   strLevel3Source="CopyFolder-1"
'   strFolderCount = 5
'   strCopyOption = "WPFObject(""ContentControlEx"", ""Copy Folder Only"", 2)" 
'   strPasteOption =" WPFObject(""ContentControlEx"", ""Paste Inside"", 2)" 
'   strCategory = "Inside"
'   IntRowNumber(2) = 0
   
     
   'Open for Edit Source
   Call sOpenSourceWorkSpace(strParameters)
   Call sEdgeProcessor()   
   
'      
  'Select the Level 3 Source folder under Sorce Workspace:         
  IntRowNumber = fWorkSpaceRowSelection(strParameters) 

   strTemp="WPFObject(""SourceTreeListView"")"      
   Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True) 
 
  'Select the Required Number of rows to copy. 
    If strFolderCount > 1 Then       
        For I =0 to strFolderCount-2                 
          SYS.Keys("![Down]")  
          IntRowNumber(2) = IntRowNumber(2)+1
           intRowCount = IntRowNumber(2)          
          Next  
    End If
  
   'Get the Row Count as per Paste above /Below               
    If strFolderCount > 0 And (Ucase(strCategory) = Ucase("Below"))  Then 
        IntRowNumber(2) = IntRowNumber(2)+1 
        intRowCount = IntRowNumber(2)        
    ElseIf strFolderCount < 0 Then 
       strTCRemarks = "'Copy' and 'Paste Above' Fucntionality requires atleast one folder to copy"
       strTestCaseResult="FAIL" 
       Exit Sub 
    End If
    

      
  'Copy and Paste selected Folder
   Call sCopyPaste(strCopyOption,strPasteOption)
   Delay 500
   P= 0
   
   'Amend The Description and Description Local Name   
   If Ucase(strCategory) = Ucase("Above") OR  Ucase(strCategory) = Ucase("Below")Then
    For J = 0 to strFolderCount-1 
        intNewNumber = Minute(Time) + Second(Time) + J 
        intLen= Len(strLevel3Source)-Instr(strLevel3Source, "-")
        newSourceName =  Replace(strLevel3Source ,Right(strLevel3Source ,intLen), intNewNumber)        
        Delay 200
        Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Content.set_Description(newSourceName)
        Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Content.set_DescriptionLocal(newSourceName) 
        strName(P) =  newSourceName 
        IntRowNumber(2) = IntRowNumber(2)+1 
        P=P+1
        Delay 500 
    Next
   End IF
   
   P= 0
   If Ucase(strCategory) = Ucase("Inside") Then
    For J = 0 to strFolderCount-1          
        'msgbox objGridControl.Nodes_2.Item(0).Nodes.Item(0).Nodes.Item(IntRowNumber(2)).Content.Description
        intNewNumber = Minute(Time) + Second(Time) + J 
        intLen= Len(strLevel3Source)-Instr(strLevel3Source, "-")
        newSourceName =  Replace(strLevel3Source ,Right(strLevel3Source ,intLen), intNewNumber)        
        Delay 200
        Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Nodes.Item(J).Content.set_Description(newSourceName)
        Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Nodes.Item(J).Content.set_DescriptionLocal(newSourceName) 
        strName(P) =  newSourceName       
        P=P+1 
    Next
   End IF
   
  
   'Save the Workspace
    Call fSaveWorkspace() 
    Call sEdgeProcessor()         
    Call sCloseSWV() 
    
   ' Open the Saved Workspace from Source Workspace Viewer         
    Call sOpenSavedWorkSpace(strParameters)
    Call sEdgeProcessor()  
    Delay 2000       
  
       
    'Verify the copy and paste changed have been saved.
      intTotNodeCnt=objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Count
      P= 0 
      If Ucase(strCategory) = Ucase("Above") OR  Ucase(strCategory) = Ucase("Below")Then   
       For intK = 0 to intTotNodeCnt-1
        If Ucase(objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(intK).Content.Description)= Ucase(strName(P)) Then 
            blnFlag= True  
            DescText = strName(P)
            P = P+1  
            Delay 200         
        End IF    
       Next
      End IF
  
      intTotNodeCnt=objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Nodes.Count
      If Ucase(strCategory) = Ucase("Inside") Then      
        For intK = 0 to intTotNodeCnt-1
           If Ucase(objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Nodes.Item(intK).Content.Description)= Ucase(strName(P)) Then 
              blnFlag= True  
              DescText = strName(P)
              P = P+1  
              Delay 200         
          End IF   
        Next
       End IF
  
    'Verify Modified Rows are displayed or Not
      If blnFlag= True And P = CInt(strFolderCount)  Then 
        strTCRemarks = strText & " Fucntionality is working as expected"
        strTestCaseResult="PASS"
      Else
         strTCRemarks = strText & " Fucntionality is not working as expected"
         strTestCaseResult="FAIL"  
      End If

End Sub 



Sub Test42
  Dim hierarchyPanel
  Call Aliases.explorer.wndShell_TrayWnd.ReBarWindow32.MSTaskSwWClass.MSTaskListWClass.Click(592, 13)
  Set hierarchyPanel = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.BarManager.DockPanel.Grid.SourceTreeControl.SourceTreeListView.HierarchyPanel
  Call hierarchyPanel.RowControl11.CellsControl.LightweightCellEditor.InplaceBaseEdit.EditorControlStub.Click(45, 11)
  Call hierarchyPanel.RowControl6.CellsControl.LightweightCellEditor.InplaceBaseEdit.EditorControlStub.Click(57, 12, skCtrl)
End Sub

Sub Test43
  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.BarManager.AdornerDecorator.AdornedControl.Grid.DockPanel.SourceTreeListControl.SourceTreeListView.HierarchyPanel.RowControl6.RowMarginControl.Click(32, 12)
End Sub

Sub Test44
  Dim barManager
  Dim hierarchyPanel
  Dim rowControl
  Set barManager = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.BarManager
  Set hierarchyPanel = barManager.AdornerDecorator.AdornedControl.Grid.DockPanel.SourceTreeListControl.SourceTreeListView.HierarchyPanel
  Call hierarchyPanel.RowControl.CellsControl.LightweightCellEditor2.InplaceBaseEdit.Click(49, 14)
  Call hierarchyPanel.RowControl2.RowMarginControl.Click(38, 10)
  Call hierarchyPanel.RowControl3.CellsControl.LightweightCellEditor2.InplaceBaseEdit.EditorControlStub.Click(25, 13)
  Call barManager.ClickItem("[0]|Copy Folder|Copy Folder Only")
  Set rowControl = hierarchyPanel.RowControl6
  Call rowControl.CellsControl.LightweightCellEditor.InplaceBaseEdit.EditorControlStub.Click(26, 3)
  Call rowControl.RowMarginControl.Click(38, 11)
  Call hierarchyPanel.RowControl7.CellsControl.LightweightCellEditor.InplaceBaseEdit.EditorControlStub.Click(52, 7)
  Call barManager.ClickItem("[0]|Paste Folder|Paste Above")
End Sub


Sub Test45
      Dim intSeriesID() 
      Set objSeriesPanel = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceSeriesViewControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("SourceSeriesGridControl").WPFObject("SourceSeriesTableView")
      intSeriesCount =objSeriesPanel.DataContext.Count
      ReDim intSeriesID(intSeriesCount) 
      For I = 0 to intSeriesCount-1
          intSeriesID(I) = objSeriesPanel.DataContext.Item(I).SeriesId
          'intSeriesID(I) = objSeriesPanel.DataContext.Item(I).get_SeriesId
      Next    
   
End Sub


Sub Test46
  Call Aliases.EXCEL.wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND.Click(130, 68)
End Sub

Sub Test47
  Dim explorer
  Dim netUIHWND
  Set explorer = Aliases.explorer
  Call explorer.wndShell_TrayWnd.ReBarWindow32.MSTaskSwWClass.MSTaskListWClass.Click(403, 17)
  Call explorer.wndTaskListThumbnailWnd.Click(621, 172)
  Set netUIHWND = Aliases.EXCEL2.wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND
  Call netUIHWND.Click(56, 90)
  Call netUIHWND.Click(135, 68)
End Sub

Sub Test48
  Dim explorer
  Dim MSTaskListWClass
  Set explorer = Aliases.explorer
  Set MSTaskListWClass = explorer.wndShell_TrayWnd.ReBarWindow32.MSTaskSwWClass.MSTaskListWClass
  Call MSTaskListWClass.Click(279, 17)
  Call MSTaskListWClass.Click(398, 22)
  Call explorer.wndTaskListThumbnailWnd.Click(511, 128)
  Call Aliases.EXCEL2.wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND.Click(37, 90)
End Sub

Sub MarkGood()

'       'Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND 
'          Set netUIHWND = Aliases.EXCEL2.wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND
'          STPSheetName = ""
'          
'          ' Set netUIHWND = Sys.Process("EXCEL", 2).Window("XLMAIN", "YYY-Automation_STP1-BMT1 - Excel", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1).MSAAObject("property_page_Ribbon").MSAAObject("pane_Lower_Ribbon").MSAAObject("client").MSAAObject("property_page_EDGE").MSAAObject("tool_bar_2").MSAAObject("btn_Mark_Good")
'          
'          'Mark Good
'          Delay 3000,"Upload..."
'          With objSTPXls
'            With .WorkSheets(STPSheetName)
'                 .Cells.Select
'            End With
'          End With
'          Call netUIHWND.Click(137, 67)
On Error Resume Next
Dim btnMarkGood , btnRefresh, btnUpload

    strTestDataFile = "YYY-Automation_STP1-BMT1"
    
    '"*" & strTestDataFile & "*",1
    
     strTemp = "MSAAObject(""btn_Mark_Good"")" 
     Set objTemp = Sys.Process("EXCEL", 2).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", 2).FindChild("Name",strTemp,50,True)
     If objTemp.Exists Then
        objTemp.Click
     End If  
     
     
     strTemp ="MSAAObject(""btn_Upload"")" 
     Set objTemp = Sys.Process("EXCEL", 2).Window("XLMAIN", strTestDataFile &" - Excel", 1).Window("EXCEL2", "", 2).FindChild("Name",strTemp,50,True)
     If objTemp.Exists Then
        objTemp.Click
     End If  
     
     
     Delay 10000, "Pleas Wait First File Uploading "
     
     strTemp ="MSAAObject(""btn_Refresh"")" 
     Set objTemp = Sys.Process("EXCEL", 2).Window("XLMAIN", strTestDataFile &" - Excel", 1).Window("EXCEL2", "", 2).FindChild("Name",strTemp,50,True)
     If objTemp.Exists Then
        objTemp.Click
     End If 
     
     
     
      strTestDataFile = "YYY-Automation_STP1-BMT2"
    strTemp = "MSAAObject(""btn_Mark_Good"")" 
     Set objTemp = Sys.Process("EXCEL", 3).Window("XLMAIN", strTestDataFile &" - Excel", 1).Window("EXCEL2", "", 2).FindChild("Name",strTemp,50,True)
     If objTemp.Exists Then
        objTemp.Click
     End If  
     
     
     strTemp ="MSAAObject(""btn_Upload"")" 
     Set objTemp = Sys.Process("EXCEL", 3).Window("XLMAIN", strTestDataFile &" - Excel", 1).Window("EXCEL2", "", 2).FindChild("Name",strTemp,50,True)
     If objTemp.Exists Then
        objTemp.Click
     End If  
     
     
     Delay 10000, "Pleas Wait Second File Uploading "
     
     strTemp ="MSAAObject(""btn_Refresh"")" 
     Set objTemp = Sys.Process("EXCEL", 3).Window("XLMAIN", strTestDataFile &" - Excel", 1).Window("EXCEL2", "", 2).FindChild("Name",strTemp,50,True)
     If objTemp.Exists Then
        objTemp.Click
     End If 
      
End Sub 


Sub RefreshAndUpload()

'MarkGood Click
strTestDataFile = "YYY-Automation_STP1-BMT1"
Set netUIHWND =  Sys.Process("EXCEL", 2).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
Call netUIHWND.Click(31, 93)

strTestDataFile = "YYY-Automation_STP1-BMT2"
Set netUIHWND1 =  Sys.Process("EXCEL", 3).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
Call netUIHWND1.Click(31, 93)


'Refresh Click
Call netUIHWND.Click(318, 68)
Delay 5000
Call netUIHWND1.Click(318, 68)

'Upload Click
Call netUIHWND.Click(136, 73)
Delay 5000
Call netUIHWND1.Click(136, 73)

End Sub


Sub abc1()
 strTemp="WPFObject(""ContentControlEx"", ""Expand All"", 2)"
  Set objExpandButton=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  If objExpandButton.Exists Then 
    Call objExpandButton.Click
  End If
End Sub



Sub Test49
  Dim netUIHWND
  Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND
  Call netUIHWND.Click(599, 41)
  Call netUIHWND.DblClick(599, 41)
End Sub

Sub Test50
  Call Aliases.EXCEL3.wndXLMAIN.EXCEL23.MsoCommandBar.MsoWorkPane.NUIPane.NetUIHWND.NetUICtrlNotifySink.CMMOcxHost.InformationPane.pageView.atpInfoPage.atpInformationView.freqPageView.RadPageViewPage.AtpInformationResultGrid.pnlMain.summaryResultGridView.ClickCell(1, "Series Id")
End Sub

Sub Test51()

Call sOpenExcel(strParameters) 
strTestDataFile ="CN-AC" 
STPSheetName = "A2_1"
 
 objArray = Sys.FindAllChildren("ProcessName","EXCEL", 1,True)
  For i=0 to ubound(objArray)
    log.Message objArray(i).FullName
    set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*" & strTestDataFile & "*",1,True)
    If oSTP_ExcelObj.Exists = True Then
      strAliasName=objArray(i).mappedname
      strFileName=oSTP_ExcelObj.WndCaption
      If instr(strFileName,"Microsoft Excel")>0 then
        strFileName=GetFileName(strFileName,"Microsoft Excel")
      Else
        strFileName=GetFileNameExcel13(strFileName," - Excel")
      End If
      FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")
      FilePath=FilePath & "\" & iif(instr(strFileName,"xlsx") > 0,strFileName,strFileName & ".xlsx")  
      log.Message FilePath
      msgbox strFileName
      msgbox FilePath
      Exit For
    Else
      log.Message "STP file not found in " & objArray(i).FullName
    End If
  Next
  
  Delay(2000)
  msgbox FilePath
  
'  Set objSTPXls=GetObject(FilePath)
 'Set objSTPXls= IntegrationObjectj.GetObjectByName("Project")
'  With objSTPXls
'    With .Sheets(STPSheetName).Select
'    End With

    With .WorkSheets(STPSheetName)
      Dim r
        delay Status_Wait, "Finding last Row the Excel sheets.. Pls wait.."
        For r = 1 To .UsedRange.Rows.Count
          If IsEmpty(.UsedRange.Cells(r, 1).Value) = True AND (.UsedRange.Cells(r, 1).Text) ="" Then           
           intlastRow=r           
           Exit For
          End  If 
        Next
        inti=3
        lastColumn=.UsedRange.Columns.Count
        
        msgbox intlastRow
        msgbox lastColumn
    End With
    'End With

 'objExcel.View.FullScreen = True
 
End Sub

Sub sOpenExcel(strParameters)
'Sub sOpenExcel()
    On Error Resume Next
    Dim strFilePath,objExcel
    strFileName = getSplitValue(strParameters,"FileName")
    strFileName = "CHN-CN Input Files-CN-AC"
    
  
   strFilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")&"\"&strFileName
   Set objExcel = CreateObject("Excel.Application")
   objExcel.Application.Visible = True
   'objExcel.Application.DisplayFullScreen = True   
   Set objWorkbook = objExcel.Workbooks.Open(strFilePath)
   objExcel.ActiveWindow.WindowState = xlMaximized
End Sub 

Sub sDate()

  msgbox aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")	
  
End Sub

Sub sCreateSeries(strParameters)
'Sub sCreateSeries()
On Error Resume Next

  Dim strSeriesName,strSourceSeriesName,strSeriesSourceCode,strSeriesStatus,strSeriesType,STPSheetName
  Dim strSeriousCountry,strOutputUnit,strSeriesNature,strSeriesFreq,strSourceUnit,strUnitType,strTestDataFile
  Dim strAliasName,strFileName,STP,strTimepoints,strText,strStartcolumn
  Dim i,FilePath,intcount,intj, intCol
  Dim objArray,oSTP_ExcelObj,objSTPXls,objActiveWB,netUIHWND,wndEXCEL7
  Dim intlastRow,lastColumn,inti,strTemp,objErrmsg,objOkClick,File
  
  Const xlFillDefault = 0
  strStartcolumn=0
  STP= getSplitValue(strParameters,"STP") 
  strTestDataFile=getSplitValue(strParameters,"TestDataFile") 
  STPSheetName= getSplitValue(strParameters,"STPSheetName")
  strSeriesName = getSplitValue(strParameters,"Series Name")
  strSourceSeriesName = getSplitValue(strParameters,"Source Series Name")
  strSeriesSourceCode=  getSplitValue(strParameters,"Series Source Code")
  strForeCast= getSplitValue(strParameters,"ForeCast")
  strSeriesStatus =  getSplitValue(strParameters,"Series Status")
  strSeriesType =  getSplitValue(strParameters,"Series Type")
  strSeriousCountry = getSplitValue(strParameters,"Serious Country")
  strOutputUnit=  getSplitValue(strParameters,"Output Unit")
  strSeriesNature =  getSplitValue(strParameters,"Series Nature")
  strSeriesFreq = getSplitValue(strParameters,"Series Freq")
  strSourceUnit =  getSplitValue(strParameters,"Source Unit")
  strUnitType = getSplitValue(strParameters,"Unit Type") 
  strTimepoints = getSplitValue(strParameters,"Timepoints")
  
  'For Unit testcase(PRT)
  If strUnitType="ZZZ" then
   strUnitType=strUnit
  End If
  

'  STPSheetName="D_1"
'  STP="Test Source 1"
'  strTestDataFile="YYY-Automation-Test Source 1"
'  strSeriesName="test-series"
'  strSourceSeriesName="test-series"
'  strSeriesSourceCode="test-series"
'  strSeriesStatus="T"
'  strSeriesType="Key"
'  strSeriousCountry="YYY"
'  strOutputUnit="NA"
'  strSeriesNature="R"
'  strSeriesFreq="D"
'  strSourceUnit="NA"
'  strUnitType="%"
'  strTimepoints="5"
'    
  objArray = Sys.FindAllChildren("ProcessName","EXCEL", 1,True)
  For i=0 to ubound(objArray)
    log.Message objArray(i).FullName
    set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*" & strTestDataFile & "*",1,True)
    If oSTP_ExcelObj.Exists = True Then
      strAliasName=objArray(i).mappedname
      strFileName=oSTP_ExcelObj.WndCaption
      If instr(strFileName,"Microsoft Excel")>0 then
        strFileName=GetFileName(strFileName,"Microsoft Excel")
      Else
        strFileName=GetFileNameExcel13(strFileName," - Excel")
      End If
      FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\Documents\Edge\EdgeAddinStorage\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")
      FilePath=FilePath & "\" & iif(instr(strFileName,"xlsx") > 0,strFileName,strFileName & ".xlsx")  
      log.Message FilePath
      Exit For
    Else
      log.Message "STP file not found in " & objArray(i).FullName
    End If
  Next
  
  Delay(2000)
  
  Set objSTPXls=GetObject(FilePath)
  With objSTPXls
    With .Sheets(STPSheetName).Select
    End With

    With .WorkSheets(STPSheetName)
      Dim r
        delay Status_Wait, "Finding last Row the Excel sheets.. Pls wait.."
        For r = 1 To .UsedRange.Rows.Count
          If IsEmpty(.UsedRange.Cells(r, 1).Value) = True AND (.UsedRange.Cells(r, 1).Text) ="" Then           
           intlastRow=r           
           Exit For
          End  If 
        Next
        inti=3
        lastColumn=.UsedRange.Columns.Count
       For inti = 3 to lastColumn
          strText=.Cells(2,inti)
          .Cells(intlastRow,inti).Select
          If UCASE(strText)=UCase("Series Name") then 
          .Cells(intlastRow,inti).Value=strSeriesName
          ElseIf UCASE(strText)=UCase("Source Series Name") then 
          .Cells(intlastRow,inti).Value=strSourceSeriesName
          ElseIf UCASE(strText)=UCase("Series Source Code") then 
          .Cells(intlastRow,inti).Value=strSeriesSourceCode
          ElseIf UCASE(strText)=UCase("ForeCast") then 
          .Cells(intlastRow,inti).Value=strForeCast 
          ElseIf UCASE(strText)=UCase("Series Status") then 
          .Cells(intlastRow,inti).Value=strSeriesStatus
          ElseIf UCASE(strText)=UCase("Series Type") then 
          .Cells(intlastRow,inti).Value=strSeriesType
          ElseIf UCASE(strText)=UCase("Series Country") then 
          .Cells(intlastRow,inti).Value=strSeriousCountry
          ElseIf UCASE(strText)=UCase("Output Unit") then 
          .Cells(intlastRow,inti).Value=strOutputUnit
          ElseIf UCASE(strText)=UCase("Series Nature") then 
          .Cells(intlastRow,inti).Value=strSeriesNature
          ElseIf UCASE(strText)=UCase("Series Freq") then 
											intFreqColumn = inti														
          .Cells(intlastRow,inti).Value=strSeriesFreq
          ElseIf UCASE(strText)=UCase("Source Unit") then 
          .Cells(intlastRow,inti).Value=strSourceUnit
          ElseIf UCASE(strText)=UCase("Unit Type") then 
              .Cells(intlastRow,inti).Value=strUnitType  
          ElseIf isDate(strText)  then
              strStartcolumn=inti
              Exit For
          End if 
         Next 
         
          Delay 5000 , "Creating a new series.."
          
          strTimepoints = getSplitValue(strParameters,"Timepoints")
          If strTimepoints=6 then
              ''Copy the Series for 1 row 
              strEndSeriesColumn=strStartcolumn-3
              strEndSeriesColumn=GetColumnName(strEndSeriesColumn)
              Delay(5000)
        
              With objSTPXls
                With .Sheets(STPSheetName).Select
                End With      
                With .WorkSheets(STPSheetName)
                   .Range("C" & intlastRow & ":" & strEndSeriesColumn & intlastRow ).Select
                    intTargetRow=intlastRow + 1
                    .Range("C" & intlastRow & ":" &strEndSeriesColumn & intlastRow).AutoFill  .Range("C" & intlastRow & ":" & strEndSeriesColumn & intTargetRow), xlFillDefault
																				.Cells(intlastRow+1,intFreqColumn).Select
																				.Cells(intlastRow+1,intFreqColumn).Value=strSeriesFreq	
																			'	.Cells(intlastRow+2,intFreqColumn).Select
																			'	.Cells(intlastRow+2,intFreqColumn).Value=strSeriesFreq																														       
                End With
              END WITH
          End If
          
          'Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND  
          Set netUIHWND =  Sys.Process("EXCEL", 2).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
     
         
          
          ''Mark Good
          'Delay 3000,"Mark Good..."
          With objSTPXls
            With .WorkSheets(STPSheetName)
                 .Cells.Select
            End With
          End With
          Call netUIHWND.Click(32, 92)
                         
          ''Upload Series
          Call netUIHWND.Click(131, 71)
          'Delay 95000 , "Uploading Series.."
          
          'Mark Good Warning
          Set File = Sys.Process("EXCEL", 2).Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Warning"")",5000)
          If File.Exists= True Then
            SYS.Keys "N"
          End If
		  
		  ''information Msgbox

        Set File = Sys.Process("EXCEL", 2)._
          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Information"")",60000)._
          Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Information"", 1)",60000)._
          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
          Waitchild("WPFObject(""PART_InactiveBorder"")",60000)
          
           If File.Exists= True Then
            SYS.Keys "[Enter]"
            Delay 2000 , "Please Wait"
          End If
        
        ''Question Msgbox
       
        
          Set File = Sys.Process("EXCEL", 2)._
          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Question"")",60000)._
          Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Question"", 1)",60000)._
          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
          Waitchild("WPFObject(""PART_InactiveBorder"")",60000)
										
										'For Unit Testcase(PRT)
      strUnitType = getSplitValue(strParameters,"Unit Type") 
      If strUnitType="ZZZ" then
        Sys.Keys "Y"
        strTCRemarks="STP Series created successfully with Unit:"&strUnit
        Call sCloseSource
        Exit Sub
      End If
          
           If File.Exists= True Then
            Sys.Keys "N"
            Delay 2000 , "Please Wait"
          End If
          
      
      
      'For Daily Check Panel testcase(PRT)
      strSeriesFreq = getSplitValue(strParameters,"Series Freq")
      If strSeriesFreq="D" then
         With objSTPXls
            With .WorkSheets(STPSheetName)
                 strSeriesID=.Cells(intlastRow,1).Value
                 DescText = intlastRow                 
            End With
          End With
          strTCRemarks="STP Series created successfully with Series ID="&strSeriesID
          Sys.Keys "N"
          Exit Sub
      End If
          
        If File.Exists Then
          Sys.Keys "N"
        End If
        
        With objSTPXls
          With .WorkSheets(STPSheetName)
               .Cells.Select
               '      Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND 
               ' Click on Refresh Button
                Set netUIHWND =  Sys.Process("EXCEL", 2).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
                Call netUIHWND.Click(296, 72)
                Call sExcelFullHistory
          End With
        End With
    End With
  End With 
  log.Message  "New Series Created"
  strTCRemarks =  "Created Series for STP" 
  strTestCaseResult="PASS"
  
  
  
  With objSTPXls
    With .Sheets(STPSheetName).Select
    End With      
    With .WorkSheets(STPSheetName)
        intcount=0
        if strStartcolumn=0 then
        End if
        For intj= (strStartcolumn + 1) to lastColumn 
          If IsEmpty(.UsedRange.Cells(intlastRow, intj).Value) = True AND (.UsedRange.Cells(r, intj).Text) ="" Then
            if intcount<=5 then
              .Cells(intlastRow,intj).select
              .Cells(intlastRow,intj).Value=strTimepoints
              strTimepoints=strTimepoints + 1
            Else
              Exit For
            End if 
            intcount=intcount+1 
          End If  
        Next
        
'        strTimepoints = getSplitValue(strParameters,"Timepoints")
'        If strTimepoints=6 then
'            ''Copy the Series for 1 row
'            strStartColumnName=strStartcolumn + 1
'            strStartColumnName=GetColumnName(strStartColumnName) 
'            strEndSeriesColumn=intj
'            strEndSeriesColumn=GetColumnName(strEndSeriesColumn)
'            Delay(5000)
'        
'            With objSTPXls
'              With .Sheets(STPSheetName).Select
'              End With      
'              With .WorkSheets(STPSheetName)
'                 .Range(strStartColumnName & intlastRow & ":" & strEndSeriesColumn & intlastRow ).Select
'                  intTargetRow=intlastRow + 1
'                  .Range(strStartColumnName & intlastRow & ":" &strEndSeriesColumn & intlastRow).AutoFill  .Range(strStartColumnName & intlastRow & ":" & strEndSeriesColumn & intTargetRow), xlFillDefault
'              End With
'            END WITH
'        End If
    
       'Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND 
       Set netUIHWND =  Sys.Process("EXCEL", 2).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
        ''Upload Series
        Call netUIHWND.Click(131, 69)
        'Delay 90000 , "Uploading.."
        
         'Mark Good Warning
          Set File = Sys.Process("EXCEL", 2).Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Warning"")",5000)
          If File.Exists= True Then
            SYS.Keys "N"
          End If
        
        ''Waiting for Msgbox
        Set File = Sys.Process("EXCEL", 2)._
          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Information"")",60000)._
          Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Information"", 1)",60000)._
          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
          Waitchild("WPFObject(""PART_InactiveBorder"")",60000)
          
           If File.Exists= True Then
            SYS.Keys "[Enter]"
            Delay 2000 , "Please Wait"
          End If
		  
		    ''Question Msgbox
          
              Set File = Sys.Process("EXCEL", 2)._
          Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Question"")",60000)._
          Waitchild("WPFObject(""CustomMessageBoxWindow"", ""Question"", 1)",60000)._
          Waitchild("WPFObject(""Grid"", """", 1)",60000)._
          Waitchild("WPFObject(""PART_InactiveBorder"")",60000)
        
       ' For PRT testcase TC_Todo_30
       strTimepoints = getSplitValue(strParameters,"Timepoints")
        If strTimepoints=0 then
           If File.Exists= True Then
              Sys.Keys "Y"
              Delay 2000 , "Please Wait"
           End If
           Exit Sub
        End If
        
            If File.Exists= True Then
            Sys.Keys "N"
            Delay 2000 , "Please Wait"
          End If
        
        'For PRT testcase TC_Todo_11
       strTimepoints = getSplitValue(strParameters,"Timepoints")
        If strTimepoints=5 Then 'or strTimepoints=6 then
           With objSTPXls
          With .WorkSheets(STPSheetName)
               .Cells.Select
                'Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.toolbarRibbon.Ribbon.NUIPane.NetUIHWND 
                Set netUIHWND =  Sys.Process("EXCEL", 2).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
                Call netUIHWND.Click(296, 72) 'Click Refresh
                Call sExcelFullHistory
          End With
         End With          
         Exit Sub
        End If
              
        'Refresh Series
        With objSTPXls
          With .WorkSheets(STPSheetName)                 
                'Set wndEXCEL7 = Aliases.EXCEL.wndXLMAIN.XLDESK.wndEXCEL72
                .Cells(intlastRow,1).Select
                ' Call wndEXCEL7.Keys("^c")
               strSeriesID=.Cells(intlastRow,1).Value															
               strSeriesID=.Cells(intlastRow,1).text															
              .Cells(intlastRow,lastColumn).Select
          End With
        End With
         strTCRemarks =  "Created New Series for STP - "&strSeriesID 
    End With
  End With 
'  objSTPXls.Close
'  Delay(10000)
  objArray = Sys.FindAllChildren("ProcessName","EXCEL", 5,True)
  For i=0 to ubound(objArray)
    log.Message objArray(i).FullName
    set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*RUN*",1,True)
    If oSTP_ExcelObj.Exists = True Then
    Else
      objArray(i).Close
    End If
  Next
  Delay(5000)
  Call SClosesource()
End Sub 


Sub seriesSeclection()

   strTemp="WPFObject(""SourceTreeListView"")"      
   Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True) 
   
   'strTemp = "WPFObject("SourceSeriesTableView")"
   Set objSeriesPanel = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceSeriesViewControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("SourceSeriesGridControl").WPFObject("SourceSeriesTableView")
   
   Redim SeriesID(3,0)
   'strFolderCount = 3
   P=4
   For X= 0 to 2
    SeriesCount = objSeriesPanel.DataContext.Count
    Redim preserve SeriesID(3,SeriesCount)
    For Y= 0 to SeriesCount-1    
      SeriesID(X,Y) = objSeriesPanel.DataContext.Item(Y).SeriesId   
      msgbox SeriesID(X,Y)
    Next
    intRow = objGridControl.Nodes_2.Item(0).Nodes.Item(0).Nodes.Item(P).get_RowHandle
    Call objGridControl.ClearSelectionCore
    Call objGridControl.FocusViewAndRow(objGridControl,intRow)
    objGridControl.SetFocusOnCurrentItem        
    Call objGridControl.SelectRowCore(intRow)   
    P=P+1    
    Delay 200
   Next
End Sub


'Testcase :TC_SOURCE_PRT11:Verify Copy Folder and Paste Above source folder.

Sub sCopyFolder(strParameters)
'Sub sCopyFolder()

  On Error Resume Next
  Dim strTemp, objGridControl, objTemp, blnFlag, newSourceName, intTotNodeCnt, intSeriesID(0), strSourceName(3)
  
  
   strSource_Name=getSplitValue(strParameters,"SOURCE")
'   strLevel2Firstsrc_Name=getSplitValue(strParameters,"Level2FirstSource")
'   strLevel2Secondsrc_Name=getSplitValue(strParameters,"Level2FirstSource")
'   strPasteOption = getSplitValue(strParameters,"PASTEOPTION") 
   
     
   strCopyOption= getSplitValue(strParameters,"COPYOPTION") 
   strPasteOption = getSplitValue(strParameters,"PASTEOPTION") 
   strCategory=getSplitValue(strParameters,"CATEGORY") 
   strLevel3Source=getSplitValue(strParameters,"WorkSpaceLevel3") 
   strLevel2Source=getSplitValue(strParameters,"WorkSpaceLevel2")
   strFolderCount=getSplitValue(strParameters,"FolderCount")
   strText =getSplitValue(strParameters,"DISPLAYTEXT") 
   strLevel = getSplitValue(strParameters,"LEVEL")
   strWithSeries = getSplitValue(strParameters,"WITHSERIES")
   blnFlag = False
   
   Redim intSeriesID(Cint(strFolderCount))
   
   
'   strSource_Name = "Test"
'   strLevel2Source ="Level2-CopyFolder"
'   strLevel3Source =CopyFolderWithSeries-1
'   strFolderCount = 1
'   strCopyOption = "WPFObject(""ContentControlEx"", ""Copy Folder Only"", 2)" 
'   strPasteOption =" WPFObject(""ContentControlEx"", ""Paste Above"", 2)" 
'   strCategory = "Above"
'   strWithSeries="Yes"
'   strLevel=3
'   strFolderCount =1
'   IntRowNumber(0) = 0 
'   IntRowNumber(1) = 0 
  
     
  
   
     
  ' Open for Edit Source
   Call sOpenSourceWorkSpace(strParameters)
   Call sEdgeProcessor()   
   
'      
'  'Select the Level 3 Source folder under Sorce Workspace:         
  IntRowNumber = fWorkSpaceRowSelection(strParameters) 

   strTemp="WPFObject(""SourceTreeListView"")"      
   Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True) 
   
   strTemp = WPFObject("SourceSeriesTableView")
   Set objSeriesPanel = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceSeriesViewControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("SourceSeriesGridControl").WPFObject("SourceSeriesTableView")
             
   
  'Select the Required Number of rows to copy. 
 
  X=0
  Y=0 
   Delay 2000, "Pls Wait ..."
    If strFolderCount > 1 Then       
        For I = 1 to strFolderCount-1          
          If Ucase(strWithSeries) = Ucase("Yes") Then
            intSeriesID(X) = objSeriesPanel.DataContext.Item(Y).SeriesId  
             X=X+1   
           End IF           
            SYS.Keys("![Down]") 
            Delay 1000
            If strLevel = 2 Then 
              IntRowNumber(1) = IntRowNumber(1)+1
              intRowCount = IntRowNumber(1) 
              'msgbox intRowCount
            ElseIf strLevel = 3 Then                 
                 IntRowNumber(2) = IntRowNumber(2)+1
                intRowCount = IntRowNumber(2)  
              'msgbox intRowCount         
            End If       
        Next  
    ElseIf strFolderCount = 1 Then 
          If Ucase(strWithSeries) = Ucase("Yes") Then
           intSeriesID(X) = objSeriesPanel.DataContext.Item(Y).SeriesId  
           'X=X+1
         End IF 
         Select Case strLevel
               Case 2
                 intRowCount = IntRowNumber(1) 
               Case 3
                  intRowCount = IntRowNumber(2)                 
         End Select         
    End If

    intSeriesID(X) = objSeriesPanel.DataContext.Item(Y).SeriesId
   
   'Get the Row Count as per Paste above /Below               
    If strFolderCount > 0 And (Ucase(strCategory) = Ucase("Below"))  Then 
         If strLevel = 2 Then 
              IntRowNumber(1) = IntRowNumber(1)+1
              intRowCount = IntRowNumber(1)
              'msgbox intRowCount 
            ElseIf strLevel = 3 Then 
              IntRowNumber(2) = IntRowNumber(2)+1
              intRowCount = IntRowNumber(2)
              'msgbox intRowCount  
            End If        
    ElseIf strFolderCount < 0 Then 
       strTCRemarks = "'Copy' and 'Paste Above' Fucntionality requires atleast one folder to copy"
       strTestCaseResult="FAIL" 
       Exit Sub 
    End If
      
  'Copy and Paste selected Folder
   Call sCopyPaste(strCopyOption,strPasteOption)
   Delay 500
   P= 0
   
   'Amend The Description and Description Local Name   
   If Ucase(strCategory) = Ucase("Above") OR  Ucase(strCategory) = Ucase("Below")Then
    For J = 0 to strFolderCount-1 
        'intNewNumber = Minute(Time) + Second(Time) + J 
          DescText=Replace(aqDateTime.Now,"/","-")
          intNewNumber =Replace(DescText,":","_")         
          intNewNumber1 = left(intNewNumber,1)+ Minute(Time) + Second(Time) + J &"-" &intNewNumber
        If strLevel = 2 Then          
            intLen= Len(strLevel2Source)-Instr(strLevel2Source, "-")             
            newSourceName =  Replace(strLevel2Source ,Right(strLevel2Source ,intLen), intNewNumber1)       
            Delay 200       
            Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Content.set_Description(newSourceName)
            Delay 200  
            Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Content.set_DescriptionLocal(newSourceName)
            Delay 200  
            Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Content.set_SourceCode(newSourceName) 
            Delay 200  
            strName(P) =  newSourceName 
            IntRowNumber(1) = IntRowNumber(1)+1 
            P=P+1
            Delay 500         
        ElseIf  strLevel = 3 Then 
            intLen= Len(strLevel3Source)-Instr(strLevel3Source, "-")
            newSourceName =  Replace(strLevel3Source ,Right(strLevel3Source ,intLen), intNewNumber1) 
            Delay 200
            Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Content.set_Description(newSourceName)
            Delay 200
            Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Content.set_DescriptionLocal(newSourceName) 
            strName(P) =  newSourceName 
            IntRowNumber(2) = IntRowNumber(2)+1 
            P=P+1
            Delay 500        
       End If               
    Next
   End IF
    
   P= 0
   If Ucase(strCategory) = Ucase("Inside") Then
    For J = 0 to strFolderCount-1  
        intNewNumber = Minute(Time) + Second(Time) + J         
        If strLevel = 2 Then         
          intLen= Len(strLevel2Source)-Instr(strLevel2Source, "-")
          newSourceName =  Replace(strLevel2Source ,Right(strLevel2Source ,intLen), intNewNumber)        
          Delay 200
          Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(J).Content.set_Description(newSourceName)
          Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(J).Content.set_DescriptionLocal(newSourceName)           
        ElseIf strLevel = 3 Then 
          intLen= Len(strLevel3Source)-Instr(strLevel3Source, "-")
          newSourceName =  Replace(strLevel3Source ,Right(strLevel3Source ,intLen), intNewNumber)        
          Delay 200
          Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Nodes.Item(J).Content.set_Description(newSourceName)
          Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Nodes.Item(J).Content.set_DescriptionLocal(newSourceName) 
        End If
        strName(P) =  newSourceName       
        P=P+1 
    Next
   End IF
   
    If Ucase(strWithSeries) = Ucase("Yes") Then   
       'msgbox strSourceName(0)
       intTotNodeCnt=objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Count  
       For intK=0 to intTotNodeCnt-1  
          If Ucase(objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(intK).Content.Description)=Ucase(strSourceName(0)) then
          intRow=objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(intK).get_RowHandle
            objGridControl.Keys "^[Home]"
            Call objGridControl.ClearSelectionCore
            Call objGridControl.FocusViewAndRow(objGridControl,intRow)
            objGridControl.SetFocusOnCurrentItem        
            Call objGridControl.SelectRowCore(intRow) 
            Delay 2000, "Please Wait"         
            'Call objGridControl.SelectRowCore(intRow-1)
            'IntRowNumber(1) =intJ        
            Exit For
        End If 
       Next
   
    newSeriesCount = 0 
    
     For I = 0 to strFolderCount-1             
              intNewSeriesID(I) = objSeriesPanel.DataContext.Item(Y).SeriesId
               If intNewSeriesID(I) = intSeriesID(I) Then
                  newSeriesCount = newSeriesCount+1    
                  SYS.Keys("[Down]") 
                  Delay 1000                     
                End If
     Next        
       
         Delay 200
         If newSeriesCount = Cint(strFolderCount) Then 
           strTCRemarks = "All Series are Copied Correctly"
           strTestCaseResult="PASS"
        Else
          strTCRemarks = "All Series are Not Copied Correctly"
          strTestCaseResult="FAIL" 
          Exit Sub  
        End If
      
   End If
    
   'Save and Verify Copied/Cut Folder
    Call sSaveAndVerify(strParameters,IntRowNumber)    
    
   
End Sub 


''****************************************************************************************************************************************************************
'Upload workspace after copying:


Sub Test52
   strTemp= "WPFObject(""ContentControlEx"", ""Expand All"", 2)"
   Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
   objTemp.Click 

 End Sub


Sub Test53
  Dim gridControl
  Set gridControl = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.BarManager.DockPanel.Grid.PendingChangeGridControl
  Call gridControl.ClickCell(0, "Workspace Name")
  Call gridControl.DblClickCell(0, "Workspace Name")
  Call gridControl.PendingChangeTableView.Keys("~[ReleaseLast]")
End Sub

Sub Test54
  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.BarManager.DockPanel.Grid.PendingChangeGridControl.DblClickCell(0, "Workspace Name")
End Sub

Sub Test55
  Dim dockPanel
  Dim ribbonPageGroupControl
  Dim layoutPanel
  Dim barManager
  Dim hierarchyPanel
  Dim rowControl
  Set dockPanel = Aliases.EdgeClient.HwndSource_Shell3.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel
  Set ribbonPageGroupControl = dockPanel.RibbonControl.RibbonSelectedPageControl.RibbonPagesControl.RibbonpagegroupscontrolHome.RibbonpagegroupcontrolModule
  Call ribbonPageGroupControl.BaritemlinkinfoSource.BarbuttonitemlinkcontrolSource.TextSplitterControl.ContentcontrolSource.Click(28, 6)
  Set layoutPanel = dockPanel.DockLayoutManager.LayoutGroup.LayoutPanel
  Call layoutPanel.Click(642, 11)
  Call ribbonPageGroupControl.BaritemlinkinfoLayout.BarbuttonitemlinkcontrolLayout.ItemBorderControl.Click(28, 38)
  Set barManager = layoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.WaitControl.BarManager
  Set hierarchyPanel = barManager.DockPanel.Grid.SourceTreeControl.SourceTreeListView.HierarchyPanel
  Set rowControl = hierarchyPanel.RowControl
  Call rowControl.CellsControl.LightweightCellEditor.InplaceBaseEdit.Click(54, 7)
  Call rowControl.Keys("[Enter]")
  Set rowControl = hierarchyPanel.RowControl2
  Call rowControl.CellsControl.LightweightCellEditor.InplaceBaseEdit.EditorControlStub.Click(54, 10)
  Call rowControl.RowMarginControl.Click(35, 11)
  Call hierarchyPanel.RowControl3.CellsControl.LightweightCellEditor.InplaceBaseEdit.EditorControlStub.MouseWheel(-1)
  Call hierarchyPanel.RowControl4.CellsControl.LightweightCellEditor.InplaceBaseEdit.EditorControlStub.MouseWheel(-3)
  Call hierarchyPanel.RowControl5.CellsControl.LightweightCellEditor.InplaceBaseEdit.EditorControlStub.MouseWheel(-2)
  Call hierarchyPanel.RowControl6.CellsControl.LightweightCellEditor.InplaceBaseEdit.EditorControlStub.MouseWheel(-1)
  Call hierarchyPanel.RowControl7.CellsControl.LightweightCellEditor.InplaceBaseEdit.EditorControlStub.MouseWheel(1)
  Call hierarchyPanel.RowControl8.CellsControl.LightweightCellEditor.InplaceBaseEdit.EditorControlStub.Click(49, 11)
  Call barManager.ClickItem("[0]|Open Global STP")
End Sub






'======================================================================================================================================================================================
'Function to Select Level 3 Folder to Cut 
Function fSelectLevel3(strParameters,strLevel3FirstSRC_Name,strLevel3SecondSRC_Name)
'Function fSelectLevel3()

On Error Resume Next
  Dim nRowNumber(5)
  
     strPasteOption = getSplitValue(strParameters,"PASTEOPTION") 
     strFolderCount=getSplitValue(strParameters,"FolderCount")
     strWithSeries = getSplitValue(strParameters,"WITHSERIES")
     
          
     strEnvi = "Edge ( US Integration )" 
     strPasteOption ="WPFObject(""ContentControlEx"", ""Paste Below"", 2)"
     strFolderCount=1
     'strWithSeries = "Yes"
'     strLevel3FirstSRC_Name = "CopyFolder-1"
'     strLevel3SecondSRC_Name= "Level3-CopyFolder"


     
   


     
  
     
 'Expand All Source

  Delay 2000 , "Please Wait"
  strTemp = "WPFObject(""ContentControlEx"", ""Expand All"", 2)"
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  If objTemp.Exists Then 
     objTemp.Click  
     Delay 200
  End If
  
  Delay 500
'Select the Level4 Folder to Peast the Copied folder
  strTemp="WPFObject(""SourceTreeListView"")"   
  Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  LevelCnt = objGridControl.Nodes_2.Count
    For IntI= 0 to LevelCnt-1
      Leve2Cnt = objGridControl.Nodes_2.Item(IntI).Nodes.Count      
      For IntJ = 0 to Leve2Cnt-1        
        Leve3Cnt = objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Count
        For IntK = 0 to Leve3Cnt-1               
           'Copy the Selected Folder
           'Delay 1000  
           If Ucase(objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Item(IntK).Content.Description)=Ucase(strLevel3FirstSRC_Name) Then
              Delay 1000
            'Select the Level3 source to Copy  
               intRow=objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Item(IntK).get_RowHandle   
               objGridControl.Keys "^[Home]"
               Call objGridControl.ClearSelectionCore
               Call objGridControl.FocusViewAndRow(objGridControl,intRow)
               objGridControl.SetFocusOnCurrentItem        
               Call objGridControl.SelectRowCore(intRow)
               If strFolderCount >1 Then 
                  For X = 1 to strFolderCount-1
                    SYS.Keys("![Down]") 
                    Delay 1000
                  Next
               End If
               If strFolderCount = 1 And Ucase(strWithSeries) = Ucase("Yes") Then
                   Call sEdgeProcessor() 
                   Delay 5000 
                   strTemp = WPFObject("SourceSeriesTableView")
                   Set objSeriesPanel = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceSeriesViewControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("SourceSeriesGridControl").WPFObject("SourceSeriesTableView")
                   DescText = objSeriesPanel.DataContext.Item(0).SeriesId   
               End If
                 'Delay 2000                        
               fCut() 
               Call sEdgeProcessor() 
               Exit for
               Delay 200
            End If
        Next 
      Next
    Next
    
'Select the Level3 Folder to Peast the Copied folder
  strTemp="WPFObject(""SourceTreeListView"")"   
  Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  LevelCnt = objGridControl.Nodes_2.Count
    For IntI= 0 to LevelCnt-1
      Leve2Cnt = objGridControl.Nodes_2.Item(IntI).Nodes.Count
      For IntJ = 0 to Leve2Cnt-1
        Leve3Cnt = objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Count
        For IntK = 0 to Leve3Cnt-1               
           'Copy the Selected Folder
           Delay 1000 
           If Ucase(objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Item(IntK).Content.Description)=Ucase(strLevel3SecondSRC_Name) Then 
                intRow=objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Item(IntK).get_RowHandle   
               objGridControl.Keys "^[Home]"
               Call objGridControl.ClearSelectionCore
               Call objGridControl.FocusViewAndRow(objGridControl,intRow)
               objGridControl.SetFocusOnCurrentItem        
               Call objGridControl.SelectRowCore(intRow) 
              ' nRowNumber(1) = IntJ
               'Delay 2000
                Call  fPaste(strPasteOption)
                Call sEdgeProcessor()   
                Exit For
                Delay 200              
           End If                
        Next 
      Next
    Next
    'nRowNumber(3) = intRow
   'fSelectLevel3 = nRowNumber
End Function  
'==================

'Testcase :TC_SOURCE_PRT40-{}:Verify Cut Folder and Paste Above/Below source folder/s.

Sub sCutFolders(strParameters)
'Sub sCutFolders()


Delay 3000 , "Pls Wait..."

 On Error Resume Next
  Dim strTemp, objGridControl, objTemp, blnFlag, newSourceName, intTotNodeCnt, intSeriesID(0), strSourceName(3)
  
  
   strSource_Name=getSplitValue(strParameters,"SOURCE")
   strLevel2Source=getSplitValue(strParameters,"Level2Source")
   strLevel3FirstSRC_Name=getSplitValue(strParameters,"Level3FirstSRC_Name")
   strLevel3SecondSRC_Name=getSplitValue(strParameters,"Level3SecondSRC_Name")  
   strCategory=getSplitValue(strParameters,"CATEGORY")
   strLevel =getSplitValue(strParameters,"Level") 
   bFlag = False
   
   
   'strText =getSplitValue(strParameters,"DISPLAYTEXT")      
'   'strCopyOption= getSplitValue(strParameters,"COPYOPTION") 
'  ' strPasteOption = getSplitValue(strParameters,"PASTEOPTION") 
'   'strCategory=getSplitValue(strParameters,"CATEGORY") 
'   strLevel3Source=getSplitValue(strParameters,"WorkSpaceLevel3") 
'   strLevel2Source=getSplitValue(strParameters,"WorkSpaceLevel2")
'   strFolderCount=getSplitValue(strParameters,"FolderCount")'  
'   strLevel = getSplitValue(strParameters,"LEVEL")
'   strWithSeries = getSplitValue(strParameters,"WITHSERIES")

'   
'   Redim intSeriesID(Cint(strFolderCount))
'   
   
'  strLevel3FirstSRC_Name = "CopyFolder-1"
'  strLevel3SecondSRC_Name = "Level2FirstFolder" 
 
  
   ' Open for Edit Source
   Call sOpenSourceWorkSpace(strParameters)
   Call sEdgeProcessor() 
   
   'Cut required Level3 source and peast above/Below/Inside 
   Call fSelectLevel3(strParameters,strLevel3FirstSRC_Name,strLevel3SecondSRC_Name)
   
    'msgbox DescText 
    'Save the Workspace
    Call fSaveWorkspace() 
    Call sEdgeProcessor()         
    Call sCloseSWV() 
    
    'Open the Saved Workspace
    Call fOpenSavedWorkspace()
    'msgbox intRowNum
   
    
    If Ucase(Trim(strLevel)) = Trim(Ucase("Two")) Then 
      intRowCount = fVerifyLevel2SavedWorkspace(strParameters)
    Else
      intRowCount = fVerifySavedWorkspace(strParameters)
    End If  
  
End Sub

Sub stest11()
  'Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "").WPFObject("CustomMessageBoxWindow", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).WPFObject("Button_OK")
  strTemp= "WPFObject(""Button_OK"")"
  set objOK = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "").WPFObject("CustomMessageBoxWindow", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).WPFObject("Button_OK")
  if objOK.Exists then 
    objOK.Click
  End if 

End Sub 

Sub Test56
  Dim wndXLMAIN
  Dim netUIHWND
  Call Aliases.explorer.wndShell_TrayWnd.ReBarWindow32.MSTaskSwWClass.MSTaskListWClass.Click(355, 27)
  Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
  wndXLMAIN.Activate
  Set netUIHWND = wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND 
  'Mark Good
  Call netUIHWND.Click(232, 92)
  'Upload
  Call netUIHWND.Click(326, 68)
  'Click Refresh
  Call NetUIHWND.Click(491, 64)
End Sub

Sub Test57
  strEnvi = "Edge ( Development Test )"    
  set objCell = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1)
  objCell.Click
End Sub

Sub Test58
  strEnvi = "Edge ( Development Test )"    
  Set objAttGrid=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("LayoutSeriesViewControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("LayoutSeriesGridControl")
  'Sys.Process("EdgeClient").WPFObject("HwndSource: RibbonWindow").WPFObject("RibbonWindow").WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 2).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("LayoutSeriesViewControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("LayoutSeriesGridControl")
  Delay 2000,"Pls Wait.."
  'Call objAttGrid.ClickCell(0,"Disabled Flag")
  objAttGrid.Keys "^[END]"
  objAttGrid.Click
  objAttGrid.Keys("[PageDown]")
  
End Sub

Sub Test59
  'Call Aliases.EdgeClient.HwndSource_Shell4.Shell.RowControl3.PART_Editor.ClickButton(cbChecked)
  'Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( Development Test )").WPFObject("Shell", "Edge ( Development Test )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("LayoutTreeListControl").WPFObject("LayoutTreeListView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 9).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 3)
End Sub

Sub Test60
 Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("LayoutTreeListControl").WPFObject("LayoutTreeListView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 8).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 3).WPFObject("PART_Editor")
  objTemp.ClickButton(cbUnchecked)
  objTemp.ClickButton(cbChecked)
End Sub

Sub Test61
  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.BarManager.AdornerDecorator.AdornedControl.Grid.DockPanel.RowControl.PART_Editor.ClickButton(cbChecked)
End Sub

Sub Test62
  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.BarManager.AdornerDecorator.AdornedControl.Grid.DockPanel.RowControl.PART_Editor.ClickButton(cbUnchecked)
End Sub

Sub sClassName()
  
  
'     Browsers.Item(btIExplorer).Run("https://www.ceicdata.com/en/country/french-polynesia")         
'      Set page = Sys.Browser("*").Page("*")              
'      Set links = page.contentDocument.links
'      Set ClNameLevel2 = page.contentDocument.getElementsByClassName("block block-main-content")
'
'      intlinksCount = ClNameLevel2.length
'      msgbox intlinksCount
'      For I  = o to intlinksCount-1
'        'Set ClNameLevel3 = page.contentDocument.getElementsByClassName("datapage-table-row ")
'        Set link = ClNameLevel2.item(I)
'       ' Level1Url = link.getElementsByClassName("name-cell")
'       ' msgbox Level1Url.length
'       Level1Url = link.href
'       msgbox Level1Url
'      Next
'         

  'Call Browsers.Item(btIExplorer).Run("https://www.ceicdata.com/en/country/french-polynesia")
  Browsers.Item("firefox").Run ("https://www.ceicdata.com/en/country/french-polynesia")
  strXpath = "//td[@class ='name-cell']/a"
  'strPage = strBrowserName & "Untitled-insight/views"
  arrTemp = Sys.Browser("firefox").Page("https://www.ceicdata.com/en/country/french-polynesia").EvaluateXPath(strXpath,True)
  'msgbox objTemp.count
    'FindChildByXPath(strXpath,True)  
    'Level1Url = link.href
     For i = 0 To Ubound(arrTemp) - 1
      msgbox arrTemp(i).href
     Next
          
          
End Sub







Sub sTestdApp
  'Call TestedApps.notepad.Run
  msgbox strComp("Chethana", "Chethana")
End Sub

Sub Test111()
   'Click on Open Global STP Button
   strEnvi = "Edge ( US Integration )" 
   'strTemp = "(""ContentControlEx"", ""Open Global STP"", 2)"
    ' Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("Grid", "", 2).WPFObject("Grid", "", 1).WPFObject("SourceSeriesScheduleGridControl")
 
   DescText = "12/1/2046"  
   
   
   
  
End Sub

Sub sCalc()

    On Error Resume Next  
    Dim ObjExcel,strPath,objsheet,num1,num2,op,objWorkbook

'      strPath = "C:\Users\rchethana\Desktop\Book132.xlsx"  
'      Set ObjExcel = CreateObject("Excel.Application")
'      Set objWorkbook = objExcel.workbooks.Open(strPath)
'  
'      Dim objexcel,strexcelPath,objsheet,num1,num2,op

    strexcelPath = "C:\Users\rchethana\Desktop\Book132.xlsx" 
    Set objexcel = CreateObject("Excel.Application")
    Set objWorkbook = objExcel.Workbooks.Open(strexcelPath)
    'objexcel.Workbooks.Open(strexcelPath)

    objWorkbook.WorkSheets(1).Activate
    objexcel.Visible = True

    Set objsheet = objexcel.ActiveWorkbook.Worksheets(1)


    objsheet.cells(1,1).value = "sl.no"
    objsheet.cells(1,2).value = "num1"
    objsheet.cells(1,3).value = "num2"
    objsheet.cells(1,4).value = "operator"
    objsheet.cells(1,5).value = "result"


    'objsheet.cells(2,5).value = num1 * num2
    'objsheet.cells(3,5).value = num1 - num2
    'objsheet.cells(4,5).value = CInt(num1) + CInt(num2)


        Dim X,T
    T=1
        For  X = 2 To 15
        	objsheet.Cells(X,2).Value = T
        	T=T+1 	
        Next 
    
    
      Dim Y,U,a
      a = 15
      U=1 
        For  Y = 2 To a Step 1
        	objsheet.Cells(Y,3).Value = U
        	U=U+1
        Next
    
     
        Dim b,c
    
        For b = 2 To 15
        objsheet.cells(b,5).value = c
        b = b+1
        c=num1+num2
        next

    
  
  
End Sub









Sub Test63
  Dim grid
  Dim dateEdit
  Set grid = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.Grid.Grid2
  grid.ScrollViewer.VScroll.Pos = 0
  Set dateEdit = grid.DateeditTimepoint
  Call dateEdit.Click(57, 6)
  Call dateEdit.Click(36, 11)
  Call dateEdit.Keys("[BS][BS][BS]20")
End Sub

Sub Test64
  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.Grid.Grid.SourceSeriesGridControl.RowControl.LightweightCellEditor.InplaceBaseEdit.Keys("^f")
End Sub

Sub Test65
 'Enter the TimepointDate:
    'strTemp = "WPFObject(""DateEdit"", "", 1)"
    Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Root").WPFObject("Root").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 2)
    objTemp.WPFObject("StackPanel", "", 1).WPFObject("StackPanel", "", 1).WPFObject("DateEdit", "", 1).set_Text("12/1/2045")
    objTemp.WPFObject("StackPanel", "", 1).WPFObject("StackPanel", "", 3).WPFObject("ComboBox", "", 1).set_Text("Released")
'  strTemp = "WPFObject(""Button"", ""Find"", 1)"
'  Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Root").FindChild("Name", strTemp, 50, True)
'  objTemp.Click
    
End Sub

Sub Test66
  'Dim gridControl
  'Set gridControl = Aliases.EdgeClient.HwndSource_Root.Root2.FindAndReplaceScheduleGridControl
  'Call gridControl.ClickCell(0, 0)
  'Call gridControl.ClickCell(0, 0)
  
'  Set objSelectGrid = Sys.Process("EdgeClient").WPFObject("HwndSource: Root").WPFObject("Root").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 3).WPFObject("Grid", "", 1).WPFObject("FindAndReplaceScheduleGridControl")
'  Call objSelectGrid.ClickCell(0, 0)
'  objSelectGrid.DataContext.Item(0).set_SsDateTo("12/17/2018")

'strTemp = "12/24/2018 6:29:59 PM"
'strSplit = Split(strTemp," ")
'msgbox strSplit(0)
'
'  strTemp = "WPFObject(""FindAndReplaceScheduleGridControl"")"
'    Set objGrid = Sys.Process("EdgeClient").WPFObject("HwndSource: Root").FindChild("Name", strTemp, 50, True)
'    intRowCnt = objGrid.wRowCount
'    msgbox intRowCnt

  Call sClosePanel2withYes(637)
  Delay 1000

  
End Sub

Sub Test67
'  Dim excel
'  Set excel = Aliases.EXCEL
'  Call excel.wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND.Click(634, 64)
'  Call excel.TPDetailsForm.mainPanel.gridView.Click(287, 29)
'  Call excel.DropDownPopupForm.Click(32, 98)
  
  Set Excel = Aliases.EXCEL
  Set NetUIHWND = Sys.Process("EXCEL", 2).Window("XLMAIN", "YYY-Automation_UIT4-Test - Excel", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
  Call NetUIHWND.Click(634, 64)
  Delay 1000 
  
  Set objTimepointDetails = Sys.Process("EXCEL", 2).WinFormsObject("TPDetailsForm").WinFormsObject("mainPanel").WinFormsObject("gridView")
  Call objTimepointDetails.ClickCell(0, "Timepoint Type")
  
  Call objTimepointDetails.Click(243, 64)  
  Call Excel.DropDownPopupForm.Click(20, 96)
  Call objTimepointDetails.Click(442, 166)
  
  'Click on Save Button 
  Set objSave = Sys.Process("EXCEL", 2).WinFormsObject("TPDetailsForm").WinFormsObject("mainPanel").WinFormsObject("buttonPanel").WinFormsObject("saveButton")
  objSave.Click
  'tableLayoutPanel.buttonPanel.saveButton.ClickButton
  
 
  
 ' Sys.Process("EXCEL", 2).WinFormsObject("DropDownPopupForm", "")
  
End Sub











Sub Test68
  Dim edgeClient
  Dim hwndSource
  Set edgeClient = Aliases.EdgeClient
  Set hwndSource = edgeClient.HwndSource_Shell
  Call hwndSource.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel2.Click(636, 11)
  edgeClient.HwndSource_CustomMessageBoxWindow5.CustomMessageBoxWindow2.Grid.Grid.PART_ContentOffset.Grid.PART_ContainerContent.Grid.Grid.DockPanel.Button_Yes.ClickButton
  hwndSource.Activate
End Sub


Sub sDate1()
  'msgbox date
  'msgbox  DateDiff("d",date,"1/19/2019")

  
End Sub

Sub Test69
  Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.BarManager.AdornerDecorator.AdornedControl.Grid.DockPanel.SourceTreeListControl.SourceTreeListView.HierarchyPanel.RowControl3.CellsControl.WPFObject("LightweightCellEditor", "", 4).WPFObject("CheckBox", "", 1).set_IsChecked(False)
End Sub

Sub Test70

    strTemp= "WPFObject(""TextEdit"", """", 1)"
    strEnvi = "Edge ( US Integration )" 
    Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).FindChild("Name", strTemp, 50, True)
    If objTemp.Exists Then 
      intCnt = objTemp.wText      
      If Cint(intCnt) = 3 Then 
        strTCRemarks =  "Size of changes is updated to '3'"
        strTestCaseResult = "PASS"
      Else
        strTCRemarks =  "Size of changes is updated to '3'"
        strTestCaseResult = "PASS"
      End If
    End If
    
    Call sCloseSWV()
    Delay 100
    Call sCloseWithYes(1299)
    Delay 1000  
    Call SourceWorkSpacevwr()
     
End Sub





Sub Test71
  Dim hwndSource
  Set hwndSource = Aliases.EdgeClient.HwndSource_Shell
  hwndSource.Activate
  Call hwndSource.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.BarManager.AdornerDecorator.AdornedControl.Grid.SourceSeriesViewControl.SourceSeriesGridControl.ClickCell(0, "Series ID")
End Sub

sub aABC()
'    Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceSeriesViewControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("SourceSeriesGridControl")
'    Call objTemp.ClickCell(0, 25)
'    Call objTemp.ClickCell(1, 25)

   strTemp = "WPFObject(""SourceTreeListView"")"
   Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
   
   strDesc = objTemp.Nodes_2.Item(0).Nodes.Item(0).Nodes.Item(4).Content.Description
   strnum = Right(strDesc,1)
   intnum = Cint(strnum)+ 1
   strDesc1 = Replace(strDesc,strnum,Cstr(intnum))
   Call objTemp.Nodes_2.Item(0).Nodes.Item(0).Nodes.Item(4).Content.set_Description(strDesc1)
   Delay 100 
   Call objTemp.Nodes_2.Item(0).Nodes.Item(0).Nodes.Item(4).Content.set_DescriptionLocal(strDesc1) 
  
End Sub

Sub Test72()
        strTemp = "WPFObject(""ContentControlEx"", ""Attach Series"", 2)"
          Call sObjClick(strTemp)         
          strTemp="WPFObject(""SeriesIdTextEdit"")"
          Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true) 
          'Enter the Series ID
          If objTemp.Exists = True then
             SYS.Keys  "368765867"
             SYS.Keys "[Enter]"
             SYS.Keys "-"
             
             Delay(300)
             strTemp="WPFObject(""OkButton"")"
             Call sObjClick(strTemp)
             Call sEdgeProcessor()
        End If
End Sub

Sub Test73()

objArray = Sys.FindAllChildren("ProcessName","EXCEL", 5,True)
  For i=0 to ubound(objArray)
    log.Message objArray(i).FullName
    Set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*RUN*",1,True) 
    If oSTP_ExcelObj.Exists = True Then
    Else
      objArray(i).Close
      Delay 500 
      strTemp= "WPFObject(""Button_Yes"")"
      Set objTemp = Sys.Process("EXCEL", 2).WPFObject("HwndSource: CustomMessageBoxWindow", "Warning").FindChild("Name",strTemp,50,True)
      If objTemp.Exists Then 
        objTemp.Click 
      End If
    End If
  Next  
End Sub

Sub Test74
  Dim wndXLMAIN
  Dim netUIHWND
  Aliases.EdgeClient.HwndSource_Shell.Activate
  Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
  wndXLMAIN.Activate
  Set netUIHWND = wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND
  Call netUIHWND.Click(53, 96)
  Call netUIHWND.Click(140, 72)
End Sub



Sub Test76
  Dim wndExcel
  Aliases.EXCEL3.wndXLMAIN.Activate
  Call Aliases.explorer.wndShell_TrayWnd.ReBarWindow32.MSTaskSwWClass.MSTaskListWClass.Click(594, 21)
  Set wndExcel = Aliases.EXCEL.wndXLMAIN
  wndExcel.Activate
  Call wndExcel.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND.Click(296, 68)
End Sub

Sub Test75
  Dim hwndSource
  Dim excel
  Dim wndXLMAIN
  Dim netUIHWND
  Set hwndSource = Aliases.EdgeClient.HwndSource_Shell
  hwndSource.Activate
  Set excel = Aliases.EXCEL
  Set wndXLMAIN = excel.wndXLMAIN
  wndXLMAIN.Activate
  Set netUIHWND = wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND
  Call netUIHWND.Click(62, 96)
  Call netUIHWND.Click(139, 67)
  excel.HwndSource_CustomMessageBoxWindow2.CustomMessageBoxWindow.Grid.Button_OK.ClickButton
  excel.HwndSource_CustomMessageBoxWindow3.CustomMessageBoxWindow.Grid.Button_No.ClickButton
  hwndSource.Activate
  wndXLMAIN.Activate
  'MarkGood
  Call netUIHWND.Click(62, 96)
  'UPload
  Call netUIHWND.Click(139, 67)
  'Refresh
  Call netUIHWND.Click(300, 66)
End Sub


Sub Test77

  On Error Resume Next
  strTemp="WPFObject(""ContentControlEx"", ""Attach Series"", 2)"    
  'Click on Attach Series Button
  Call sObjClick(strTemp)
  strTemp = "WPFObject(""DxCodeTextEdit"")"
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
  objTemp.Keys("S10")
  

  strTemp = "WPFObject(""Button"", ""Save"", 1)"
  Call sObjClick(strTemp)
  Call sEdgeProcessor() 
   
End Sub

Sub Test78
     Set objTemp = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.GroupBox2.BarContainerControl.BarControl.ComboBoxEdit
     'Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 3).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 7).WPFObject("BarEditItemLinkControl", "", 1).WPFObject("ContentControlEx", "", 1).WPFObject("ComboBoxEdit", "", 1)
     objTemp.SetText("Final")
     Delay 200 
End Sub

Sub Test79
'  Dim edgeClient
'  Set edgeClient = Aliases.EdgeClient
'  Call edgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.GroupBox.BarManager.ClickItem("[0]|Attach Series")
'  Call edgeClient.HwndSource_AttachSeriesPromptView.AttachSeriesPromptView.SeriesIdTextEdit.SetText("dawsd"&Chr(13)&Chr(10)&"adsgf"&Chr(13)&Chr(10)&"sfdhf"&Chr(13)&Chr(10)&"scfdhf"&Chr(13)&Chr(10))
   Dim strSeriesID(2) , abc
  strTemp="WPFObject(""SeriesIdTextEdit"")"
  Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true) 
  strSeriesID(0) = "1234"
  strSeriesID(1) = "5678"
  strSeriesID(2) = "9101"
  abc = ""
  For I = 0 to 2
      abc = abc & strSeriesID(I)& Chr(13)
  Next
  'Enter the Series ID
  If objTemp.Exists = True then
    objTemp.Text=abc   
  End If 
  

End Sub

Sub Test80
    Set Watch = HISUtils.StopWatch
    Time1="12/12/2012"& " "& "00:00:00"
    Time1=aqConvert.StrToDateTime(Time1)
    Watch.Start    
    strStarTime = Date & "_" &Watch.ToString
    Delay 1000
    Watch.Stop
    'msgbox Watch2.Tostring
    
    dim intTotSec,aArrayTimes
   Watchstr=Watch.ToString
   strEndTime = Date & "_" & Watchstr
   Watchstr1=split(Watchstr,":")
   'msgbox Watchstr         
   Watchstr=Round(aqconvert.StrToFloat(Watchstr1(1))*60,1) + round(aqconvert.StrToFloat(Watchstr1(2)))
  
   strFinalTimestanp =  strStarTime & "       " &strEndTime & "       " & Watchstr
   msgbox strFinalTimestanp
   strData = "Date" & "          " & "StartTime"& "          " & "EndTime"& "          " & "ValidLinkCount" & "          " & "InvalideLinkCont" &"          " &"invalidLink"
   msgbox strData

End Sub

Sub Test81
  Dim comboBox
  Set comboBox = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.StackPanel2.ComboboxIndicator
  Call comboBox.Click(166, 13)
  Call comboBox.Click(164, 13)
  Call comboBox.Click(170, 10)
  Call comboBox.ClickItem(1)
  Call comboBox.Click(170, 15)
  Call comboBox.ClickItem(0)
End Sub

Sub Test82
    strStartTime = Date
    strEndTime = Date
   If  Date =  strStartTime And Date =  strEndTime then 
      msgbox "Done"
   End If
End Sub

Sub Test83
  
'
'  strTemp= "WPFObject(""SpinEdit"", """", 1)"
'  Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,True) 
'  Call objTemp.SetText("1")
'
'  Dim NewDate
'  NewDate = DateAdd("m", 1, "05/06/2019")
'  msgbox NewDate
  
  'strEnvi = "Edge ( US Integration )" 
'  Set objGrid = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("GroupBox", "", 3).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("ReleaseScheduleGridControl").WPFObject("ReleaseScheduleTableView")
'  intRcnt = objGrid.DataContext.SourceCollection.Count
'  For I = 5 to 1 step-1
'      strStart = objGrid.DataContext.SourceCollection.Item(intRcnt-1).RsDateFrom
'      strRequiredDate = DateAdd("m", I-1, Date)
'      intRcnt =  intRcnt-1 
'  Next 
 

  Call sCloseWithYes(1299)
  Delay 1000
    
End Sub




Sub test19_che()
              Set Excel = Aliases.EXCEL              
              Set NetUIHWND =  Sys.Process("EXCEL", 2).Window("XLMAIN", "YYY-YYY-TABLE NAME TEST - Excel", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
              Call NetUIHWND.Click(634, 64)
              Delay 1000 
  
              Set objTimepointDetails = Sys.Process("EXCEL", 2).WinFormsObject("TPDetailsForm").WinFormsObject("mainPanel").WinFormsObject("gridView")
              Call objTimepointDetails.ClickCell(0, "Timepoint Type")
  
              Call objTimepointDetails.Click(243, 64)  
              Call Excel.DropDownPopupForm.Click(35, 80)
              Call objTimepointDetails.Click(442, 166)
  
              'Click on Save Button               
              Set objSave = Sys.Process("EXCEL", 2).WinFormsObject("TPDetailsForm").WinFormsObject("mainPanel").WinFormsObject("buttonPanel").WinFormsObject("saveButton")
              objSave.Click
End Sub 


Sub Test84
'  Dim excel
'  Dim tableLayoutPanel
'  Dim radGridView
'  Set excel = Aliases.EXCEL
'  Set tableLayoutPanel = excel.TPDetailsForm.mainPanel
'  Set radGridView = tableLayoutPanel.gridView
'  Call radGridView.ClickCell(0, "Timepoint Type")

    Set Excel = Aliases.EXCEL              
              Set NetUIHWND =  Sys.Process("EXCEL", 2).Window("XLMAIN", "YYY-YYY-TABLE NAME TEST - Excel", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
              Call NetUIHWND.Click(634, 64)
              Delay 1000 
  
              Set objTimepointDetails = Sys.Process("EXCEL", 2).WinFormsObject("TPDetailsForm").WinFormsObject("mainPanel").WinFormsObject("gridView")
              Call objTimepointDetails.ClickCell(0, "Timepoint Type")
  
  Call objTimepointDetails.Click(266, 65)
  Call Excel.DropDownPopupForm.Click(42, 85)
  Call objTimepointDetails.ClickCell(0, "Timepoint Type")
  Set tableLayoutPanel2 = objTimepointDetails.buttonPanel
  Call tableLayoutPanel2.Click(870, 26)
 'Call Aliases.EXCEL.TPDetailsForm.mainPanel.gridView.ClickColumnHeader("Timepoint Type")
   'Click on Save Button               
              Set objSave = Sys.Process("EXCEL", 2).WinFormsObject("TPDetailsForm").WinFormsObject("mainPanel").WinFormsObject("buttonPanel").WinFormsObject("saveButton")
              objSave.Click
  'Call radGridView.ClickColumnHeader("Timepoint Type")
 ' tableLayoutPanel.buttonPanel.saveButton.ClickButton
End Sub







Dim RecNo
Sub Test85
  Dim wndXLMAIN
  Chethana = "rchethana_20190701_102451"
  Set wndXLMAIN = Aliases.EXCEL.wndXLMAIN
  Call wndXLMAIN.XLDESK.Chethana.Click(178, 112)
  Call wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND.Click(142, 70)
End Sub

Sub sClose()

  On Error Resume Next
  Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Production Release Test )").WPFObject("Shell", "Edge ( US Production Release Test )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1)
  
  
  
  If objTemp.Exists = True Then 
    Call objTemp.ClickR
    Set objClose = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 4).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Close", 2)
    objClose.Click
  End If
  'msgbox Err.Number  

End Sub



Function Test86() 
  
Dim IntI
  
   strEnvi = "Edge ( US Integration )" 

  'Enter Estimates Start Time and End Time  
   strTemp = "WPFObject(""SourceSeriesScheduleGridControl"")" 
   Set objGrid  = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  Set objRow = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("Grid", "", 2).WPFObject("Grid", "", 1).WPFObject("SourceSeriesScheduleGridControl").WPFObject("SourceSeriesScheduleTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 3).WPFObject("InplaceBaseEdit", "", 1) 
  For I = 0 to objGrid.VisibleRowCount-1
    if objRow.DisplayText = "" then
      objRow.Click
      sys.Keys DatePart("m",aqDateTime.Now )
      sys.Keys "[Tab]"       
    Else
      msgbox objRow.DisplayText
    End if 
  Next
   
   
'   strDate =""
'  For IntI = 3 to intRowCount
'       Set objRow = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("Grid", "", 2).WPFObject("Grid", "", 1).WPFObject("SourceSeriesScheduleGridControl").WPFObject("SourceSeriesScheduleTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", IntI).DataContext.Row
'       Delay 200
'       strDate = Cstr(objRow.get_SsDateFrom)
'       If strDate = "" Then 
'         msgbox  IntI       
'          Call objGrid.ClickCell(IntI-1, "Estimated Release Start Time") 
'          sys.Keys DatePart("m",aqDateTime.Now )        
'          Call objGrid.ClickCell(IntI-1, "Estimated Release End Time")
'          sys.Keys DatePart("m",aqDateTime.Now )
'          Delay 200      
'          Exit For
'      End If
'  Next 

End Function



   
  


Sub Test87
  Dim gridControl
  Set gridControl = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.BarManager.Grid.CheckListGridControl
  Call gridControl.ExpandGroup(0)
  Call gridControl.ExpandGroup(3)
  Call gridControl.CheckListTableView.HierarchyPanel.GroupRowControl6.Click(19, 9)
  Call gridControl.ExpandGroup(13)
End Sub

Sub Test88
  Call Aliases.EXCEL.wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND.Click(599, 41)
End Sub

Sub Test89  
  Call Aliases.EXCEL.wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND.Click(621, 120)
End Sub


Sub Test90
  Dim netUIHWND
  Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND
  Call netUIHWND.Click(129, 68)
  Call netUIHWND.Click(129, 68)
End Sub


Sub Test91
  Call Aliases.explorer.wndShell_TrayWnd.ReBarWindow32.MSTaskSwWClass.MSTaskListWClass.Click(511, 17)
  Aliases.EXCEL3.wndXLMAIN.Activate
  Call Aliases.EXCEL.wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND.Click(236, 112)
End Sub




Sub sExcelAddinClick()
  Dim strTemp 
  
  'Upload
  Sys.Keys "~Y"
  Sys.Keys "Y5"
  
  'Refresh
  Sys.Keys "~Y"
  Sys.Keys "YB"
  
  'MarkGood
  Sys.Keys "~Y"
  Sys.Keys "Y3"
  
  'DeletValue
  Sys.Keys "~Y"
  Sys.Keys "YA"
  
  'Compute
  Sys.Keys "~Y"
  Sys.Keys "YM"
  
    

End Sub



Sub Test92
  Call Aliases.explorer.wndShell_TrayWnd.ReBarWindow32.MSTaskSwWClass.MSTaskListWClass.Click(518, 23)
  Aliases.EXCEL3.wndXLMAIN.Activate
  Call Aliases.EXCEL.wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND.Click(228, 117)
End Sub

Sub Test93
  Aliases.EdgeClient.HwndSource_Shell.Activate
  Aliases.EXCEL3.wndXLMAIN.Activate
  Call Aliases.EXCEL.wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND.Click(41, 87)
End Sub

Sub Test94

  Call Aliases.EXCEL.wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND.Click(589, 42)
End Sub

Sub Test95
  Dim layoutPanel
  Dim autoFitGridControl
  Set layoutPanel = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel
  Call layoutPanel.Click(843, 14)
  Set autoFitGridControl = layoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.Grid.Grid.SourceSeriesGridControl
  Call autoFitGridControl.RowControl2.LightweightCellEditor.InplaceBaseEdit.Keys("^f")
  Call autoFitGridControl.TableView.Keys("sries_ID")
End Sub



Sub Test96
' 'strTemp = "WPFObject(""HierarchyPanel"", """", 1)"
' 'Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,60,true)
' 'Call objTemp.WPFObject("RowControl", "", 2).WPFObject("CellsControl", "", 1).click
' 'strEnvi = "Edge ( US Integration )"  
' 'Call Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("Grid", "", 1).WPFObject("SourceSeriesGridControl").WPFObject("TableView", "", 1).WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 2).WPFObject("CellsControl", "", 1).Click
'  
Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("Grid", "", 1).WPFObject("SourceSeriesGridControl")
Call objTemp.Click(95, 7)

'Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.Grid.Grid.SourceSeriesGridControl.set_SelectedItem


'Call Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("Grid", "", 1).WPFObject("SourceSeriesGridControl").WPFObject("TableView", "", 1).WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 2).Click

End Sub


Sub Test97
  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.Grid.Grid.SourceSeriesGridControl.TableView.RowControl2.LightweightCellEditor.InplaceBaseEdit.Click(63, 9)
End Sub

Sub Test98
  Set objTemp = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("GridControl").WPFObject("SourceLogTableView")
  msgbox objTemp.get_FocusedRowHandle
End Sub

Sub Test99
msgbox date
''  Dim inplaceBaseEdit
''  Set inplaceBaseEdit = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.Grid.Grid.SourceSeriesGridControl.TableView.RowControl4.LightweightCellEditor.InplaceBaseEdit
''  Call inplaceBaseEdit.Click(100, 13)
''  Call inplaceBaseEdit.Click(102, 7)
'
'  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.Grid.Grid.SourceSeriesGridControl.TableView.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 2).Click
' ' strTemp = "WPFObject(""HierarchyPanel"", """", 1)"
'  'Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,100,True)
' ' Call objTemp.
'  'Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("Grid", "", 1).WPFObject("SourceSeriesGridControl").WPFObject("TableView", "", 1).WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 2)


End Sub

Sub Test100
  Dim netUIHWND
  Set netUIHWND = Aliases.EXCEL.wndXLMAIN.EXCEL2.Ribbon.Ribbon.NUIPane.NetUIHWND
  Call netUIHWND.Click(232, 66)
  Call netUIHWND.Click(232, 66)
End Sub

Sub Test101
  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.BarManager.AdornerDecorator.AdornedControl.Grid.DockPanel.RowControl4.EditorControlStub.Click(57, 15)
End Sub

Sub Test102
  Dim layoutPanel
  Set layoutPanel = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel
  Call layoutPanel.Click(637, 16)
  Call layoutPanel.LayoutPanelContentPresenter.Root.BarManager.ClickItem("[0]|Expand All")
End Sub

Sub Test103
  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.BarManager.ClickItem("[0]|Expand All")
End Sub

Sub Test104
  Dim edgeClient
  Dim gridControl
  Call Aliases.explorer.wndShell_TrayWnd.ReBarWindow32.MSTaskSwWClass.MSTaskListWClass.Click(419, 17)
  Set edgeClient = Aliases.EdgeClient
  Set gridControl = edgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.BarManager.GridControl
  Call gridControl.ClickCellR(0, "Series Id")
  Call gridControl.ClickCell(0, "Series Id")
  Call gridControl.ClickCellR(0, "Series Id")
  Call edgeClient.HwndSource_PopupRoot.PopupRoot.Decorator.NonLogicalAdornerDecorator.BarPopupBorderControl5.PopupMenuBarControl.ContentcontrolexOpenLayout.Click(11, 6)
End Sub

Sub sClick()
 strTemp = "WPFObject(""GridControl"")"
 Set objTemp=  Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
 Call objTemp.ClickCellR(0, "Series Id")
 Delay 200
 strTemp = "WPFObject(""ContentControlEx"", ""Open Layout"", 2)"      
 Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
 objTemp.Click  
End sub 

Sub Test105
  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.BarManager.BarContainerControl.BarControl.BaritemlinkinfoExpandAll.ItemBorderControl.Click(22, 4)
End Sub


Sub Test102345
  log.AppendFolder("I am Learning") 
  log.message("Chethana")  
End Sub



Sub ProcessData()
  Dim Fldr, i
  
  Fldr = Log.CreateFolder("Record: " + aqConvert.VarToStr(RecNo))
  Log.PushLogFolder Fldr
  
  For i = 0 To DDT.CurrentDriver.ColumnCount - 1
    Log.Message DDT.CurrentDriver.ColumnName(i) + ": " + aqConvert.VarToStr(DDT.CurrentDriver.Value(i))
  Next
  
  Log.PopLogFolder
  RecNo = RecNo + 1
End Sub
  
' Creates the driver (main routine)
Sub TestDriver1()
  Dim Driver
  
  ' Creates the driver
  ' If you connect to an Excel 2007 sheet, use the following method call:
  ' Set Driver = DDT.ExcelDriver("C:\MyFile.xlsx", "Sheet1", True)
  Set Driver = DDT.ExcelDriver("C:\MyFile.xls", "Sheet1")
  
  ' Iterates through records
  RecNo = 0
  While Not Driver.EOF()
    Call ProcessData() ' Processes data
    Call Driver.Next() ' Goes to the next record
  WEnd
  
  ' Closes the driver
  Call DDT.CloseDriver(Driver.Name)
End Sub

Sub CurDriverExample
  
  ' Creates a driver
  Call DDT.ExcelDriver("C:\MyFile.xls", "Sheet1")
   
  ' Iterates through records
  While Not DDT.CurrentDriver.EOF()

  ' Gets a value from the storage and posts it to the log
    Log.Message(DDT.CurrentDriver.Value(0))
    DDT.CurrentDriver.Next()
  WEnd
   
  ' Closes the driver
  DDT.CloseDriver(DDT.CurrentDriver.Name)
  
End Sub
Sub Test

  Dim page, expectedObjectData, links, linksCount, link, URL, i

  URL = "https://www.smartbear.com"
  Browsers.Item(btIExplorer).Run(URL)
  Set page = Sys.Browser("*").Page("*")

  expectedObjectData = ""

  ' Obtains the links
  Set links = page.contentDocument.links
  linksCount = links.length

  If linksCount > 0 Then

  ' Searches for broken links
  For i = 0 To linksCount - 1

    Set link = links.item(i)

    URL = link.href
    Log.AppendFolder(URL)
    Log.Message("The " & URL & " verification results: " & VerifyWebObject(URL, expectedObjectData))
    Log.PopLogFolder()

  Next
  End If

End Sub


' Checks whether the specified URL is valid
Function VerifyWebObject(link, expectedObjectData)
  Err.Clear
  Dim httpObj

  Set httpObj = aqHttp.CreateGetRequest(link)
  On Error Resume Next
    Dim httpObjResult
    Set httpObjResult = httpObj.Send
    If Not httpObjResult = Empty Then
      Select Case httpObjResult.StatusCode

        Case 200
          If (httpObjResult.Text <> expectedObjectData) Then
            Call Log.Message("The " & link & " link is valid", httpObjResult.Text)
            VerifyWebObject = False
            Exit Function
          Else
            VerifyWebObject = True
          End If

        Case 302
          If (httpObjResult.Text <> expectedObjectData) Then
            Call Log.Message("The " & link & " link is valid", httpObjResult.Text)
            VerifyWebObject = False
            Exit Function
          Else
            VerifyWebObject = True
          End If

        Case Else
          Call Log.Message("The " & link & " link was not found," & " the returned status: " & httpObjResult.StatusCode, httpObjResult.Text)
          VerifyWebObject = False
      End Select

    Else
      VerifyWebObject = False
    End If

  If Err.Number <> 0 Then

    Log.Warning Err.Description
    VerifyWebObject = False
  End If

End Function


Sub sCurrency()
  
'Set objTemp= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornedControl", "", 1).WPFObject("DockPanel", "", 1).WPFObject("CurrencyGridControl")
'  strTemp= "WPFObject(""UnitItemGridControl"")"
'    Set objGrid = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
'    'Enter the ".Enter the "Description" 
'    Call objGrid.ClickCell(objGrid.wRowCount-1,"Description")
'    Sys.Keys ("YYY")
'    Delay 200

'Call 
strDesc=aqDateTime.Now
DescText=Replace(strDesc,"-","")
DescText=Replace(DescText,":","")
DescText = Replace(DescText," ","_")
msgbox DescText
msgbox Mid(DescText,1,3)


DescText = CStr(Minute(time))&"A"
msgbox DescText

End Sub


Sub Test106
 strTemp= "WPFObject(""LayoutGroup"", """", 1)"
  Set objLayout = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50,True)
  strTemp= "WPFObject(""Button"", ""..."", 1)"
  Set objTemp = objLayout.WPFObject("LayoutPanel", "", 2).FindChild("Name",strTemp,50,True)
  Call objTemp.Click()
End Sub

Sub Test107

FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\My Documents\Edge\FileRepository\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")+"\Test footnote v5"
Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel2.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.WPFObject("WrapPanel", "", 1).WPFObject("StackPanel", "", 1).WPFObject("TextBox", "", 1).SetText("")  
Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel2.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.WPFObject("WrapPanel", "", 1).WPFObject("StackPanel", "", 1).WPFObject("TextBox", "", 1).SetText(FilePath)  
strTemp= "WPFObject(""Button"", ""Refresh"", 2)"
Set objTemp= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).FindChild("Name",strTemp,30,True)
Call objTemp.Click()
End Sub

Sub Test108
  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.DockPanel.FileRepositoryTableControl.ClickCell(0, "File Name / Address")
End Sub

Sub Test109
 ' Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("FileRepositoryTableControl").WPFObject("FileRepositoryTableView").SelectRow(0)
  'strTemp = "WPFObject(""FileRepositoryTableControl"")"
  'strTemp = "WPFObject(""FileRepositoryTableView"")"
  'Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
  'Call objTemp.SelectRow(0)
  
  FilePath = aqEnvironment.GetEnvironmentVariable("USERPROFILE") & "\My Documents\Edge\FileRepository\" & aqConvert.DateTimeToFormatStr(aqDateTime.Today,"%Y-%m-%d")
  aqFileSystem.CreateFolder(FilePath) 
  strTemp= "WPFObject(""Button"", ""..."", 1)"
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
  objTemp.Click()
  Set objTemp = Sys.Process("EdgeClient").Window("#32770", "Select Folder", 1)
  'Enter the File Path to Export
  Call objTemp. Window("Edit", "", 1).SetText(FilePath)
  'Click on Select Folder Button
  Call objTemp.Window("Button", "Select Folder", 1).Click()
  
  strTemp = "WPFObject(""FileRepositoryTableView"")"
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
  Call objTemp.SelectRow(0)
  Call sEdgeProcessor()
  Delay 2000
  
  'Click on 'Export Selected' 
  strTemp = "WPFObject(""ContentControlEx"", ""Export Selected"", 2)"
  Call sObjClick(strTemp)  
  Delay 2000
  'click on OK Button 
  Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Export File Repository").WPFObject("CustomMessageBoxWindow", "Export File Repository", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).WPFObject("Button_OK").WPFObject("RenderContentPresenterElement", "", 1).WaitChild("WPFObject(""Label_Ok"")",180000)
  objTemp.Click
  
  
  
  
  
  'Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("Adorner").WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("WrapPanel", "", 2).WPFObject("Button", "...", 1)
End Sub

Sub Test110

End Sub

Sub Test113
  strTemp =  "WPFObject(""FileRepositoryTableControl"")"
  Set objTemp= Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
  msgbox objTemp.wRowCount

  
End Sub

Sub Test114
 
 strTemp= "WPFObject(""LayoutPanel"", """", 2)"
 Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp,50,True)
 Call objTemp.Click(634, 14)
 Delay 500
 strTemp= "WPFObject(""Button_Yes"")"
 Set objTemp=  Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Edge").FindChild("Name", strTemp, 50, True)
 If objTemp.Exists Then 
    objTemp.Click()
 End If
 
 
End Sub

Sub Test115
  Dim edgeClient
  Set edgeClient = Aliases.EdgeClient
  Call edgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel2.Click(634, 14)
  Call edgeClient.HwndSource_CustomMessageBoxWindow5.CustomMessageBoxWindow2.Grid.Grid.PART_ContentOffset.Grid.PART_ContainerContent.Grid.Grid.DockPanel.Button_Yes.RenderContentPresenterElement.Label_Yes.Click(13, 8)
End Sub

Sub Test116

'  'Select the empty record and click on 'Group' dropdown and select 'FOOTNOTE'
'  DescText = "http://Test-" & Now
'  strTemp= "WPFObject(""LayoutGroup"", "", 1)"
'  Set objLayout = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
'  strTemp ="WPFObject(""LinkTableControl"")"  
'  Set objGrid= objLayout.WPFObject("LayoutPanel", "", 2).FindChild("Name", strTemp, 50, True) 
'  Call objGrid.DblClickCell(0, "Group") 
'  Call objGrid.ClickCell(0, "Group")
'  SYS.Keys "[Down][Enter]"
'  Delay(1000)
'  'Enter the File Name/Address ex: http://www.google.com and Description
'  Set objGridView = objGrid.WPFObject("LinkTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1)
'  Set objCell = objGridView.WPFObject("LightweightCellEditor", "", 3).WPFObject("InplaceBaseEdit", "", 1).WPFObject("TextEdit", "", 1)
'  Call objCell.Click()
'  Call objCell.Keys(DescText)
'  Set objCell = objGridView.WPFObject("LightweightCellEditor", "", 4).WPFObject("InplaceBaseEdit", "", 1).WPFObject("TextEdit", "", 1)
'  Call objCell.Click()
'  Call objCell.Keys(DescText)
'  
'  'Click on Import Button
'  strTemp= "WPFObject(""ContentControlEx"", ""Import"", 2)"
'  Set objTemp= objLayout.WPFObject("LayoutPanel", "", 2).FindChild("Name",strTemp,50,True) 
'  Call objTemp.Click()
'  Delay 5000
'  'Click on OK button
'  strTemp= "WPFObject(""Button_OK"")"
'  Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Import Files").FindChild("Name", strTemp, 60, True)
'  Call objTemp.Click()

  DescText = "http://Test-" & Now
  strTemp= "WPFObject(""LayoutGroup"", "", 1)"
  Set objLayout = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  Delay 500
 
  strTemp ="WPFObject(""LinkTableControl"")"
  Set objGridView= objLayout.WPFObject("LayoutPanel", "", 2).FindChild("Name", strTemp, 50, True)
  Call objGridView.DblClickCell(0, "Group")
  Call objGridView.ClickCell(0, "Group")  
  SYS.Keys "[Down][Enter]"
  Delay(500)
  
  
  
  Call objGridView.DblClickCell(0, "File Name / Address")
  Set objCell =objGridView.WPFObject("LinkTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1)
  Set objFileAddress = objCell.WPFObject("LightweightCellEditor", "", 3).WPFObject("InplaceBaseEdit", "", 1).WPFObject("TextEdit", "", 1)  
	Call objFileAddress.Keys(DescText)
	Call objFileAddress.Keys("[Tab]")
	Delay(500)
	Set objFileAddress = objCell.WPFObject("LightweightCellEditor", "", 4).WPFObject("InplaceBaseEdit", "", 1).WPFObject("TextEdit", "", 1)  
	Call objFileAddress.Keys(DescText)
	Call objFileAddress.Keys("[Tab]")
	Delay(500)
  
  
  'Click on Import Button
  strTemp= "WPFObject(""ContentControlEx"", ""Import"", 2)"
  Set objTemp= objLayout.WPFObject("LayoutPanel", "", 2).FindChild("Name",strTemp,50,True) 
  Call objTemp.Click()
  Delay 5000
  
  'Click on OK button
  strTemp= "WPFObject(""Button_OK"")"
  Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Import Links").FindChild("Name", strTemp, 60, True)
  Call objTemp.Click()
  
  'Close the insert Link Layout
  Call sClosePanel2()
  
  'Verify the Footnote file is been added in the File Repository
  strTemp= "WPFObject(""ContentControlEx"", ""Refresh"", 2)"
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  Call objTemp.click()
  Call sEdgeProcessor()
  strTemp = "WPFObject(""FileRepositoryTableControl"")"
  Set objTemp= Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
  
  'Validating the Inserted Link
  For I=0 to objTemp.wRowCount-1
    If objTemp.wValue(I, "Description")= DescText  Then 
        blnFlag = True
        Exit For
    End If
  Next
  
  If blnFlag= True Then 
    strTCRemarks = "The new Footnote link :" +DescText +" is added Sucessfully"
    strTestCaseResult = "PASS" 
    log.Message strTCRemarks
  Else
    strTCRemarks = "The new Footnote link :" +DescText +" is not Added"
    strTestCaseResult = "FAIL" 
    log.Message strTCRemarks
  End if  
  
  
  
  
  
  
  
End Sub

Sub Test117
  Dim message
  message = Aliases.EdgeClient.WPFObject("HwndSource: CustomMessageBoxWindow", "Delete File Repository").WPFObject("CustomMessageBoxWindow", "Delete File Repository", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("DockPanel", "", 1).WPFObject("TextBlock_Message").wText
  msgbox (instr(message, "The action cannot be completed because:"))
End Sub

Sub Test118


'Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("Adorner").WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("FileRepositoryTableControl").WPFObject("FileRepositoryTableView")
 ' Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.FileRepositoryTableControl.WPFObject("FileRepositoryTableView").FocusedRow.set_Description("Chethana")
  strTemp= "WPFObject(""FileRepositoryTableView"")"
  Set objTemp= Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
  
  'Edit Description
  Call objTemp.FocusedRow.set_Description("Chethana")
  
  'click on Save Button
  strTemp= "WPFObject(""ContentControlEx"", ""Save"", 2)"  
  Call sObjClick(strTemp)
  
  'Click on ok button on Sucessful Save window
  strTemp= "WPFObject(""Button_OK"")"
  Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Save File Repository changes").FindChild("Name",strTemp,60,True)
  Call objTemp
  
  
  'Verification 
  strTemp= "WPFObject(""FileRepositoryTableControl"")"
  Set objTemp= Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
  strValue = objTemp.wValue(3, "Description")
  If strValue = "Chethana" then 
    
  End IF
  
  
 End Sub 
 
 Sub Join()
  ' Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.FileRepositoryTableControl.wValue(0, "Description").Join("_","Chethana")
 End Sub

Sub Test119
  'Dim adornerDecorator
  'Set adornerDecorator = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator
  'Call adornerDecorator.AdornedControl.Grid.FileRepositoryTableControl.ClickCell(1, 27)
  'Call adornerDecorator.LoadingWaitControl.Click(552, 141)
  
  strTemp= "WPFObject(""FileRepositoryTableControl"")"
  Set objTemp= Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
  Call objTemp.ClickCell(1, 27)
  Call objTemp.ClickCell(1, 27)
  Call sEdgeProcessor()  
  Call Sys.Kyes("[^][A][Del]")
  Call Sys.Keys("Chethana")   
  Call Sys.Keys("[Tab]") 
  
  
End Sub

Sub Test120
'  Dim dockPanel
'  Dim gridControl
'  Dim textEdit
'  Set dockPanel = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.DockPanel
'  Set gridControl = dockPanel.FileRepositoryTableControl
'  Call gridControl.ClickCell(1, 27)
'  Set textEdit = dockPanel.RowControl.LightweightCellEditor.InplaceBaseEdit.TextEdit
'  Call textEdit.Keys("^a^a^a")
'  Call gridControl.ClickCell(1, 27)
'  Call gridControl.DblClickCell(1, 27)
'  Call textEdit.Keys("^a^a^a^a^a^a^a^a^a^a^a^a^a^a^[Del]^avbdcdd")

  'Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("Adorner").WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("FileRepositoryTableControl").WPFObject("FileRepositoryTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 2).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 4)
'  strTemp= "WPFObject(""FileRepositoryTableControl"")"
'  Set objTemp= Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
'  Call objTemp.ClickCell(1, 27)
'  Call objTemp.ClickCell(1, 27)
'  Call sEdgeProcessor()  
'  Delay 5000
'  strTemp= "WPFObject(""HierarchyPanel"", """", 1)"
'  Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
'  'strTemp= "WPFObject(""TextEdit"", """", 1)"
' ' Set objCell = objTemp.WPFObject("RowControl", "", 2).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 4).WPFObject("InplaceBaseEdit", "", 1).WPFObject("TextEdit", "", 1)
'  'Set objCell = objTemp.WPFObject("RowControl", "", 2).FindChild("Name",strTemp,60,True)
' Set objCell= objTemp.WPFObject("RowControl", "", 2).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 4).WPFObject("InplaceBaseEdit", "", 1).WPFObject("TextEdit", "", 1)
' Call objCell.Keys("[^][A][Del]")
'  Call objCell.Keys("Chethan")
'  Call objCell.Keys("[Tab]")


  'Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("Adorner").WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("FileRepositoryTableControl").WPFObject("FileRepositoryTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 2).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 4).WPFObject("InplaceBaseEdit", "", 1)
   
  strTemp= "WPFObject(""FileRepositoryTableView"")"
  Set objGrid = Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
  Set objCell= objGrid.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 2).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 4).WPFObject("InplaceBaseEdit", "", 1)  
  Call objCell.Click()
  Set objText = objCell.WPFObject("TextEdit", "", 1)
  Delay 5000
  Call objText.Keys("^a")
  Delay 200
  Call objText.Keys("[Del]")
  'Delay 200 
  Call objText.Keys("Testing_FootNote")
  Delay 200
  Call objText.Keys("[Tab]")
  Delay 200
  
  
  'click on Save Button
  strTemp= "WPFObject(""ContentControlEx"", ""Save"", 2)"  
  Call sObjClick(strTemp)
  
  'Click on ok button on Sucessful Save window
  strTemp= "WPFObject(""Button_OK"")"
  Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Save File Repository changes").FindChild("Name",strTemp,60,True)
  Call objTemp.click()
  
  
      
  


End Sub

Sub Test121
  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.DockPanel.RowControl.LightweightCellEditor.InplaceBaseEdit.TextEdit.Keys("^a")
End Sub

Sub Test122
  Dim hwndSource
  Dim adornerDecorator
  Dim dockPanel
  Dim gridControl
  Dim loadingWaitControl
  Set hwndSource = Aliases.EdgeClient.HwndSource_Shell
  hwndSource.Activate
  Set adornerDecorator = hwndSource.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator
  Set dockPanel = adornerDecorator.AdornedControl.Grid.DockPanel
  Set gridControl = dockPanel.FileRepositoryTableControl
  Call gridControl.ClickCell(1, 27)
  Set loadingWaitControl = adornerDecorator.LoadingWaitControl
  Call loadingWaitControl.Click(511, 133)
  Call loadingWaitControl.DblClick(500, 139)
  Call gridControl.DblClickCell(1, 27)
  Call dockPanel.RowControl.LightweightCellEditor.InplaceBaseEdit.TextEdit.Keys("[Del]")
End Sub

Sub Test123
  Dim rowControl
  Set rowControl = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.Grid.DockPanel.RowControl
  Call rowControl.LightweightCellEditor.InplaceBaseEdit.TextEdit.Keys("[Tab]")
  Call rowControl.LightweightCellEditor2.InplaceBaseEdit.Keys("[Tab]")
End Sub

Sub Test124
  'Set objTemp= Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.BarManager.Grid.RootGroup.Grid.WrapPanel2.StackPanel
  'Call objTemp.DataContext.set_SelectedDateFrom("17-06-2020")
  
'  strTemp= "WPFObject(""DateFromDateEdit"")"
'  Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 60, True)
'  Call objTemp.DataContext.set_SelectedDateFrom(Cstr(Date))
'  
'  strTemp= "WPFObject(""DateToDateEdit"")"
'  Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 60, True)
'  Call objTemp.DataContext.set_SelectedDateTo(Cstr(Date))
'  
  'WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("Grid", "", 1).WPFObject("RootGroup").WPFObject("Grid", "", 1).WPFObject("WrapPanel", "", 2).WPFObject("StackPanel", "", 1)
  
  strTemp = "WPFObject(""Grid"", """", 1)"
  Set objGrid = Sys.Process("EdgeClient").FindChild("Name", strTemp, 60, True)
 ' Set objTemp = objGrid.WPFObject("WrapPanel", "", 4).WPFObject("StackPanel", "", 2).WPFObject("ComboBox", "", 1)
  Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("Grid", "", 1).WPFObject("RootGroup").WPFObject("Grid", "", 1).WPFObject("WrapPanel", "", 4).WPFObject("StackPanel", "", 2).WPFObject("ComboBox", "", 1)  
  strTemp = "WPFObject(""CheckBox"", """", 1)"
  Set objCheckbox = objTemp.FindChild("Name", strTemp, 10, True)
  Call objCheckbox.Click()
  Call objCheckbox.Click()

End Sub

Sub Test125
  Dim edgeClient
  Dim grid
  Dim comboBox
  Set edgeClient = Aliases.EdgeClient
  Set grid = edgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.BarManager.Grid
  Set comboBox = grid.RootGroup.Grid.WrapPanel.StackPanel.ComboboxFrequency
  Call comboBox.Click(13, 10)
  Call edgeClient.HwndSource_PopupRoot.PopupRoot.Decorator.NonLogicalAdornerDecorator.ComboboxitemEdgeclientModulesInfrastructur5.StackPanel.CheckBox.ClickButton(cbChecked)
  Call comboBox.ClickItem(6)
  Call grid.CheckListGridControl.CheckListTableView.Click(381, 101)
End Sub

Sub Test126
  Dim edgeClient
  Dim gridControl
  Set edgeClient = Aliases.EdgeClient
  Set gridControl = edgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.BarManager.Grid.CheckListGridControl
  Call gridControl.ClickCell(21, "Timepoint")
  Call gridControl.ClickCellR(21, "Timepoint")
  Call edgeClient.HwndSource_PopupRoot.PopupRoot.Decorator.NonLogicalAdornerDecorator.BarPopupBorderControl4.PopupMenuBarControl.ContentcontrolexOpenSource.Click(21, 3)
End Sub

Sub Test127

  strTestDataFile = "YYY-Automation_UIT4_1-Source"

  'Set objTemp = Sys.Browser("iexplore").Page("https://www.google.com/?gws_rd=ssl#spf=1592483625980")
  'PropValue = aqObject.GetPropertyValue(objTemp, "LocationName")
   Set objTemp = Sys.Process("EXCEL", 2).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2","" ).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1).MSAAObject("property_page_Ribbon").MSAAObject("title_bar")
   PropValue = aqObject.GetPropertyValue(objTemp, "Description")
     
  msgbox PropValue


End Sub

Sub Test128
  Dim edgeClient
  Set edgeClient = Aliases.EdgeClient
  Call edgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.AdornerDecorator.AdornedControl.BarManager.Grid.CheckListGridControl.ClickCellR(21, "Series Id")
  Call edgeClient.HwndSource_PopupRoot.PopupRoot.Decorator.NonLogicalAdornerDecorator.BarPopupBorderControl4.PopupMenuBarControl.ContentcontrolexOpenSource.Click(49, 1)
End Sub

Sub Test129
  
End Sub