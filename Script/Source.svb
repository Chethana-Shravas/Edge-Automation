'USEUNIT DM
'USEUNIT EDGE_Util
'USEUNIT File_Repository
'USEUNIT FrameWork
'USEUNIT HTML
'USEUNIT Layout
'USEUNIT Master_Maintanance
'USEUNIT PRT_BMT
'USEUNIT Release_Schedule
'USEUNIT Series_Search
'USEUNIT SourceSchedule
'USEUNIT STP
'USEUNIT To_Do_Panel

Public DescText,DescLocalText,IntRowCnt,strSource_Name,strLevel2src_Name,strLevel3src_Name,intRowHandle1,blnFlag,intchildcnt,strUnit,strCategory,strTPDate
Public sLoadGrid,strWorkSpaceName


''**************************************************************
'Start    : Execution starts from this procedure. 
'Testcases: Verify all function related SouceWorkSpaceViewer 
'Start Date    : 22/11/2017
'Created by: Chethana S R
'Total Number of testcases: 67
' Last Updated: 
'**************************************************************
Sub sOpenSourceWSViewer()

  On Error Resume Next
  Dim objEdgeMDI,strTemp,objTemp
  
  'Open Source Workspace Viewer
  Set objEdgeMDI = Sys.Process("EdgeClient")
    If objEdgeMDI.Exists then
      strTemp = "WPFObject(""TextBlock"", ""Source Workspace Viewer"", 1)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
      If objTemp.Exists = False then      
        strTemp="WPFObject(""ContentControl"", ""Source Workspace"", 1)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        If objTemp.Exists = True then
          objTemp.Click
          Delay 8000,"Please wait SWV window is opening..."
          Call sEdgeProcessor
          log.Message "Opening Source Workspace.."
        End If
      Else
        log.Message "Source Workspace is already Opened.."            
     End If  
  End If
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sOpenSourceWSViewer', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
  
End Sub


Sub sVerifyButtons()

  On Error Resume Next
  
  Dim objEdgeMDI
  Dim strOpenWS,strUploadWS,StrDrop,strShowSF,strRefresh,strSources,StrSSchedule
  Dim blnOpenWS,blnUploadWS,blnDrop,blnShowSF,blnRefresh,blnSources,blnSSchedule
  Dim IntCount
  IntCount = 0
  
  Delay "5000", "Please Wait...."
  
  strOpenWS = "WPFObject(""ContentControlEx"", ""Open Workspace"", 2)"
  strUploadWS = "WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"
  StrDrop = "WPFObject(""ContentControlEx"", ""Drop"", 2)"
  strShowSF = "WPFObject(""ContentControlEx"", ""Show Search Filter"", 2)"
  strRefresh = "WPFObject(""ContentControlEx"", ""Refresh"", 2)"
  strSources = "WPFObject(""ContentControlEx"", ""Sources"", 2)"
  StrSSchedule = "WPFObject(""ContentControlEx"", ""Source Schedules"", 2)"
  
  
  Set objEdgeMDI = Sys.Process("EdgeClient") 
  'Verifying Enabling status for Open workspace button"   
  Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strOpenWS,60,true)
  If objTemp.IsEnabled = False Then 
    blnOpenWS = True
    strTCRemarks= "Open WorkSpace Button is Inactive, "
  Else       
      blnOpenWS = False
      strTCRemarks= "Open WorkSpace Button is Active, "
  End If     
  
  
  
  'Verifying Enabling status for Upload workspace button"  
  Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strUploadWS,60,true)
  If objTemp.IsEnabled = False Then 
    blnUploadWS = True
    strTCRemarks=strTCRemarks & Chr(13) & "Upload WorkSpace Button is Inactive,"
  Else       
      blnUploadWS = False
      strTCRemarks=strTCRemarks & Chr(13) &"Upload WorkSpace Button is active,"
  End If 
  
  
  'Verifying Enabling status for Drop button"  
  Set objTemp=Sys.Process("EdgeClient").FindChild("Name",StrDrop,60,true)
  If objTemp.IsEnabled = False Then 
    blnDrop = True
    strTCRemarks=strTCRemarks & Chr(13) & "Drop Button is Inactive,"
  Else       
      blnDrop = False
      strTCRemarks=strTCRemarks & Chr(13) & "Drop Button is active,"
  End If 
  
  
  'Verifying Enabling status for Show Search Filter button"  
  Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strShowSF,60,true)
  If objTemp.IsEnabled = True Then 
    blnShowSF = True
    strTCRemarks=strTCRemarks & Chr(13) &"Show Search Button is active,"
  Else       
      blnShowSF = False
      strTCRemarks=strTCRemarks & Chr(13) & "Show Search Button is inactive,"
  End If 
  
  
  
  
  'Verifying Enabling status for Refresh button"  
  Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strRefresh,60,true)
  If objTemp.IsEnabled = True Then 
    blnRefresh = True
    strTCRemarks=strTCRemarks & Chr(13) & "Refresh Button is active,"
  Else       
      blnRefresh = False
      strTCRemarks=strTCRemarks & Chr(13) & "Refresh Button is inactive,"
  End If 
  
  
  
  'Verifying Enabling status for Sources button"  
  Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strSources,60,true)
  If objTemp.Exists = True Then 
    blnSources = True
    strTCRemarks=strTCRemarks & Chr(13) & "Sources ButtonButton Exists,"
  Else       
      blnSources = False
      strTCRemarks=strTCRemarks & Chr(13) & "Sources Button doesnot Exist,"
  End If 
  
    
  
  'Verifying Enabling status for Source Schedule button"  
  Set objTemp=Sys.Process("EdgeClient").FindChild("Name",StrSSchedule,60,true)
  If objTemp.Exists = True Then 
    blnSSchedule = True
     strTCRemarks=strTCRemarks & Chr(10)+Chr(13) & "Source Schedule Button is Exists,"
  Else       
      blnSSchedule = False
      strTCRemarks=strTCRemarks & Chr(10)+Chr(13) & "Source Schedule Button doesnot Exist,"
  End If 
  
  
  blnOpenWS,blnUploadWS,blnDrop, blnShowSF,blnRefresh,blnSources,blnSSchedule
  If blnOpenWS = False Or  blnUploadWS = False Or blnDrop = False Or  blnShowSF = False Or blnRefresh = False Or  blnSources = False Or  blnSSchedule = False Then
     
            Set PicObj = Utils.Picture
            Set PicObj = Sys.Desktop.Picture
            PicObj.SavetoFile(strLogFolder & "Screenshots\" & strTestCase_No &  "_" & picCount & ".jpg")
            'strTCRemarks = "Screenshot of SourceWorkspaceViewer window is captured,"    
            'strTCRemarks= strTCRemarks &  "---TC_SOURCEWV_01 Testcase Fail"
            strTCRemarks ="TC_SOURCEWV_01 Fail"
            strTestCaseResult="FAIL"     
    Else
        strTestCaseResult="PASS"  
        strTCRemarks ="TC_SOURCEWV_01 Pass"
  End IF
  
  Call sCloseSWV()  
  
    If Err.Number > 0 Then
    Log.Warning("Error in 'sVerifyButtons', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
   
  
End Sub


Sub sOpenWorkspace(strParameters)
'Sub sOpenWorkspace()
      Delay "3000", "Please Wait...."
      Call sOpenSourceWSViewer()
      strCategory=getSplitValue(strParameters,"CATEGORY")
      'strMyCategory=getSplitValue(strParameters,"MyCATEGORY")     


On Error Resume Next

    'Refreshing the SWV window

      StrRefresh = "WPFObject(""ContentControlEx"", ""Refresh"", 2)"  
      Set objRefresh=Sys.Process("EdgeClient").FindChild("Name",StrRefresh,60,true)
      If objRefresh.Exists Then
        objRefresh.Click    
        Call sEdgeProcessor()
      End If

''Selecting Records 
      strTemp="WPFObject(""PendingChangeGridControl"")"
      Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      Set objTableView = objGridControl.WPFObject("PendingChangeTableView")
      intRowcnt=objGridControl.wRowCount
      
'-------------------------------------------------------------------------------------------------------------      
      
       'Testcase:SOURCE53: Verifying "Open Workspace" button by selecting multiple workspaces
      If strCategory ="TC_SOURCEWV_03" Then 
          For intI = 0 to intRowcnt-1      
            Call objGridControl.ClickCell(intI , "Created by", skCtrl)
           Next   
            strOpenWS = "WPFObject(""ContentControlEx"", ""Open Workspace"", 2)"          
            Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strOpenWS,60,true)
           If objTemp.IsEnabled = False Then             
            'strTCRemarks= "Open WorkSpace Button is Inactive when we select multiple workspaces---"
            'strTCRemarks = strTCRemarks & "---TC_SOURCEWV_03 Testcase Pass"
            strTCRemarks ="TC_SOURCEWV_03 Pass"
            strTestCaseResult="PASS" 
            Exit Sub 
          Else       
'            strTCRemarks= "Open WorkSpace Button is Active when we select multiple workspaces---"
'            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_03 Testcase Fail"            
            strTCRemarks ="TC_SOURCEWV_03 Fail"
            strTestCaseResult="FAIL" 
            Exit Sub  
          End If   
       End If  
     
'-------------------------------------------------------------------------------------------------------------      
     
     'Testcase:SOURCE52: Verifying "Open Workspace" button by selecting Single Workspaces
      If strCategory ="TC_SOURCEWV_02" Then                
          Call objGridControl.ClickCell(0 , "Created by")              
          'Verifying Enabling status for Open workspace button"      
          strOpenWS = "WPFObject(""ContentControlEx"", ""Open Workspace"", 2)"          
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strOpenWS,60,true)
          If objTemp.IsEnabled = True Then             
'            strTCRemarks= "Open WorkSpace Button is Active when we select single workspaces---"
'            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_02 Testcase Pass"
             strTCRemarks ="TC_SOURCEWV_02 Pass"
            strTestCaseResult="PASS" 
            Exit Sub  
          Else       
'            strTCRemarks= "Open WorkSpace Button is Inactive when we select single workspaces---"
'            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_02 Testcase Fail"
             strTCRemarks ="TC_SOURCEWV_02 Fail"
            strTestCaseResult="FAIL"
            Exit Sub                                   
          End If   
       End If
     
'-------------------------------------------------------------------------------------------------------------      
     
     'Testcase:SOURCE54  By clicking on Open Workspace button it should open a selected workspace
      If strCategory ="TC_SOURCEWV_04" Then 
          Call objGridControl.ClickCell(0 , "Workspace Name")      
          For intI = 1 to intRowcnt-1  
            strWorkSpaceName= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intI).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText   
            Exit For
          Next    
          
      'Open the selected workspace      
          strTemp = "WPFObject(""ContentControlEx"", ""Open Workspace"", 2)"          
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,true)
          If objTemp.Exists  Then  
            objTemp.Click
            Call sEdgeProcessor
            strTemp = "WPFObject(""LayoutPanel"", """", 2)"
            Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2)
            If objTemp.IsEnabled Then
                strCaption = objTemp.Caption.OleValue
                IF Trim(strCaption) = Trim("Source Workspace (For Edit) - " &strWorkSpaceName) Then
                    strTCRemarks ="TC_SOURCEWV_04 Pass"
                    strTestCaseResult="PASS" 
                    strTemp = "WPFObject(""LayoutPanel"", """", 2)"
                   Set objStrClose=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2)
                   If objStrClose.Exists = True then  
                      objStrClose.Closed=true 
                      Delay 2000,"Closing Form..."  
                   End If  
                   Exit Sub 
                Else
'                    strTCRemarks= "Selected WorkSpace is not opened---"
'                    strTCRemarks = strTCRemarks & "---TC_SOURCEWV_04 Testcase Pass"
                     strTCRemarks ="TC_SOURCEWV_04 Fail"
                     strTestCaseResult="FAIL"              
                  End IF
              End If                    
           Else       
'            strTCRemarks= "---Open WorkSpace Button is Inactive---"
'            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_02 Testcase Fail---"
             strTCRemarks ="TC_SOURCEWV_02 Fail"
            strTestCaseResult="FAIL"
            Exit Sub                                   
          End If   
       End If
     
'-------------------------------------------------------------------------------------------------------------------------------      
  'Open the selected workspace by Double  Click action
   If strCategory ="TC_SOURCEWV_47" Then 
    Call objGridControl.DblClickCell(0, "Created by")
    Call sEdgeProcessor()
      Call sOpenGenral("TC_SOURCEWV_47") 
      strTCRemarks2 = strTCRemarks
      strTCRemarks =   strTCRemarks1 & strTCRemarks2 
      If InStr(strTCRemarks ,"Pass")>0 Then 
       strTestCaseResult="PASS" 
       Exit Sub
      Else
        strTestCaseResult="FAIL" 
      Exit Sub     
      End If
   End If  
   
   
   If Err.Number > 0 Then
    Log.Warning("Error in 'sOpenWorkspace', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'-------------------------------------------------------------------------------------------------------------------------------

Sub sCloseSWV()

On Error Resume Next
'strEnvi = "Edge ( US Integration )" 
Dim objStrClose
strTemp = "WPFObject(""LayoutPanel"", """", 1)"
Set objStrClose=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).FindChild("Name",strTemp,10,true)

 If objStrClose.Exists Then  
      objStrClose.Closed=true 
      Delay 1000,"Closing Form..."  
 Else
  log.message "No Window is Displayed to Close." 
  Exit Sub
 End If  
 
 
 If Err.Number > 0 Then
    Log.Warning("Error in 'sCloseSWV', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
 
 

End Sub

Sub sClosePanel2()

  On Error Resume Next
  strEnvi = "Edge ( US Integration )" 
  strTemp = "WPFObject(""LayoutPanel"", """", 2)" 
  Set objStrClose=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).FindChild("Name",strTemp,10,true)
  
  'Close the Second Panel
   If objStrClose.IsEnabled = True then  
        objStrClose.Closed=true 
        Delay 2000,"Closing Form..."         
   End If  
   
   If Err.Number > 0 Then
    Log.Warning("Error in 'sClosePanel2', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Sub



Sub sUploadFromSWV(strParameters)
'Sub sUploadFromSWV()
    Delay "5000", "Please Wait...."
    strCategory=getSplitValue(strParameters,"CATEGORY")
'    strCategory="SOURCE_62_64"
'    strEnvi = "Edge ( US Integration )" 
    
    Call sOpenSourceWSViewer()
    Delay 1000 
On Error Resume Next

''Selecting Records 
      strTemp="WPFObject(""PendingChangeGridControl"")"
    
    Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      Set objTableView = objGridControl.WPFObject("PendingChangeTableView")
      intRowcnt=objGridControl.wRowCount
      
      
      
      'Testcase:SOURCE56: Verifying "Upload Workspace" button by selecting multiple workspaces
      If strCategory ="TC_SOURCEWV_06" Then 
          For intI = 0 to intRowcnt-1      
            Call objGridControl.ClickCell(intI , "Created by", skCtrl)
           Next   
            
          StrTemp = "WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"          
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",StrTemp,60,true)
          If objTemp.IsEnabled = False Then             
'            strTCRemarks= "Upload WorkSpace Button is Inactive when we select multiple workspaces---"
'            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_06 Testcase Pass"
           strTCRemarks = "TC_SOURCEWV_06  Pass"
            strTestCaseResult="PASS" 
            Exit Sub 
          Else       
'            strTCRemarks= "Upload WorkSpace Button is Active when we select multiple workspaces---"
'            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_06 Testcase Fail"            
            strTCRemarks = "TC_SOURCEWV_06  Fail"
            strTestCaseResult="FAIL" 
            Exit Sub  
          End If   
       End If  

       
         
     'Testcase:SOURCE55: Verifying "Upload Workspace" button by selecting Single Workspaces
      If strCategory ="TC_SOURCEWV_05" Then                
          Call objGridControl.ClickCell(0 , "Created by")              
          'Verifying Enabling status for Open workspace button"      
          StrTemp = "WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"          
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",StrTemp,60,true)
          If objTemp.IsEnabled = True Then             
'            strTCRemarks= "Upload WorkSpace Button is Active when we select single workspaces---"
'            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_05 Testcase Pass"
            strTCRemarks = "TC_SOURCEWV_05  Pass"            
            strTestCaseResult="PASS" 
            Exit Sub  
          Else       
'            strTCRemarks= "Upload WorkSpace Button is Inactive when we select single workspaces---"
'            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_05 Testcase Fail"
            strTCRemarks = "TC_SOURCEWV_05  Fail"
            strTestCaseResult="FAIL"
            Exit Sub                                   
          End If   
       End If
       
       
      'Testcase"Source57 : Upload the Workspace From SourceWorkspace Viewer window
      If strCategory ="TC_SOURCEWV_07" Then                
          Call objGridControl.ClickCell(0 , "Created by")
          'Click on Upload Workspace button
          StrTemp = "WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"          
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",StrTemp,60,true)
          If objTemp.IsEnabled = True Then  
              objTemp.Click
              Delay 2000            
              strTemp="WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Please Confirm."")"
              Set objConfirm=Sys.Process("EdgeClient").WaitChild(strTemp,60000)
              strTemp="WPFObject(""TextBlock_Message"")"
              Set objText = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.").FindChild("Name",strTemp,10,True)
              If objText.Exists Then
                strText = objText.Text.OleValue
              End If
              If objConfirm.Exists And Ucase(Trim(strText)) = Ucase(trim("Are you sure to upload the workspace?"))Then
                SYS.Keys "[Enter]"
               

              Set objConfirm = Sys.Process("EdgeClient")._
                  Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Upload Workspace"")",600000)'._
                   If objConfirm.Exists = True then
                    Sys.Keys("O")
                    Call sEdgeProcessor
                    'strTCRemarks= "Selected WorkSpace is Uploaded---" 
'                    strTCRemarks = strTCRemarks & "---TC_SOURCEWV_07 Testcase Pass" 
                    strTCRemarks = "TC_SOURCEWV_07  Pass"
                    strTestCaseResult="PASS" 
                    Exit Sub
                   End If

              Else 
'                strTCRemarks= "Selected WorkSpace is not Uploaded---" 
'                strTCRemarks = strTCRemarks & "---TC_SOURCEWV_07 Testcase Fail" 
                strTCRemarks = "TC_SOURCEWV_07  Fail"
                strTestCaseResult="FAIL" 
                Exit Sub
              End If 
          End If        
      End If
      
      
   If Err.Number > 0 Then
    Log.Warning("Error in 'sUploadFromSWV', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
       
End Sub

Sub sDrop(strParameters)
'Sub sDrop()
    Delay "5000", "Please Wait...."
    strCategory=getSplitValue(strParameters,"CATEGORY")
    strType=getSplitValue(strParameters,"TYPE")   
'    strCategory="SOURCE_62_64"
'    'strType = "Yes"
'    strEnvi = "Edge ( US Integration )" 
    
    Call sOpenSourceWSViewer()
    Delay 1000 
    On Error Resume Next
'--------------------------------------------------------------------------------------------------------------------------------------------
    ''Selecting Records 
      strTemp="WPFObject(""PendingChangeGridControl"")"
    
      Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      Set objTableView = objGridControl.WPFObject("PendingChangeTableView")
      intRowcnt=objGridControl.wRowCount
      intOldRowCnt = intRowcnt
      
      StrRefresh = "WPFObject(""ContentControlEx"", ""Refresh"", 2)"  
      Set objRefresh=Sys.Process("EdgeClient").FindChild("Name",StrRefresh,60,true)
      If objRefresh.Exists Then
        objRefresh.Click    
        Call sEdgeProcessor()
      End If
'--------------------------------------------------------------------------------------------------------------------------------------------      
      'Testcase:SOURCE55: Verifying stauts of "Drop" button by selecting Single Workspaces
      If strCategory ="TC_SOURCEWV_10" Then                
          Call objGridControl.ClickCell(0 , "Created by")              
          'Verifying Enabling status for Open workspace button"                
          StrTemp = "WPFObject(""ContentControlEx"", ""Drop"", 2)"   
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",StrTemp,60,true)
          If objTemp.IsEnabled = True Then             
'            strTCRemarks= "Drop Button is Active when we select single workspaces---"
'            strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_10 Testcase Pass"
             strTCRemarks = "TC_SOURCEWV_10 Pass"
             strTestCaseResult="PASS" 
            Exit Sub  
          Else       
'            strTCRemarks= "Drop Button is Inactive when we select single workspaces---"
'            strTCRemarks = strTCRemarks & "---------------TC_SOURCEWV_10 Testcase Fail"
            strTCRemarks = "TC_SOURCEWV_10 Fail"
            strTestCaseResult="FAIL"
            Exit Sub                                   
          End If   
       End If
      
'  ------------------------------------------------------------------------------------------------------------------------------------------     
      'Testcase: SOURCE62: Verifying Displayied message for single workspace
      If strCategory ="TC_SOURCEWV_12_14" Then                
          Call objGridControl.ClickCell(0 , "Created by")
          strWorkSpaceName = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText                 
          'Verifying Enabling status for Open workspace button"                
          StrTemp = "WPFObject(""ContentControlEx"", ""Drop"", 2)"   
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",StrTemp,60,true)
          If objTemp.IsEnabled = True Then
               objTemp.Click   
               strText = "WPFObject(""TextBlock_Message"")"
               Set objText = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.").FindChild("Name",strText,10,True)           
               If Ucase(trim(objText.Text.OleValue))= Ucase(trim("Are you sure you want to drop the workspaces?")) Then
                  SYS.Keys "N"
                 strNewWorkSpaceName= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText   
                 If strNewWorkSpaceName = strWorkSpaceName  Then
'                    strTCRemarks= strTCRemarks & "-------------   Selected workspace is not droped---"
'                    strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_14 Testcase Pass"
                    strTCRemarks = "TC_SOURCEWV_12_14  Pass"
                    strTestCaseResult="PASS" 
                    Exit Sub
                 Else
'                    strTCRemarks= "Selected workspace is  droped---"
'                    strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_14 Testcase Fail"
                    strTCRemarks = "TC_SOURCEWV_14  Fail"
                    strTestCaseResult="FAIL"
                    Exit Sub 
                  End IF
                  Exit Sub  
                Else       
'                  strTCRemarks= "Are you sure you want to drop the workspaces? , message is not  displayed---"
'                  strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_12 Testcase Fail"
                  strTCRemarks = "TC_SOURCEWV_12  Fail"
                  strTestCaseResult="FAIL"
                  Exit Sub  
               End If
             End If               
       End If

 
'--------------------------------------------------------------------------------------------------------------------------------------------    
''Testcase: SOURCE64: by clicking on Yes button the selected workspace should  drop
      If strCategory ="TC_SOURCEWV_13" Then               
            Call objGridControl.ClickCell(0 , "Created by")
            StrTemp = "WPFObject(""ContentControlEx"", ""Drop"", 2)" 
            Set objTemp=Sys.Process("EdgeClient").FindChild("Name",StrTemp,60,true)
            If objTemp.IsEnabled = True Then 
              objTemp.Click 
              strTemp="WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Please Confirm."")"
              Set objConfirm=Sys.Process("EdgeClient").WaitChild(strTemp,60000)                     
              strTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.").WPFObject("CustomMessageBoxWindow", "Please Confirm.", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("DockPanel", "", 1).WPFObject("TextBlock_Message").Text.OleValue
          
           If objConfirm.Exists And Ucase(Trim(strTemp)) = Ucase(trim("Are you sure you want to drop the workspaces?")) And Ucase(Trim(strType)) = Ucase(Trim("Yes"))Then
              SYS.Keys "[Enter]"
              Delay 5000
              Call sEdgeProcessor()
              Delay 5000
              intRowcnt=objGridControl.wRowCount
              If intRowcnt = 0 Then 
'                 strTCRemarks= "Selected Workspace is Droped for Single Workspace---"
'                 strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_13 Testcase Pass"
                  strTCRemarks = "TC_SOURCEWV_13  Pass"
                  strTestCaseResult="PASS"
                  Call sCloseSWV() 
                  Exit Sub 
              Else
'                 strTCRemarks= "Selected Workspacs is not Droped for Single Workspace---"
'                 strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_13 Testcase Fail"
                 strTCRemarks = "TC_SOURCEWV_13  Fail"
                 strTestCaseResult="FAIL" 
                 Exit Sub 
              End If
             End If         
            End If
          End If      

'-------------------------------------------------------------------------------------------------------------------------------------------- 
             
      'Testcase:SOURCE56: Verifying "Drop" button by selecting multiple workspaces
      If strCategory ="TC_SOURCEWV_11" Then 
          intRowcnt=objGridControl.wRowCount
          For intI = 0 to intRowcnt-1      
            Call objGridControl.ClickCell(intI , "Created by", skCtrl)
           Next   
            
          StrTemp = "WPFObject(""ContentControlEx"", ""Drop"", 2)"         
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",StrTemp,60,true)
          If objTemp.IsEnabled = True Then    
'            strTCRemarks= "Drop Button is Active when we select multiple workspaces---"
'            strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_11 Testcase Pass"
             strTCRemarks = "TC_SOURCEWV_11  Pass"
            strTestCaseResult="PASS" 
            Exit Sub 
          Else       
'            strTCRemarks= "Drop Button is inactive when we select multiple workspaces---"
'            strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_11 Testcase Fail"  
            strTCRemarks = "TC_SOURCEWV_11  Fail"
            strTestCaseResult="FAIL" 
            Exit Sub  
          End If   
       End If  
       
        
  '--------------------------------------------------------------------------------------------------------------------------------------------     
       'Testcase:SOURCE _65 and SOURCE _65 : Verifying "Drop" button by selecting multiple workspaces
       
         Dim  arrWorkSpaceName(10), arrNewWSName(10)
       'Verification Drop Button functionality for Mutilpe Workspaces 
       If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCEWV_15_17"))  Then 
          intRowcnt=objGridControl.wRowCount
          For intI = 0 to intRowcnt-1      
            Call objGridControl.ClickCell(intI , "Created by", skCtrl)
            arrWorkSpaceName(intI)= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intI+1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText   
          Next   
            
          StrTemp = "WPFObject(""ContentControlEx"", ""Drop"", 2)" 
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",StrTemp,60,true)
          If objTemp.IsEnabled = True Then 
            objTemp.Click 
            strTemp="WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Please Confirm."")"
            Set objConfirm=Sys.Process("EdgeClient").WaitChild(strTemp,60000)                     
            strTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.").WPFObject("CustomMessageBoxWindow", "Please Confirm.", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("DockPanel", "", 1).WPFObject("TextBlock_Message").Text.OleValue
          
             'Click on Drop Button verify the message on confirmation dialog box
              If objConfirm.Exists And Ucase(Trim(strTemp)) = Ucase(trim("Are you sure you want to drop the workspaces?"))Then 
                 SYS.Keys "N"
                   Delay 500
                   For intI = 0 to intRowcnt-1      
                    Call objGridControl.ClickCell(intI , "Created by", skCtrl)
                    arrNewWSName(intI)= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intI+1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText   
                   Next
                   intCount = 0
                   For intI = 0 to intRowcnt-1                  
                      If arrWorkSpaceName(intI) = arrNewWSName(intI)Then 
                       intCount= intCount+1
                      End IF
                   Next                  
                   If intCount = intRowcnt Then                   
'                     strTCRemarks= strTCRemarks &"-------------Selected Workspaces are not Dropped for multiple Workspaces  ---"
'                     strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_17 Testcase Pass"
                     strTCRemarks = "TC_SOURCEWV_15_17  Pass"
                     strTestCaseResult="PASS" 
                     Exit Sub 
                   Else 
'                     strTCRemarks= "Selected Workspaces are  Dropped for multiple Workspaces ---"
'                     strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_17 Testcase Fail"
                     strTCRemarks = "TC_SOURCEWV_15_17  Fail"
                     strTestCaseResult="FAIL" 
                     Exit Sub 
                   End IF 
                  
              Else
'                   strTCRemarks= "Are you sure you want to drop the workspaces message box is not displyed for multiple Workspaces---"
'                   strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_15 Testcase Fail" 
                   strTCRemarks = "TC_SOURCEWV_15  Fail"
                   strTestCaseResult="FAIL" 
                   Exit Sub                
              End IF 
            End If
           End If  
'              
          
'--------------------------------------------------------------------------------------------------------------------------------------------           
                
          
          'Click on Yes Button on Drop the multiple Selected Workspaces 
         If strCategory ="TC_SOURCEWV_16" Then
         intRowcnt=objGridControl.wRowCount          
           For intI = 0 to intRowcnt-1      
              Call objGridControl.ClickCell(intI , "Created by", skCtrl)
              arrWorkSpaceName(intI)= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intI+1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText   
            Next   
            
            StrTemp = "WPFObject(""ContentControlEx"", ""Drop"", 2)" 
            Set objTemp=Sys.Process("EdgeClient").FindChild("Name",StrTemp,60,true)
            If objTemp.IsEnabled = True Then 
              objTemp.Click 
              strTemp="WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Please Confirm."")"
              Set objConfirm=Sys.Process("EdgeClient").WaitChild(strTemp,60000)                     
              strTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.").WPFObject("CustomMessageBoxWindow", "Please Confirm.", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("DockPanel", "", 1).WPFObject("TextBlock_Message").Text.OleValue
          
           If objConfirm.Exists And Ucase(Trim(strTemp)) = Ucase(trim("Are you sure you want to drop the workspaces?")) And Ucase(Trim(strType)) = Ucase(Trim("Yes"))Then
              SYS.Keys "[Enter]"
              Delay 5000
              Call sEdgeProcessor()
              intRowcnt=objGridControl.wRowCount
              If intRowcnt = 0 Then 
'                 strTCRemarks= "Selected Workspaces are Droped for multiple Workspaces---"
'                 strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_16 Testcase Pass"
                strTCRemarks = "TC_SOURCEWV_16  Pass"
                 strTestCaseResult="PASS" 
                 Call sCloseSWV()
              Else
'                 strTCRemarks= "Selected Workspaces are not Droped for multiple Workspaces---"
'                 strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_16 Testcase Fail"
                 strTCRemarks = "TC_SOURCEWV_16  Fail"
                 strTestCaseResult="FAIL" 
              End If
             End If         
            End If
          End If
          
   If Err.Number > 0 Then
      Log.Warning("Error in 'sDrop', Error Description : " & Err.Description &" Error Number : "& Err.Number)
      Err.Clear
  End If
End Sub



Sub sRefersh()
    Call sOpenSourceWSViewer()
    Delay "5000", "Please Wait...."
    On Error Resume Next
    
    
    StrRefresh = "WPFObject(""ContentControlEx"", ""Refresh"", 2)"  
    Set objRefresh=Sys.Process("EdgeClient").FindChild("Name",StrRefresh,60,true)
    If objRefresh.Exists Then        
        objRefresh.Click  
        Call sEdgeProcessor()
        Delay 5000, "Please wait Source WV is refreshing"
        strTemp = "WPFObject(""LoadingWaitControl"", """", 1)"
        Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,60,true)        
        If objTemp.Exists = False Then
         strTCRemarks ="TC_SOURCEWV_18_19 Pass"
          strTestCaseResult="PASS"             
        Else 
          strTCRemarks ="TC_SOURCEWV_19 Fail"
          strTestCaseResult="FAIL"
        End If   
     Else
       strTCRemarks ="TC_SOURCEWV_18 Fail"
       strTestCaseResult="FAIL"
        
     End If
     
     
   If Err.Number > 0 Then
    Log.Warning("Error in 'sRefersh', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub



Sub sRightClick()


    Call sOpenSourceWSViewer()
    Delay "5000", "Please Wait...."
    On Error Resume Next
    intI = 0
'--------------------------------------------------------------------------------------------------------------------------------------------
  'Verify RightClick option in source Workspcae viewer window
    
      strTemp="WPFObject(""PendingChangeGridControl"")"    
      Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      Set objTableView = objGridControl.WPFObject("PendingChangeTableView")
      
      'Verify Open Workspcae option by rightclick
       
    ' strText =  Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 1).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Open Workspace", 2).WPFControlText
      strTemp = "WPFObject(""ContentControlEx"", ""Open Workspace"", 2)"
      Call objGridControl.ClickCellR(0, "Created by")
      Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
      strText = objTemp.WPFControlText
      If Trim(Ucase(strText)) = Trim(Ucase("Open Workspace")) Then 
        strTCRemarks = strTCRemarks & "----Open Workspace option is Available---" 
     Else 
        intI = intI+1
      End IF
  '--------------------------------------------------------------------------------------------------------------------------------------------    
      'Verifying "Upload Workspace option"
'      Call objGridControl.ClickCellR(0, "Created by")      
'      strText = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 2).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Upload Workspace", 2).WPFControlText
      strTemp = "WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"
      Call objGridControl.ClickCellR(0, "Created by")
      Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
      strText = objTemp.WPFControlText       

       If Trim(Ucase(strText)) = Trim(Ucase("Upload Workspace")) Then 
          strTCRemarks =strTCRemarks &  "----Upload Workspace option is Available----" 
       Else 
          intI = intI+1
        End IF
'--------------------------------------------------------------------------------------------------------------------------------------------      
     'verify Drop Option
      
'      Call objGridControl.ClickCellR(0, "Created by")
'      strText =  Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 3).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Drop", 2).WPFControlText
      strTemp = "WPFObject(""ContentControlEx"", ""Drop"", 2)"
      Call objGridControl.ClickCellR(0, "Created by")
      Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
      strText = objTemp.WPFControlText
   
      If Trim(Ucase(strText)) = Trim(Ucase("Drop")) Then      
        strTCRemarks = strTCRemarks & "---Drop option is Available----" 
     Else 
        intI = intI+1
      End IF
     
      'Verify Testcase is pass or Fail
      
      If intI = 0 Then 
       strTCRemarks = "TC_SOURCEWV_20 Pass"
       strTestCaseResult="PASS"       
      Else
        strTCRemarks = "TC_SOURCEWV_20 Fail"
        strTestCaseResult="FAIL"        
      End If   
      
   If Err.Number > 0 Then
    Log.Warning("Error in 'sRightClick', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
      
End Sub




Sub sUploadRightClickSWV(strParameters)
'Sub sUploadRightClickSWV()
    Delay "5000", "Please Wait...."
    strCategory=getSplitValue(strParameters,"CATEGORY")
'    strCategory="TC_SOURCEWV_26"
'    strEnvi = "Edge ( US Integration )" 
'   ' msgbox strCategory
'    
    Call sOpenSourceWSViewer()
    Delay 1000 
    On Error Resume Next

''Selecting Records 
      
      'Refresh the SWV window
       StrRefresh = "WPFObject(""ContentControlEx"", ""Refresh"", 2)"  
      Set objRefresh=Sys.Process("EdgeClient").FindChild("Name",StrRefresh,60,true)
      If objRefresh.Exists Then
        objRefresh.Click    
        Call sEdgeProcessor()
      End If
      
      strTemp="WPFObject(""PendingChangeGridControl"")"    
     Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      Set objTableView = objGridControl.WPFObject("PendingChangeTableView")
      intRowcnt=objGridControl.wRowCount

'-------------------------------------------------------------------------------------------------------------------------------

  'Testcase:SOURCE56: Verifying right click "Upload Workspace" button by selecting multiple workspaces
       
      If strCategory ="TC_SOURCEWV_25" Then 
          For intI = 0 to intRowcnt-1      
            Call objGridControl.ClickCell(intI , "Created by", skCtrl)
          Next   
            
          StrTemp = "WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)" 
          Call objGridControl.ClickCellR(0, "Created by")         
          Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
          If objTemp.IsEnabled = False Then             
'            strTCRemarks= "Right Click Upload WorkSpace Button is Inactive when we select multiple workspaces---"
'            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_25 Testcase Pass"
            strTCRemarks = "TC_SOURCEWV_25  Pass"
            strTestCaseResult="PASS" 
            Exit Sub 
          Else       
'            strTCRemarks= "Right Click Upload WorkSpace Button is Active when we select multiple workspaces---"
'            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_25 Testcase Fail"            
            strTCRemarks = "TC_SOURCEWV_25  Fail"
            strTestCaseResult="FAIL" 
            Exit Sub  
          End If   
       End If  

'-------------------------------------------------------------------------------------------------------------------------------       
         
     'Testcase:SOURCE55: Verifying "Upload Workspace" button by selecting Single Workspaces
      If strCategory ="TC_SOURCEWV_24" Then                
          Call objGridControl.ClickCell(0 , "Created by")              
          'Verifying Enabling status for rightclick  Upload workspace button"      
          StrTemp = "WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"          
          Call objGridControl.ClickCellR(0, "Created by")
          Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
          If objTemp.IsEnabled = True Then             
'            strTCRemarks= "Right Click Upload WorkSpace Button is Active when we select single workspaces---"
'            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_24 Testcase Pass"
            strTCRemarks = "TC_SOURCEWV_24  Pass"
            strTestCaseResult="PASS" 
            Exit Sub  
          Else       
'            strTCRemarks= "Right Click Upload WorkSpace Button is Inactive when we select single workspaces---"
'            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_24 Testcase Fail"
            strTCRemarks = "TC_SOURCEWV_24  Fail"
            strTestCaseResult="FAIL"
            Exit Sub                                   
          End If   
       End If
       
       
      'Testcase"Source57 : Upload the Workspace by rightclick From SourceWorkspace Viewer window
      If strCategory ="TC_SOURCEWV_26" Then                
          Call objGridControl.ClickCell(0 , "Created by")
          'Click on Upload Workspace button
          StrTemp = "WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"  
          Call objGridControl.ClickCellR(0, "Created by")
          Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
              If objTemp.IsEnabled = True Then  
              objTemp.Click
              Delay 2000
              strTemp="WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Please Confirm."")"
              Set objConfirm=Sys.Process("EdgeClient").WaitChild(strTemp,60000)
              strTemp="WPFObject(""TextBlock_Message"")"
              Set objText = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.").FindChild("Name",strTemp,10,True)
              If objText.Exists Then
                strText = objText.Text.OleValue
              End If
              If objConfirm.Exists And Ucase(Trim(strText)) = Ucase(trim("Are you sure to upload the workspace?"))Then
                SYS.Keys "[Enter]"
               

              Set objConfirm = Sys.Process("EdgeClient")._
                  Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Upload Workspace"")",600000)'._
                   If objConfirm.Exists = True then
                    Sys.Keys("O")
                    Call sEdgeProcessor
'                    strTCRemarks= "Selected WorkSpace is Uploaded---" 
'                    strTCRemarks = strTCRemarks & "---TC_SOURCEWV_26 Testcase Pass" 
                    strTCRemarks = "TC_SOURCEWV_26  Pass"
                    strTestCaseResult="PASS" 
                    Exit Sub
                   End If

              Else 
'                strTCRemarks= "Selected WorkSpace is not Uploaded---" 
'                strTCRemarks = strTCRemarks & "---TC_SOURCEWV_26 Testcase Fail" 
                strTCRemarks = "TC_SOURCEWV_26  Fail"
                strTestCaseResult="FAIL" 
                Exit Sub
              End If 
          End If        
      End If
      
      
  If Err.Number > 0 Then
    Log.Warning("Error in 'sUploadRightClickSWV', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
       
End Sub


Sub sOpenWorkspaceRightClick(strParameters)
'Sub sOpenWorkspaceRighClick()
      Delay "5000", "Please Wait...."
      Call sOpenSourceWSViewer()
      strCategory=getSplitValue(strParameters,"CATEGORY")     
'      strCategory="TC_SOURCEWV_23"
'      strEnvi = "Edge ( US Integration )" 

On Error Resume Next

    'Refreshing the SWV window

      StrRefresh = "WPFObject(""ContentControlEx"", ""Refresh"", 2)"  
      Set objRefresh=Sys.Process("EdgeClient").FindChild("Name",StrRefresh,60,true)
      If objRefresh.Exists Then
        objRefresh.Click    
        Call sEdgeProcessor()
      End If

''Selecting Records 
      strTemp="WPFObject(""PendingChangeGridControl"")"
      Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      Set objTableView = objGridControl.WPFObject("PendingChangeTableView")
      intRowcnt=objGridControl.wRowCount
      
'-------------------------------------------------------------------------------------------------------------      
    
       'Testcase:TC_SOURCEWV_22:   Verifying  Right Click "Open Workspace" button by selecting multiple workspaces
      If strCategory ="TC_SOURCEWV_22" Then 
          For intI = 0 to intRowcnt-1      
            Call objGridControl.ClickCell(intI , "Created by", skCtrl)
           Next   
           strTemp = "WPFObject(""ContentControlEx"", ""Open Workspace"", 2)"  
           Call objGridControl.ClickCellR(0, "Created by")        
           Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
           If objTemp.IsEnabled = False Then             
'            strTCRemarks= "Right Click Open WorkSpace Button is Inactive when we select multiple workspaces---"
'            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_22 Testcase Pass"
            strTCRemarks = "TC_SOURCEWV_22  Pass"
            strTestCaseResult="PASS" 
            Exit Sub 
          Else       
'            strTCRemarks= "Right Click Open WorkSpace Button is Active when we select multiple workspaces---"
'            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_22 Testcase Fail"            
             strTCRemarks = "TC_SOURCEWV_22  Fail"
            strTestCaseResult="FAIL" 
            Exit Sub  
          End If   
       End If  
     
'-------------------------------------------------------------------------------------------------------------      
     
     'Testcase:TC_SOURCEWV_21: Verifying Right Click "Open Workspace" button by selecting Single Workspaces
      If strCategory ="TC_SOURCEWV_21" Then                
          Call objGridControl.ClickCell(0 , "Created by")              
          'Verifying Enabling status for Open workspace button"      
           strTemp = "WPFObject(""ContentControlEx"", ""Open Workspace"", 2)"  
           Call objGridControl.ClickCellR(0, "Created by")        
           Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
          If objTemp.IsEnabled = True Then             
'            strTCRemarks= "Right Click Open WorkSpace Button is Active when we select single workspaces---"
'            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_21 Testcase Pass"
             strTCRemarks = "TC_SOURCEWV_21  Pass"
            strTestCaseResult="PASS" 
            Exit Sub  
          Else       
'            strTCRemarks= "Right Click Open WorkSpace Button is Inactive when we select single workspaces---"
'            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_21 Testcase Fail"
             strTCRemarks = "TC_SOURCEWV_21  Fail"
            strTestCaseResult="FAIL"
            Exit Sub                                   
          End If   
       End If
     
'-------------------------------------------------------------------------------------------------------------      
     
     'Testcase:TC_SOURCEWV_23  By clicking on Right Click Open Workspace button it should open a selected workspace
      If strCategory ="TC_SOURCEWV_23" Then 
          Call objGridControl.ClickCell(0 , "Workspace Name")      
          For intI = 1 to intRowcnt-1  
            strWorkSpaceName= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intI).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText   
            Exit For
          Next    
          
      'Open the selected workspace  
       strTemp = "WPFObject(""ContentControlEx"", ""Open Workspace"", 2)"  
       Call objGridControl.ClickCellR(0, "Created by")        
         Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
             
           If objTemp.Exists  Then  
            objTemp.Click
            Call sEdgeProcessor
            strTemp = "WPFObject(""LayoutPanel"", """", 2)"
            Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2)
            If objTemp.Exists Then
                strCaption = objTemp.Caption.OleValue
                IF Trim(strCaption) = Trim("Source Workspace (For Edit) - " &strWorkSpaceName) Then
'                    strTCRemarks= "Selected WorkSpace is opened---" 
'                    strTCRemarks = strTCRemarks & "---TC_SOURCEWV_23 Testcase Pass" 
                    strTCRemarks = "TC_SOURCEWV_23  Pass"
                    strTestCaseResult="PASS" 
                    strTemp = "WPFObject(""LayoutPanel"", """", 2)"
                   Set objStrClose=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2)
                   If objStrClose.Exists = True then  
                      objStrClose.Closed=true 
                      Delay 2000,"Closing Form..."  
                   End If  
                   Exit Sub 
                Else
'                    strTCRemarks= "Selected WorkSpace is not opened---"
'                    strTCRemarks = strTCRemarks & "---TC_SOURCEWV_23 Testcase Pass"
                    strTCRemarks = "TC_SOURCEWV_23  Fail"
                    strTestCaseResult="FAIL"              
                  End IF
              End If                    
           Else       
'            strTCRemarks= "---Open WorkSpace Button is Inactive---"
'            strTCRemarks = strTCRemarks & "---TC_SOURCEWV_23 Testcase Fail---"
           strTCRemarks = "TC_SOURCEWV_23  Fail"
            strTestCaseResult="FAIL"
            Exit Sub                                   
          End If   
       End If
       
       
   If Err.Number > 0 Then
    Log.Warning("Error in 'sOpenWorkspaceRightClick', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
     
End Sub




Sub sDropRightClick(strParameters)
'Sub sDrop()
    Delay "5000", "Please Wait...."
    strCategory=getSplitValue(strParameters,"CATEGORY")
    strType=getSplitValue(strParameters,"TYPE")   
'    strCategory="SOURCE_62_64"
'    'strType = "Yes"
'    strEnvi = "Edge ( US Integration )" 
    
    Call sOpenSourceWSViewer()
    On Error Resume Next
'--------------------------------------------------------------------------------------------------------------------------------------------
    ''Selecting Records 
      strTemp="WPFObject(""PendingChangeGridControl"")"
    
      Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      Set objTableView = objGridControl.WPFObject("PendingChangeTableView")     
      intRowcnt=objGridControl.wRowCount
      intOldRowCnt = intRowcnt
      
    'Refreshing the SWV  
      StrRefresh = "WPFObject(""ContentControlEx"", ""Refresh"", 2)"  
      Set objRefresh=Sys.Process("EdgeClient").FindChild("Name",StrRefresh,60,true)
      If objRefresh.Exists Then
        objRefresh.Click    
        Call sEdgeProcessor()
      End If
'--------------------------------------------------------------------------------------------------------------------------------------------      
'           strTemp = "WPFObject(""ContentControlEx"", ""Drop"", 2)"
'      Call objGridControl.ClickCellR(0, "Created by")
'      Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)

     
      'Testcase:TC_SOURCEWV_27: Verifying stauts of RightClick "Drop" button by selecting Single Workspaces
      If strCategory ="TC_SOURCEWV_27" Then                
          Call objGridControl.ClickCell(0 , "Created by")              
          'Verifying Enabling status for Open workspace button"                
          strTemp = "WPFObject(""ContentControlEx"", ""Drop"", 2)"  
          Call objGridControl.ClickCellR(0, "Created by")
          Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
          If objTemp.IsEnabled = True Then             
'            strTCRemarks= "RightClick Drop Button is Active when we select single workspaces---"
'            strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_27 Testcase Pass"
            strTCRemarks = "TC_SOURCEWV_27  Pass"
            strTestCaseResult="PASS" 
            Exit Sub  
          Else       
'            strTCRemarks= "RightClick Drop Button is Inactive when we select single workspaces---"
'            strTCRemarks = strTCRemarks & "---------------TC_SOURCEWV_27 Testcase Fail"
            strTCRemarks = "TC_SOURCEWV_27  Fail"
            strTestCaseResult="FAIL"
            Exit Sub                                   
          End If   
       End If

'  ------------------------------------------------------------------------------------------------------------------------------------------        
      'Testcase:SOURCE56: Verifying Right Click "Drop" button by selecting multiple workspaces
      If strCategory ="TC_SOURCEWV_28" Then 
          intRowcnt=objGridControl.wRowCount
          For intI = 0 to intRowcnt-1      
            Call objGridControl.ClickCell(intI , "Created by", skCtrl)
           Next   
            
        strTemp = "WPFObject(""ContentControlEx"", ""Drop"", 2)"  
          Call objGridControl.ClickCellR(0, "Created by")
          Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
          If objTemp.IsEnabled = True Then    
'            strTCRemarks= "Right Click Drop Button is Active when we select multiple workspaces---"
'            strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_28 Testcase Pass"
           strTCRemarks = "TC_SOURCEWV_28  Pass"
            strTestCaseResult="PASS" 
            Exit Sub 
          Else       
'            strTCRemarks= "Right Click Drop Button is inactive when we select multiple workspaces---"
'            strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_28 Testcase Fail"            
            strTCRemarks = "TC_SOURCEWV_28  Pass"
            strTestCaseResult="FAIL" 
            Exit Sub  
          End If   
       End If  
            
       
             
'  ------------------------------------------------------------------------------------------------------------------------------------------     
      'Testcase: TC_SOURCEWV_29_31 : on Right Click option , Verifying Displayied message for single workspace and Click on No button on Display message
      If strCategory ="TC_SOURCEWV_29_31" Then                
          Call objGridControl.ClickCell(0 , "Created by")
          strWorkSpaceName = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText                 
          
          
          strTemp = "WPFObject(""ContentControlEx"", ""Drop"", 2)"  
          Call objGridControl.ClickCellR(0, "Created by")
          Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
          If objTemp.IsEnabled = True Then
               objTemp.Click   
               strText = "WPFObject(""TextBlock_Message"")"
               Set objText = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.").FindChild("Name",strText,10,True)           
               If Ucase(trim(objText.Text.OleValue))= Ucase(trim("Are you sure you want to drop the workspaces?")) Then
                  SYS.Keys "N"
                 strNewWorkSpaceName= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText   
                 If strNewWorkSpaceName = strWorkSpaceName  Then
'                    strTCRemarks= strTCRemarks & "-------------   Selected workspace is not droped---"
'                    strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_31 Testcase Pass"
                    strTCRemarks = "TC_SOURCEWV__29_31  Pass"
                    strTestCaseResult="PASS" 
                    Exit Sub
                 Else
'                    strTCRemarks= "Selected workspace is  droped---"
'                    strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_31 Testcase Fail"
                    strTCRemarks = "TC_SOURCEWV_31  Fail"
                    strTestCaseResult="FAIL"
                    Exit Sub 
                  End IF
                  Exit Sub  
                Else       
'                  strTCRemarks= "Are you sure you want to drop the workspaces? , message is not  displayed---"
'                  strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_29 Testcase Fail"
                  strTCRemarks = "TC_SOURCEWV_29  Fail"
                  strTestCaseResult="FAIL"
                  Exit Sub  
               End If
             End If               
       End If

 
'--------------------------------------------------------------------------------------------------------------------------------------------    
''Testcase: SOURCE64: by clicking on Yes button the selected workspace should  drop
      If strCategory ="TC_SOURCEWV_30" Then               
         Call objGridControl.ClickCell(0 , "Created by")
         strTemp = "WPFObject(""ContentControlEx"", ""Drop"", 2)"  
         Call objGridControl.ClickCellR(0, "Created by")
         Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
          If objTemp.IsEnabled = True Then 
              objTemp.Click 
              strTemp="WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Please Confirm."")"
              Set objConfirm=Sys.Process("EdgeClient").WaitChild(strTemp,60000)                     
              strTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.").WPFObject("CustomMessageBoxWindow", "Please Confirm.", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("DockPanel", "", 1).WPFObject("TextBlock_Message").Text.OleValue
          
           If objConfirm.Exists And Ucase(Trim(strTemp)) = Ucase(trim("Are you sure you want to drop the workspaces?")) And Ucase(Trim(strType)) = Ucase(Trim("Yes"))Then
              SYS.Keys "[Enter]"
              Delay 5000
              Call sEdgeProcessor()
              Delay 5000
              intRowcnt=objGridControl.wRowCount
              If intRowcnt = 0 Then 
'                 strTCRemarks= "Selected Workspace is Droped for Single Workspace---"
'                 strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_30 Testcase Pass"
                 strTCRemarks = "TC_SOURCEWV_30  Pass"
                 strTestCaseResult="PASS"
                 Call sCloseSWV() 
                 Exit Sub 
              Else
'                 strTCRemarks= "Selected Workspacs is not Droped for Single Workspace---"
'                 strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_30 Testcase Fail"
                 strTCRemarks = "TC_SOURCEWV_30  Fail"
                 strTestCaseResult="FAIL" 
                 Exit Sub 
              End If
             End If         
            End If
          End If      


  '--------------------------------------------------------------------------------------------------------------------------------------------     
       'Testcase:TC_SOURCEWV_32 and TC_SOURCEWV_34: Verifying Right Click "Drop" button by selecting multiple workspaces
       
         Dim  arrWorkSpaceName(10), arrNewWSName(10)
       'Verification Drop Button functionality for Mutilpe Workspaces 
       If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCEWV_32_34"))  Then 
          intRowcnt=objGridControl.wRowCount
          For intI = 0 to intRowcnt-1      
            Call objGridControl.ClickCell(intI , "Created by", skCtrl)
            arrWorkSpaceName(intI)= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intI+1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText   
          Next   
            
         strTemp = "WPFObject(""ContentControlEx"", ""Drop"", 2)"  
         Call objGridControl.ClickCellR(0, "Created by")
         Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
          If objTemp.IsEnabled = True Then 
            objTemp.Click 
            strTemp="WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Please Confirm."")"
            Set objConfirm=Sys.Process("EdgeClient").WaitChild(strTemp,60000)                     
            strTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.").WPFObject("CustomMessageBoxWindow", "Please Confirm.", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("DockPanel", "", 1).WPFObject("TextBlock_Message").Text.OleValue
          
             'Click on Drop Button verify the message on confirmation dialog box
              If objConfirm.Exists And Ucase(Trim(strTemp)) = Ucase(trim("Are you sure you want to drop the workspaces?"))Then 
                   SYS.Keys "N"
                   Delay 500
                   For intI = 0 to intRowcnt-1      
                    Call objGridControl.ClickCell(intI , "Created by", skCtrl)
                    arrNewWSName(intI)= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intI+1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText   
                   Next
                   intCount = 0
                   For intI = 0 to intRowcnt-1                  
                      If arrWorkSpaceName(intI) = arrNewWSName(intI)Then 
                       intCount= intCount+1
                      End IF
                   Next                  
                   If intCount = intRowcnt Then                   
'                     strTCRemarks= strTCRemarks &"-------------Selected Workspaces are not Dropped for multiple Workspaces  ---"
'                     strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_34 Testcase Pass"
                     strTCRemarks = "TC_SOURCEWV_32_34  Pass"
                     strTestCaseResult="PASS" 
                     Exit Sub 
                   Else 
'                     strTCRemarks= "Selected Workspaces are  Dropped for multiple Workspaces ---"
'                     strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_34 Testcase Fail"
                     strTCRemarks = "TC_SOURCEWV_32_34  Fail"
                     strTestCaseResult="FAIL" 
                     Exit Sub 
                   End IF 
                  
              Else
'                   strTCRemarks= "Are you sure you want to drop the workspaces message box is not displyed for multiple Workspaces---"
'                   strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_32 Testcase Fail" 
                   strTCRemarks = "TC_SOURCEWV_32  Fail"
                   strTestCaseResult="FAIL" 
                   Exit Sub                
              End IF 
            End If
           End If  
'              
          
'--------------------------------------------------------------------------------------------------------------------------------------------           
                
          
          'Click on Yes Button on Drop the multiple Selected Workspaces 
         If strCategory ="TC_SOURCEWV_33" Then
         intRowcnt=objGridControl.wRowCount          
           For intI = 0 to intRowcnt-1      
              Call objGridControl.ClickCell(intI , "Created by", skCtrl)
              arrWorkSpaceName(intI)= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intI+1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText   
            Next   
            
         strTemp = "WPFObject(""ContentControlEx"", ""Drop"", 2)"  
         Call objGridControl.ClickCellR(0, "Created by")
         Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
          If objTemp.IsEnabled = True Then 
              objTemp.Click 
              strTemp="WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Please Confirm."")"
              Set objConfirm=Sys.Process("EdgeClient").WaitChild(strTemp,60000)                     
              strTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.").WPFObject("CustomMessageBoxWindow", "Please Confirm.", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("DockPanel", "", 1).WPFObject("TextBlock_Message").Text.OleValue
          
           If objConfirm.Exists And Ucase(Trim(strTemp)) = Ucase(trim("Are you sure you want to drop the workspaces?")) And Ucase(Trim(strType)) = Ucase(Trim("Yes"))Then
              SYS.Keys "[Enter]"
              Delay 5000
              Call sEdgeProcessor()
              intRowcnt=objGridControl.wRowCount
              If intRowcnt = 0 Then 
'                 strTCRemarks= "Selected Workspaces are Droped for multiple Workspaces---"
'                 strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_33 Testcase Pass"
                 strTCRemarks = "TC_SOURCEWV_33  Pass"
                 strTestCaseResult="PASS" 
                 Call sCloseSWV()
              Else
'                 strTCRemarks= "Selected Workspaces are not Droped for multiple Workspaces---"
'                 strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_33 Testcase Fail"
                 strTCRemarks = "TC_SOURCEWV_33  Pass"
                 strTestCaseResult="FAIL" 
              End If
             End If         
            End If
          End If
          
  If Err.Number > 0 Then
    Log.Warning("Error in 'sDropRightClick', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If 
End Sub



Sub sAttributes()
    
    Dim arrAttributes(5)
    Call sOpenSourceWSViewer()
    Delay "2000", "Please Wait...."
    
    On Error Resume Next
    
      strTemp="WPFObject(""PendingChangeGridControl"")"    
      Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      Set objTableView = objGridControl.WPFObject("PendingChangeTableView")
    
    For intI= 1 to 5
      arrAttributes(intI) =objTableView.WPFObject("GridColumnHeader", "", intI).DataContext.HeaderCaption 
    Next
    
    If Ucase(arrAttributes(1))= Ucase("Workspace Name") And Ucase(arrAttributes(2))= Ucase("Created by")And Ucase(arrAttributes(3))= Ucase("Owner")And Ucase(arrAttributes(4))= Ucase("Created At")And Ucase(arrAttributes(5))= Ucase("Updated At") Then 
      Call sCloseSWV() 
'      strTCRemarks= "All required Attributes are displayed in Source WorkspaceViewer window"      
      strTCRemarks = "TC_SOURCEWV_35  Pass"
      strTestCaseResult="PASS"
      
    Else
       Call sCloseSWV() 
      'strTCRemarks= "All required Attributes are not displayed in Source WorkspaceViewer window"      
      strTCRemarks = "TC_SOURCEWV_35  Fail"
      strTestCaseResult="FAIL"                 
    End If  
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sAttributes', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Sub


Sub sCreatedBy()
  
    Call sOpenSourceWSViewer()
    Delay "2000", "Please Wait...."
    
    On Error Resume Next
    
      strTemp="WPFObject(""PendingChangeGridControl"")"    
      Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      Set objTableView = objGridControl.WPFObject("PendingChangeTableView")
      Call objGridControl.ClickCell(0 , "Created by") 
      strCreatedBy =objTableView.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 2).WPFObject("InplaceBaseEdit", "", 1).DisplayText
      Set objSysInfo = CreateObject("ADSystemInfo")
      strUser = objSysInfo.UserName
      Set objUser = GetObject("LDAP://" & strUser)
      strFullName = objUser.Get("displayName")
      sDisplayName = Split(strFullName,",")
      
      If Ucase(Trim(strCreatedBy)) = Ucase(Trim(sDisplayName(0))) Then 
       Call sCloseSWV()
       Call SourceWorkSpacevwr()
        'strTCRemarks= "'Created by' Cell  display the name of the creator:  "  & strCreatedBy    
        strTCRemarks = "TC_SOURCEWV_37  Pass"
        strTestCaseResult="PASS"
      Else
        'strTCRemarks= "'Created by' Cell not displayed the name of the creator , it dipslyed : " & strCreatedBy     
        strTCRemarks = "TC_SOURCEWV_37  Fail"
        strTestCaseResult="FAIL"
      End If
      
   If Err.Number > 0 Then
    Log.Warning("Error in 'sCreatedBy', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'--------------------------------------------------------------------------------------------------------------------------------------------

Sub sOwner(strParameters)
'Sub sOwner()

On Error Resume Next


    strCategory=getSplitValue(strParameters,"CATEGORY")
    Name=getSplitValue(strParameters,"NAME")
    'msgbox strCategory
    'msgbox Name
    
   
'    strCategory="TC_SOURCEWV_42_43"
'    strEnvi = "Edge ( US Integration )" 
'    strName="Shilpa Bhopalapur"
    
    Call sOpenSourceWSViewer()
    
'--------------------------------------------------------------------------------------------------------------------------------------------
    ''Selecting Records 
      strTemp="WPFObject(""PendingChangeGridControl"")"
      Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      Set objTableView = objGridControl.WPFObject("PendingChangeTableView")     
      intRowcnt=objGridControl.wRowCount
    'Refreshing the SWV  
      StrRefresh = "WPFObject(""ContentControlEx"", ""Refresh"", 2)"  
      Set objRefresh=Sys.Process("EdgeClient").FindChild("Name",StrRefresh,60,true)
      If objRefresh.Exists Then
        objRefresh.Click    
        Call sEdgeProcessor()
      End If
'--------------------------------------------------------------------------------------------------------------------------------------------      
'      'To get the dispay name of the computer
      Set objSysInfo = CreateObject("ADSystemInfo")
      strUser = objSysInfo.UserName
      Set objUser = GetObject("LDAP://" & strUser)
      strFullName = objUser.Get("displayName")
      sDisplayName = Split(strFullName,",")
          
'------------------------------------------------------------------------------------------------------------------------------ 
'Owenr Cell should display the name of the Creator           
     If strCategory ="TC_SOURCEWV_38" Then
       Call objGridControl.ClickCell(0 , "Created by") 
       'Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 3).WPFObject("PART_Editor")
       strOwner =objTableView.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 3).WPFObject("PART_Editor").DisplayText
        If Ucase(Trim(strOwner)) = Ucase(Trim(sDisplayName(0))) Then 
          'strTCRemarks= "'Owner' Cell  display the name of the creator:  "  & strOwner    
          strTCRemarks = "TC_SOURCEWV_38  Pass"
          strTestCaseResult="PASS"
          Exit Sub 
       Else
          'strTCRemarks= "'Owner' Cell not displayed the name of the creator , It dipslyed : " & strOwner     
          strTCRemarks = "TC_SOURCEWV_38  Fail"
          strTestCaseResult="FAIL"
          Exit Sub 
        End If
    End If  
'------------------------------------------------------------------------------------------------------------------------------    
 'Verify the"Are you sure you want to change owner "message and selecte "No" on message box   
    If strCategory ="TC_SOURCEWV_39_41" Then
        Call objGridControl.ClickCell(0 , "Owner") 
         Set objOwner = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 3).WPFObject("PART_Editor")
        If objOwner.Exists = True then      
              objOwner.Click
              objOwner.keys(Name)
        End If
        Delay 500
        strText = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Change Ownership").WPFObject("CustomMessageBoxWindow", "Change Ownership", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("DockPanel", "", 1).WPFObject("TextBlock_Message").Text
        strMessage ="Are you sure you want to change ownership of the workspace"
        If InStr(strText,strMessage)>0 Then          
          'Click on No Button on the message box
          
          strTemp = "WPFObject(""Button_No"")"
          Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Change Ownership")._
          WPFObject("CustomMessageBoxWindow", "Change Ownership", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1)._
          WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1)._
          WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).WaitChild(strTemp,60000)
          If objTemp.Exists = True Then
            objTemp.Click
          Else
             Log.Message "Message box Object not found"
          End IF

          Call objGridControl.ClickCell(0 , "Created by") 
          strOwner =objTableView.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 3).WPFObject("PART_Editor").Text
          If Ucase(Trim(strOwner)) = Ucase(Trim(sDisplayName(0))) Then 
'            strTCRemarks= strTCRemarks &".............Owner name has not changed.........."  
'            strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_41 Testcase Pass........."   
            strTCRemarks = "TC_SOURCEWV_39_41  Pass"
            strTestCaseResult="PASS" 
            Exit Sub           
           Else
'            strTCRemarks= strTCRemarks &".............Owner name has changed.........."  
'            strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_41 Testcase Fail........."        
            strTCRemarks = "TC_SOURCEWV_41 Fail"
            strTestCaseResult="FAIL"
            Exit Sub 
           End If          
        Else
'          strTCRemarks= strTCRemarks & strText & "Message Dispalyed......." 
'          strTCRemarks = strTCRemarks & "-------------TC_SOURCEWV_39 Testcase Fail"
          strTCRemarks = "TC_SOURCEWV_39  Fail" 
          strTestCaseResult="FAIL"
          Exit Sub 
        End If
    End If
'------------------------------------------------------------------------------------------------------------------------------    
  'Select Yes on Message Box
   If strCategory ="TC_SOURCEWV_40" Then
     Call objGridControl.ClickCell(0 , "Owner")   
     Set objOwner = objTableView.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 3).WPFObject("PART_Editor")
        If objOwner.Exists = True then
           objOwner.Click
           objOwner.keys(Name)
        End If
     Delay 500
     strText = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Change Ownership").WPFObject("CustomMessageBoxWindow", "Change Ownership", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("DockPanel", "", 1).WPFObject("TextBlock_Message").Text
     strMessage = "Are you sure you want to change ownership of the workspace to '"& Name &"'?"
     If Trim(Ucase(strText))= Trim(Ucase(strMessage)) Then 
      'Click on Yes Button on the message box
     strTemp = "WPFObject(""Button_Yes"")"
      Set ObjYesButton =  Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Change Ownership").WPFObject("CustomMessageBoxWindow", "Change Ownership", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).WaitChild(strTemp,60000)
      If ObjYesButton.IsEnabled then
        ObjYesButton.Click 
      End If
      'Click on OK button
      strTemp = "WPFObject(""Button_OK"")"
       Set ObjOkButton =  Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Change Ownership").WPFObject("CustomMessageBoxWindow", "Change Ownership", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).WaitChild(strTemp,60000)
      If ObjOkButton.IsEnabled then
        ObjOkButton.Click 
      End If
      Delay 2000 ,"Please wait"
     
        intRowcnt=objGridControl.wRowCount
        If intRowcnt = 0 Then 
            strTCRemarks =  "Selected Workspace Moved to the new Owner: " & Name 
            log.Message "Selected Workspace Moved to the new Owner: " & Name 
            strTestCaseResult="PASS"
            Call sCloseSWV()
            Exit Sub  
        End If
     Else
        strTCRemarks= "Selected Workspace has not Moved to the new Owner: " & strName   
        log.Message "Selected Workspace has not Moved to the new Owner: " & Name   
        strTestCaseResult="FAIL"  
        Exit Sub   
     End If
   End If
'------------------------------------------------------------------------------------------------------------------------------    
'Open Workspace and try to Cheange the Owner
  If strCategory ="TC_SOURCEWV_42_43" Then
     Call objGridControl.ClickCell(0 , "Created by")
     strWorkSpaceName= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText
     strOpenWS = "WPFObject(""ContentControlEx"", ""Open Workspace"", 2)"          
     Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strOpenWS,60,true) 
     If objTemp.IsEnabled Then 
      objTemp.Click
      Call sEdgeProcessor()
      Delay 2000, "Please wait Workspace is loading"
     End If
     Call objGridControl.ClickCell(0 , "Owner")   
    Set objOwner = objTableView.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 3).WPFObject("PART_Editor")
        If objOwner.Exists = True then
           objOwner.Click
           objOwner.keys(Name)
        End If
     Delay 500
   
     strText = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Change Ownership").WPFObject("CustomMessageBoxWindow", "Change Ownership", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("DockPanel", "", 1).WPFObject("TextBlock_Message").Text
     strMessage = "Are you sure you want to change ownership of the workspace to '"& Name &"'?"
     If Trim(Ucase(strText))= Trim(Ucase(strMessage)) Then 
     'Click on Yes Button on the message box
     strTemp = "WPFObject(""Button_Yes"")"
      Set ObjYesButton =  Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Change Ownership").WPFObject("CustomMessageBoxWindow", "Change Ownership", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).WaitChild(strTemp,60000)
      If ObjYesButton.IsEnabled then
        ObjYesButton.Click 
      End If
    
       Delay 1000
       strText=  Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Change Ownership").WPFObject("CustomMessageBoxWindow", "Change Ownership", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("DockPanel", "", 1).WPFObject("TextBlock_Message").Text
       strMessage = "Please close Source Workspace '"& strWorkSpaceName & "', then re-change ownership again." 
       If Trim(Ucase(strText))= Trim(Ucase(strMessage)) Then          
     'Click on OK button
      strTemp = "WPFObject(""Button_OK"")"
       Set ObjOkButton =  Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Change Ownership").WPFObject("CustomMessageBoxWindow", "Change Ownership", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).WaitChild(strTemp,60000)
       If ObjOkButton.IsEnabled then
        ObjOkButton.Click 
       End If
       
        strTemp = "WPFObject(""LayoutPanel"", """", 2)"
        Set objStrClose=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2)
        If objStrClose.Exists = True then  
          objStrClose.Closed=true 
          Delay 2000,"Closing Form..."  
        End If      
        Call objGridControl.ClickCell(0 , "Owner")   
        Set objOwner = objTableView.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 3).WPFObject("PART_Editor")
        If objOwner.Exists = True then
           objOwner.Click
           objOwner.keys(Name)
        End If
         
         'Click on Yes Button on the message box
        strTemp = "WPFObject(""Button_Yes"")"
        Set ObjYesButton =  Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Change Ownership").WPFObject("CustomMessageBoxWindow", "Change Ownership", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).WaitChild(strTemp,60000)
        If ObjYesButton.IsEnabled then
          ObjYesButton.Click 
        End If
     
      'Click on OK button
      strTemp = "WPFObject(""Button_OK"")"
       Set ObjOkButton =  Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Change Ownership").WPFObject("CustomMessageBoxWindow", "Change Ownership", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("DockPanel", "", 1).WaitChild(strTemp,60000)
      If ObjOkButton.IsEnabled then
        ObjOkButton.Click 
      End If
      Delay 2000 ,"Please wait"
        
        intRowcnt=objGridControl.wRowCount
        If intRowcnt = 0 Then 
             Call sCloseSWV()
'            strTCRemarks= strTCRemarks &".............Selected Workspace Moved to the new Owner "& strName &" After Closing the opened workspace.........."  
'            strTCRemarks = strTCRemarks & "...........TC_SOURCEWV_43 Testcase Pass........."        
            strTCRemarks = "TC_SOURCEWV_42_43  Pass" 
            strTestCaseResult="PASS"  
            Exit Sub           
        Else  
'            strTCRemarks= strTCRemarks &".............Selected Workspace is not Moved to the new Owner  "& strName &" After Closing the opened workspace.........."  
'            strTCRemarks = strTCRemarks & "...........TC_SOURCEWV_43 Testcase Fail........."        
            strTCRemarks = "TC_SOURCEWV_42_43  Fail" 
            strTestCaseResult="FAIL" 
            Exit Sub 
        End If        
      Else
'        strTCRemarks= strTCRemarks &"..............Workspace Owner has  able to change when selected Workspace is opened..........."  
'        strTCRemarks = strTCRemarks & "...........TC_SOURCEWV_42 Testcase Fail........."        
        strTCRemarks = "TC_SOURCEWV_42  Fail"
        strTestCaseResult="FAIL" 
        Exit Sub    
     End If
    End If
   End If
   
   
  If Err.Number > 0 Then
    Log.Warning("Error in 'sOwner', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If 

End Sub

'.....................................................................................................................................
Sub sShortCuts()
    
  
   Call sOpenSourceWSViewer()
   Delay "2000", "Please Wait...."
   On Error Resume Next
   
 'Select the workspace   
    strTemp="WPFObject(""PendingChangeGridControl"")"    
    Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
    Set objTableView = objGridControl.WPFObject("PendingChangeTableView") 
    strWorkSpaceName = objTableView.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText
  
'...........................................................................................................................................        
    'Double  Click action
    Call objGridControl.DblClickCell(0, "Created by")
    Call sEdgeProcessor()
    'sTestData = TC_SOURCEWV_47
    Call sOpenGenral("TC_SOURCEWV_47")
    strTCRemarks1 = strTCRemarks
'........................................................................................................................................


'    Call objGridControl.ClickCell(0 , "Created by")      
'    Sys.Keys("^o")
'    Call sEdgeProcessor()          
'    sOpenGenral("TC_SOURCEWV_48") 
'    strTCRemarks2 = strTCRemarks
'    strTCRemarks =   strTCRemarks1 & strTCRemarks2 
'    If InStr(strTCRemarks ,"Pass")>0 Then 
'     strTestCaseResult="PASS" 
'    Else
'      strTestCaseResult="FAIL"      
'    End If
'........................................................................................................................................
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sShortCuts', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
    
End Sub


Sub sOpenGenral(sTestData)

      Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2)
       If objTemp.IsEnabled Then
          strCaption = objTemp.Caption.OleValue
          IF Trim(strCaption) = Trim("Source Workspace (For Edit) - " &strWorkSpaceName) Then
'              strTCRemarks= strTCRemarks & "Selected WorkSpace is opened by using Shortcut Keys---" 
'              strTCRemarks = strTCRemarks & "........" & sTestData & "... Testcase Pass...."             
              strTCRemarks = sTestData &" Pass"
              strTemp = "WPFObject(""LayoutPanel"", """", 2)"
             Set objStrClose=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2)
             If objStrClose.Exists = True then  
                objStrClose.Closed=true 
                Delay 2000,"Closing Form..."  
             End If   
             sOpenGenral = strTCRemarks           
          Else
'              strTCRemarks= strTCRemarks & "Selected WorkSpace is not opened  by using Shortcut Keys- ---"
'              strTCRemarks = strTCRemarks & "......" & sTestData & "... Testcase Fail..."  
              strTCRemarks = sTestData &" Fail"
              sOpenGenral = strTCRemarks             
            End IF
         End If 
         
         
        If Err.Number > 0 Then
          Log.Warning("Error in 'sOpenGenral', Error Description : " & Err.Description &" Error Number : "& Err.Number)
          Err.Clear
        End If
End Sub


Sub sShortCutToUpload()

   Call sOpenSourceWSViewer()
   Delay "2000", "Please Wait...."
   On Error Resume Next
   
 'Select the workspace   
    strTemp="WPFObject(""PendingChangeGridControl"")"    
    Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
    Set objTableView = objGridControl.WPFObject("PendingChangeTableView") 
    strWorkSpaceName = objTableView.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText
  
'...........................................................................................................................................        
    'Double  Click action
    Call objGridControl.DblClickCell(0, "Created by")
    Sys.Keys("^o")
    Call sEdgeProcessor()  
    Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2)
       If objTemp.IsEnabled Then
          strCaption = objTemp.Caption.OleValue
          IF Trim(strCaption) = Trim("Source Workspace (For Edit) - " &strWorkSpaceName) Then
          
            
    End IF
    End IF
    
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sShortCutToUpload', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Sub

'###################################################################################################################################################################
'###################################################################################################################################################################
'                                  Source WorkSpace Viewer Completed
'###################################################################################################################################################################
'###################################################################################################################################################################






'###################################################################################################################################################################
'****************************************************************************************************************************************************************
'                                          Source Display Veiwer Scripts are Statred.
'****************************************************************************************************************************************************************

'###################################################################################################################################################################
''**************************************************************
' Start    : Execution starts from this procedure. 
'Testcases: Verify all function related SouceDisplayViewer 
' Start Date     : 10/12/2018
'Created by: Chethana S R
'Total Number of testcases: 92
' Last Updated: 
'**************************************************************
'###################################################################################################################################################################
'###################################################################################################################################################################
Sub sOpenSourceDispalyViewer()

  On Error Resume Next
  Dim objEdgeMDI,strTemp,objTemp
  Delay 2000 , "Please Wait"
  
  'Open Source Workspace Viewer
  Set objEdgeMDI = Sys.Process("EdgeClient")
    If objEdgeMDI.Exists then
      strTemp = "WPFObject(""TextBlock"", ""Source"", 1)"
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
      If objTemp.Exists = False then      
        strTemp="WPFObject(""ContentControl"", ""Source"", 1)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        If objTemp.Exists = True then
          objTemp.Click
          Delay 5000,"Please wait Source window is opening..."
          Call sEdgeProcessor
          log.Message "Opening Source Workspace.."
        End If
      Else
        log.Message "Source Window is already Opened.."            
     End If  
  End If
  
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sOpenSourceDispalyViewer', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

''**************************************************************

Sub sResult(sTestData, Status,TestCaseResult)

  If Ucase(Status) = Ucase("Pass") Then 
   strTCRemarks = strTCRemarks & sTestData &" Pass"   
  Else 
    strTCRemarks = strTCRemarks & sTestData &" Fail"    
  End If 
  
  If Ucase(TestCaseResult) = Ucase("Required") then
    strTestCaseResult="PASS"
  Else
    strTestCaseResult="FAIL" 
  end If
  
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sResult', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub
''**************************************************************

'Select Row Test
Sub sSelectRow(strParameters)
'Sub sSelectRow()

 On Error Resume Next
 'strEnvi = "Edge ( US Integration )" 
  
  Call sOpenSourceDispalyViewer()
  Call sEdgeProcessor
  Delay "3000", "Please Wait...."
  
   strSource_Name=getSplitValue(strParameters,"SOURCE")
   'strSource_Name = "Test"
   
  
    strTemp="WPFObject(""SourceTreeListView"")"
    Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    strTemp="WPFObject(""SourceTreeControl"")"
    Set objGridSourceTree=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    Delay 3000,"Pls Wait.."
    
    ''Selecting Country Name
    intTotNodeCnt=objGridControl.Nodes_2.Count
    
    For intI=0 to intTotNodeCnt-1     
      If Ucase(objGridControl.Nodes_2.Item(intI).Content.Description) = Ucase(strSource_Name) then
           objGridControl.Nodes_2.Item(intI).ExpandAll
           intRow=GridControl.Nodes_2.Item(intI).get_RowHandle            
            Call objGridControl.ClearSelectionCore
            Call objGridControl.FocusViewAndRow(objGridControl,intI)
            Call objGridControl.SetFocusOnCurrentItem
            Call objGridControl.SelectRowCore(intI) 
            DescText = intI  
            'msgbox DescText     
          Exit For
        End If
    Next
   sSelectRow = intI
   
   
   
  If Err.Number > 0 Then
    Log.Warning("Error in 'sSelectRow', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub


'###################################################################################################################################################################

'Testcase :TC_SOURCE01 :Verify fields displayed in the source display viewer
'Testcase :TC_SourceWorkspace_7: Check for the fields in the source workspace
Sub sSourceAttributes(strParameters)

 On Error Resume Next  
 Dim  IntI, strTemp , objGridControl, IntCount, strColumnHeader, ColumnHeader
 IntCount = 0 
 
 Call sOpenSourceDispalyViewer()
 strWindow= getSplitValue(strParameters,"Window")
 Delay 2000
 
  strTemp = "WPFObject(""SourceTreeControl"")"
  Set objGridControl =  Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
 
  For IntI = 0 to 19
    strFiled = "Column" & CStr(IntI)
    strColumnHeader= getSplitValue(strParameters,strFiled)
    ColumnHeader = objGridControl.Columns_2.Item(IntI).Header
    If Ucase(Trim(ColumnHeader))= Ucase(Trim(strColumnHeader)) Then
       strTCRemarks = strTCRemarks &  "<br />" & "'"& ColumnHeader & "' is displayed"
       IntCount = IntCount+1 
    End If
  Next
  
  If IntCount = 20  Then 
    strTCRemarks = strTCRemarks &  "<br />" &  "<br />" &  strWindow &" Window displayed all Attributes correctly"
    strTestCaseResult="PASS" 
  Else
    strTCRemarks = strTCRemarks &  "<br />" &  "<br />" &  strWindow &" Window has not displayed all Attributes correctly"
    strTestCaseResult="FAIL"     
  End If
  
  Set objGridControl = Nothing 
  
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sSourceAttributes', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
  
End Sub

'###################################################################################################################################################################

'Testcase :TC_SOURCE02 :Verify fields and check the fields are uneditable
Sub sCheckEditableFiled(strParameters)
'Sub sCheckEditableFiled()

  On Error Resume Next
  Dim ArrLable(20), IntI, IntJ
  Call sOpenSourceDispalyViewer()
  IntCount = 0
'  'strEnvi = "Edge ( US Integration )" 

 IntRowCnt =  sSelectRow(strParameters)
 'Call sGridSelection(strParameters)
 
 strTemp="WPFObject(""SourceTreeListView"")"
 Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
 Set ObjCellEdit = objGridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", IntRowCnt).WPFObject("CellsControl", "", 1)
    
  
  Set ObjCellEdit = objGridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", IntRowCnt).WPFObject("CellsControl", "", 1)
  
  For IntI = 1 to 10
     ArrLable(IntI) = ObjCellEdit.WPFObject("LightweightCellEditor", "", IntI).WPFObject("InplaceBaseEdit", "", 1).EditMode     
  Next
  Call objGridControl.Drag(650, 489, 672, 1)
  Delay "8000", "Please Wait...."
  
  
  ArrLable(11)= ObjCellEdit.WPFObject("LightweightCellEditor", "", 11).IsEditorVisible
  ArrLable(12)= ObjCellEdit.WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).EditMode   
  ArrLable(13)= ObjCellEdit.WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).EditMode   
  ArrLable(14)= ObjCellEdit.WPFObject("LightweightCellEditor", "", 2).WPFObject("InplaceBaseEdit", "", 1).EditMode   
  ArrLable(15)= ObjCellEdit.WPFObject("LightweightCellEditor", "", 3).WPFObject("InplaceBaseEdit", "", 1).EditMode   
  ArrLable(16)= ObjCellEdit.WPFObject("LightweightCellEditor", "", 13).WPFObject("InplaceBaseEdit", "", 1).EditMode   
  ArrLable(17)= ObjCellEdit.WPFObject("LightweightCellEditor", "", 14).WPFObject("InplaceBaseEdit", "", 1).EditMode   
  ArrLable(18)= ObjCellEdit.WPFObject("LightweightCellEditor", "", 15).WPFObject("InplaceBaseEdit", "", 1).EditMode   
  ArrLable(19)= ObjCellEdit.WPFObject("LightweightCellEditor", "", 7).WPFObject("InplaceBaseEdit", "", 1).EditMode   
  
  For IntJ = 1 to 19   
    If Ucase(ArrLable(IntJ)) = Ucase("InplaceInactive")   Then 
      IntCount = IntCount+1
    End If      
  Next
  
  If ArrLable(11)= False Then 
    IntCount = IntCount+1
  End IF
  
  
    If IntCount = 19 Then 
      strTCRemarks = "The fields are not Editable"
      strTestCaseResult="PASS" 
      Call sCloseSWV()  
    Else
       strTCRemarks = "The fields are  Editable"
       strTestCaseResult="FAIL"  
       Call sCloseSWV()   
    End IF
    
    objGridControl = Nothing 
    ObjCellEdit = Nothing 
  
   If Err.Number > 0 Then
    Log.Warning("Error in 'sCheckEditableFiled', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
    
End Sub

'###################################################################################################################################################################
'Testcase :TC_SOURCE03 :Verify checkboxes are shown for these fields "Edit","Schedule Edit","Is Publication"

Sub sVerifyCheckBox(strParameters)
'Sub sVerifyCheckBox()
    On Error Resume Next
    
    Dim ArrLable(3),IntJ ,IntCnt
    IntCnt = 0  
    IntJ= 0   
    Call sOpenSourceDispalyViewer()
    'strParameters= "Test"
    Call sSelectRow(strParameters)
   
    strTemp="WPFObject(""SourceTreeListView"")"
    Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    Set ObjCellEdit = objGridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", DescText).WPFObject("CellsControl", "", 1)
     For IntI = 4 to 6
      ArrLable(IntJ) = ObjCellEdit.WPFObject("LightweightCellEditor", "", IntI).WPFObject("InplaceBaseEdit", "", 1).DisplayText  
      If InSTR(Ucase(ArrLable(IntI)),Ucase("Checked"))> 0 Then 
       IntCnt = IntCnt+1 
       IntJ+1    
      End If   
    Next
  
   If IntCnt = 3 Then 
    strTCRemarks = "The checkboxes are displayied for these fields 'Edit','Schedule Edit','Is Publication'"
    strTestCaseResult="PASS" 
    Call sCloseSWV() 
  Else
     strTCRemarks = "The checkboxes are not displayied for these fields 'Edit','Schedule Edit','Is Publication'"
     strTestCaseResult="FAIL"
     Call sCloseSWV()    
  End IF   
  
   objGridControl = Nothing 
    ObjCellEdit = Nothing  
    
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sVerifyCheckBox', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'###################################################################################################################################################################
'Testcase :TC_SOURCE04 :Verify 'Source Type' field for  levels > 2

Sub sSourceTypeForLevel2(strParameters)
'Sub sSourceTypeForLevel2()

  On Error Resume Next
  Call sOpenSourceDispalyViewer()
  Delay 2000
  Call sSelectRow(strParameters)
  'sHeader=getSplitValue(strParameters,"Header") 
  
  
  
'  strSource_Name=getSplitValue(strParameters,"SOURCE")     
'  strLevel2src_Name=getSplitValue(strParameters,"QCNAME") 
'  strSource_Name="Test"
'  strQC_Name="Automation_Source03"
'  strLevel2src_Name = "Automation_Source03"
'  strWorkspace_Name="DM"
'  strEnvi = "Edge ( US Integration )" 

  
  'Select required Source name and level2 source
   Call sFindtree(strParameters,"Source")
   Call sCellCheck(strParameters, "Source Type")
   
  If Err.Number > 0 Then
    Log.Warning("Error in 'sSourceTypeForLevel2', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Sub
'###################################################################################################################################################################
'Testcase :TC_SOURCE05 :Verify 'Source Nature' field for  level2
Sub sSourceNatureForLevel2(strParameters)

  On Error Resume Next
  Call sOpenSourceDispalyViewer()
  Delay 2000
  Call sSelectRow(strParameters)
  Call sFindtree(strParameters,"Source")
  Call sCellCheck(strParameters, "Source Nature")
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sSourceNatureForLevel2', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
  
End Sub
'###################################################################################################################################################################
'Function to verify Source Type and Source Nature

Sub sCellCheck(strParameters, sHeader)

  On Error Resume Next

  strSource_Name=getSplitValue(strParameters,"SOURCE")''Source Name
  strQC_Name=getSplitValue(strParameters,"QCNAME")''QC Name
  strWorkspace_Name=getSplitValue(strParameters,"WORKSPACE")''Workspace Name 
 
    strDesc1=aqDateTime.Now
    strDesc2=aqDateTime.Now
    strDate = Day(Date) & " "& Monthname(Month(date),true)&" " &Year(date)
    strDate = Day(Date) & " "& Monthname(Month(date),true)&" " &Year(date)
    strDate1 = Split(Now , " ")
    strWrkSpaceDate = strDate & " "& strDate1(1) & " "&  strDate1(2)
    DescText=Replace(strDesc1,"/","-")
    DescText=Replace(DescText,":","_")
    
    'Click on New workspace button 
    strTemp="WPFObject(""ContentControlEx"", ""New Workspace"", 2)"
    Set objNewWorkspace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    If objNewWorkspace.Exists = True then
      objNewWorkspace.Click
      strTemp="WPFObject(""ContentControlEx"", ""Open For Edit (Source)"", 2)"
      Set objopenforEdit=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objopenforEdit.Exists then
          objopenforEdit.Click            
      End If
       
    ' ''Waiting for Workspace Name prompt
      strTemp1="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
      Set objNewWrkSpaceName=Sys.Process("EdgeClient").WaitChild(strTemp1,50000)
      If objNewWrkSpaceName.Exists = True then
      strTemp="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
      Set objNewWrkSpace_Name=Sys.Process("EdgeClient").WaitChild(strTemp,60000)
        If objNewWrkSpace_Name.Exists = True then
          strTemp="WPFObject(""ChangeNameTextEdit"")"
          ''Entering Workspace Name
          Set objNewWrkSpace_Txtbox=objNewWrkSpace_Name.FindChild("Name",strTemp,9,True)
            If objNewWrkSpace_Txtbox.Exists = True then
              objNewWrkSpace_Txtbox.Click
              objNewWrkSpace_Txtbox.Text=DescText             
              ''Clicking on Ok Button 
              strTemp="WPFObject(""OkButton"")"
              Set objNewWrkSpace_okbtn=objNewWrkSpace_Name.FindChild("Name",strTemp,9,True)
              If objNewWrkSpace_okbtn.Exists = True then
                objNewWrkSpace_okbtn.Click
                'Delay 5000,"Please wait..."
              End If
            End If
        End If
      End if
    End If
    

  Select Case sHeader
    Case "Source Type"
        IntPublication = 5
        IntSourceType = 8  
    Case "Source Nature" 
        IntPublication = 5
        IntSourceType = 9
  End Select 
  
    ''WorkSpace Edit Window
    strTemp="WPFObject(""LayoutPanel"", """", 2)"
    Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WaitChild(strTemp,15000) 
    If objTemp.Exists then
        Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl").WPFObject("SourceTreeListView")
        Set GridSourceTree=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl")
     
        ''Expanding First Node in Tree      
        intTotNodeCnt=GridControl.Nodes_2.Count  
        For intI=0 to intTotNodeCnt-1         
          If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
            GridControl.Nodes_2.Item(intI).ExpandAll
            Delay 5000
            intRow=GridControl.Nodes_2.Item(intI).get_RowHandle
            GridControl.Keys "^[Home]"
            Call GridControl.ClearSelectionCore
            Call GridControl.FocusViewAndRow(GridControl,intRow)
            GridControl.SetFocusOnCurrentItem
            Call GridControl.SelectRowCore(intRow)           
            GridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intRow+1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", IntPublication).WPFObject("InplaceBaseEdit", "", 1).Click
            GridControl.Keys("[Tab][Tab][Tab][Tab]")           
            GridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intRow+1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", IntSourceType).WPFObject("InplaceBaseEdit", "", 1).Click
            Delay 3000
            Set objPopUp = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("PopupBorderControl", "", 1)
              If sHeader = "Source Type" OR sHeader = "Source Nature" Then 
              If objPopUp.Exists = False Then 
                 blnLevel1=False  
              End If              
              Exit For
            End If
          End If
        Next

        
        ' Selecting Second Level 
        
         ''Expanding Second Node in Tree
        intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
        For intJ=0 to intTotNodeCnt-1
          If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strQC_Name) then
            GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
            Delay 2000
            intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
            GridControl.Keys "^[Home]"
            Call GridControl.ClearSelectionCore
            Call GridControl.FocusViewAndRow(GridControl,intRow)
            GridControl.SetFocusOnCurrentItem
            Call GridControl.SelectRowCore(intRow)        
            GridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intRow+1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", IntSourceType).WPFObject("InplaceBaseEdit", "", 1).Click
'            Call sEdgeProcessor()
'            GridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intRow+1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", IntSourceType).WPFObject("InplaceBaseEdit", "", 1).Click
            Set objPopUp = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("PopupBorderControl", "", 1)
            If sHeader = "Source Type" Then 
              If objPopUp.Exists = False then 
                 blnLevel2=False  
              End If 
            Elseif sHeader = "Source Nature" Then 
                If objPopUp.Exists = False then 
                   blnLevel2=False 
                Else 
                   blnLevel2=True                  
                   Sys.Keys("[Esc]")
                   log.Message "'Source Nature' field is shown only for level2"
                   Exit For    
                End If 
              End If 
            Exit For
          End If
        Next
        
        myCount=0
        'Selecting Third Level 
         intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
        For intK=0 to intTotNodeCnt-1         
            intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
            Call GridControl.ClearSelectionCore
            Call GridControl.FocusViewAndRow(GridControl,intRow)
            GridControl.SetFocusOnCurrentItem
            Call GridControl.SelectRowCore(intRow)        
            GridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intRow+1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", IntSourceType).WPFObject("InplaceBaseEdit", "", 1).Click
            Call sEdgeProcessor()
            GridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intRow+1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", IntSourceType).WPFObject("InplaceBaseEdit", "", 1).Click
            Set objPopUp = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("PopupBorderControl", "", 1)
            If sHeader = "Source Type" Then             
              If objPopUp.Exists Then                  
                 blnLevel3=True 
                 log.Message "'Source Type' field is shown only for levels > 2"
                 Sys.Keys("[Esc]")
                  Exit For                      
              Else 
                   blnLevel3=False                 
              End If  
            ElseIF sHeader = "Source Nature" Then 
              If objPopUp.Exists = False then 
                 blnLevel3=False    
                 Exit For
              End If
            End If                         
        Next    
    End If
   
    If sHeader = "Source Type"And  blnLevel1 = False And blnLevel2= False And  blnLevel3= True Then
      strTCRemarks = " 'Source Type' field is shown only for levels > 2" 
      strTestCaseResult="PASS"
      Call sCloseSWV() 
      Call sCloseSWV() 
      Call SourceWorkSpacevwr()
    ElseIf  sHeader = "Source Nature" And  blnLevel1 = False And blnLevel2= True And  blnLevel3= False Then
      strTCRemarks = " 'Source Nature' field is shown only for Level2" 
      strTestCaseResult="PASS"
      Call sCloseSWV() 
      Call sCloseSWV() 
      Call SourceWorkSpacevwr()
    Else
      strTCRemarks = " 'Source Nature' And 'Source Type' field are not Showung as expected" 
      strTestCaseResult="FAIL"
      Call sCloseSWV() 
      Call sCloseSWV() 
      Call SourceWorkSpacevwr()
    End If

  If Err.Number > 0 Then
    Log.Warning("Error in 'sCellCheck', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub
'###################################################################################################################################################################
'Testcase :TC_SOURCE06 and TC_SOURCE07  :Verify Find Textbox and Refresh button in Source Dispaly Viewer
Sub sFindAndRefresh(strParameters)
'Sub sFindAndRefresh()

  Dim objGridControl
  'strEnvi = "Edge ( US Integration )" 
  
  On Error Resume Next
 
  Call sSelectRow(strParameters) 
  
  strSearchString = getSplitValue(strParameters,"SEARCHSTRING") 
  'strcategory =  getSplitValue(strParameters,"CATEGORY") 
  
'  strSearchString = "Automation" 
'  strcategory = "TC_SOURCEWV_06"

  Dealy 2000 , "Please Wait "
  Set objGridControl = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("WaitControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceTreeControl").WPFObject("SourceTreeListView")
  Aliases.EXCEL3.wndXLMAIN.Minimize
 'Verify FindText Box
    If objGridControl.Exists Then
    'Enter the Search Text
      objGridControl.Set_searchString("")
      objGridControl.Set_searchString(strSearchString)
      Sys.Keys("[Enter]")
      Delay 2000,  "Please Wait" 
      objGridControl.FocusSearchPanel      
      Delay 2000,  "Please Wait"  
      strString= objGridControl.get_SearchString    
      strSearchText = objGridControl.SearchControl.SearchText
      
      'Verify the Search text with displayed text
      If Ucase(strSearchText)= Ucase(strSearchString) And  Ucase(strSearchText)= Ucase(strString) Then        
        strTCRemarks = "Entered description  " & strSearchString & " is searched"
        strTestCaseResult="PASS" 
        ' Verify Refresh Button   
        objGridControl.set_SearchString("")
        Sys.Keys("[Enter]")
        Delay 2000,  "Please Wait"   
        StrRefresh = "WPFObject(""ContentControlEx"", ""Refresh"", 2)"  
        Set objRefresh=Sys.Process("EdgeClient").FindChild("Name",StrRefresh,60,true)
        If objRefresh.Exists Then        
            objRefresh.Click  
            Call sEdgeProcessor()
            Delay 5000, "Please wait Source WV is refreshing"
            strTemp = "WPFObject(""LoadingWaitControl"", """", 1)"
            Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,60,true)        
            If objTemp.Exists = False Then
              strTCRemarks = strTCRemarks & "<br />" & "Source Module is refreshed"
              strTestCaseResult="PASS"             
            Else 
              strTCRemarks =strTCRemarks & "<br />" & "Source Module is not refreshed"
              strTestCaseResult="FAIL"
            End If   
         End If
      Else
        strTCRemarks = "Entered description " & strSearchString & " is not searched"
        strTestCaseResult="FAIL"  
      End If
    End If
    
   If Err.Number > 0 Then
    Log.Warning("Error in 'sFindAndRefresh', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub
'###################################################################################################################################################################
'Testcase :TC_SOURCE09  :Verify options in  "New Workspace"
Sub sNWSoptions(strParameters)
'Sub sNWSoptions()

  Dim objNWS,strOFE ,strOFV,strOFESS, strOFVSS, IntI
  Dim arrNWS(4), strNWS(4)  
  'strEnvi = "Edge ( US Integration )" 
  
  On Error Resume Next
  
  'Open source module
  Call sOpenSourceDispalyViewer()
  Call sEdgeProcessor()
 
  strOFV  = getSplitValue(strParameters,"OPENFORVIEW")
  strOFE = getSplitValue(strParameters,"OPENFOREDIT")
  strOFVSS = getSplitValue(strParameters,"OPENFORVIEWSS")
  strOFESS= getSplitValue(strParameters,"OPENFOREDITSS")

  
  'Click on New Workspace button 
  strTemp="WPFObject(""ContentControlEx"", ""New Workspace"", 2)"
  Set objNWS=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  strNWS(1) = "WPFObject(""ContentControlEx"", ""Open For View (Source)"", 2)"
  strNWS(2) = "WPFObject(""ContentControlEx"", ""Open For Edit (Source)"", 2)"
  strNWS(3) = "WPFObject(""ContentControlEx"", ""Open For View (Source Schedule)"", 2)"
  strNWS(4) = "WPFObject(""ContentControlEx"", ""Open For Edit (Source Schedule)"", 2)"

 If objNWS.Exists = True then
      objNWS.Click
       Set objNWS = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1)
      'Verify the menu under new workspace button
      For IntI = 1 to 4
          Set objTemp = objNWS.WPFObject("BarItemLinkInfo", "", IntI).FindChild("Name",strNWS(IntI), 10, True)
           arrNWS(IntI) = objTemp.WPFControlText           
      Next  
  Else 
        strTCRemarks = "New Wokspace button does not exit"
        strTestCaseResult="FAIL" 
        Exit Sub    
  End IF
  
  
  If  Ucase(arrNWS(1))=Ucase(strOFV) And Ucase(arrNWS(2))= Ucase(strOFE) And Ucase(arrNWS(3))=Ucase(strOFVSS) And Ucase(arrNWS(4)) = Ucase(strOFESS) Then 
      strTCRemarks = "All Options are shown"
      strTestCaseResult="PASS"
      Call sCloseSWV()
 
  Else
     strTCRemarks = "All Options are not shown as expected"
     strTestCaseResult="FAIL" 
     Call sCloseSWV()  
  End IF
  
  Set objNWS= Nothing
  
  
  If Err.Number > 0 Then
   Log.Warning("Error in 'sNWSoptions', Error Description : " & Err.Description &" Error Number : "& Err.Number)
   Err.Clear
 End If
  
End Sub

'###################################################################################################################################################################
'Testcase :TC_SOURCE10, 11, 12, 13,  :Verify all buttons under New Workspace button
Sub sOpenForEditSource(strParameters)
'Sub sOpenForEditSource()

  Dim objTemp, strTemp
  'strEnvi = "Edge ( US Integration )"
  Delay 3000, "Please Wait"
  DescText=Replace(aqDateTime.Now,"/","-")
  DescText=Replace(DescText,":","_") 

  
  On Error Resume Next
 
'------------------------------------------------------------------------------------------------------------------------------------------------------------- 
    'Assigning the Variable 
  strRequiredButton = getSplitValue(strParameters,"REQUIREDBUTTON")'Required Button
  strCategory=getSplitValue(strParameters,"CATEGORY")
  strMyCategory=getSplitValue(strParameters,"MyCATEGORY")
  strSource_Name=getSplitValue(strParameters,"SOURCE")''Level1 Source 
  strLevel2src_Name=getSplitValue(strParameters,"Level2Source")''Level2 Source 
  strEditName = getSplitValue(strParameters,"EDITNAME")
  'strWorkspace_Name=getSplitValue(strParameters,"WORKSPACE")''Workspace Name  'Get the Required Testcase number
  
  

'  strCategory = "TC_SOURCE0"
'  strRequiredButton = getSplitValue(strParameters,"REQUIREDBUTTON")'Required Button
'  strCategory=getSplitValue(strParameters,"CATEGORY")

'------------------------------------------------------------------------------------------------------------------------------------------------------------- 
   

      IF Ucase(Trim(strMyCategory))= Ucase(Trim("TC_SOURCE44")) Then  
           
          'Rightclick options for NewWorkspace Button         
         Set objNW = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 2).WPFObject("BarSubItemLinkControl", "", 1).WPFObject("ContentControlEx", "New Workspace", 2)
          objNW.Click
           'Click on strRequiredButton
         Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strRequiredButton,50,True)
         If objTemp.Exists Then  
           objTemp.Click         
         End If  
       Else             
          'Select Test Country 
          Call sSelectRow(strParameters) 
  
          'Select Lavel 2 Source under Test Country
          Call sFindtree(strParameters,"Source")
          
          'Click on New Workspace button 
          Call sOpenForEditOrView(strParameters) 
     End If

    
    
  
  'Verify Edit Options
  If Ucase(strCategory) = Ucase("TC_SOURCE10") Or Ucase(strCategory) = Ucase("TC_SOURCE11") Or Ucase(strCategory) = Ucase("TC_SOURCE13")then 
    DescText=Replace(aqDateTime.Now,"/","-")
    DescText=Replace(DescText,":","_")  
     strTemp="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
     Set objTemp=Sys.Process("EdgeClient").WaitChild(strTemp,50000)
      If objTemp.Exists = True then
       strTemp="WPFObject(""ChangeNameTextEdit"")"
       Set objTemp1 = objTemp.FindChild("Name",strTemp,9,True)
       If objTemp1.Exists Then 
       'Provide workspace name
            objTemp1.Click
            ' msgbox DescText 
            objTemp1.Text = DescText 
       If Ucase(strCategory) = Ucase("TC_SOURCE10") Or  Ucase(strCategory) = Ucase("TC_SOURCE13") Then 
       'Clickon OK button 
            strTemp="WPFObject(""OkButton"")"
            Set objTemp1 = objTemp.FindChild("Name",strTemp,9,True)
            If objTemp1.Exists = True then
                objTemp1.Click
                Call sEdgeProcessor 
               
                strTemp =  "WPFObject(""TextBlock"", ""Source "&strEditName&" (For Edit) - " & DescText & """, 1)"                
                Set objTemp1 = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).WaitChild(strTemp, 50000)
                If Ucase(objTemp1.Text) = Ucase("Source "&strEditName&" (For Edit) - "& DescText) then 
                
                  strTCRemarks = strTCRemarks & "<br />" &  "WorkSpace " & DescText &"  is opened "                
                  strTestCaseResult="PASS" 
                  Call sClosePanel2() 
                  Call sCloseSWV()
                  If Ucase(strCategory) = Ucase("TC_SOURCE10") then 
                   Call SourceWorkSpacevwr()
                  End IF
                  If Ucase(strCategory) = Ucase("TC_SOURCE13") then 
                    Call  sSourceScheduleDrop()
                    'Exit Sub 
                  End IF
                Else
                  strTCRemarks = strTCRemarks & "<br />" & "WorkSpace " & DescText &"  is not opened "                 
                  strTestCaseResult="FAIL" 
                  Call sClosePanel2()  
                  Call sCloseSWV()
                  Call SourceWorkSpacevwr()
                End If
            End If
          End If
         If Ucase(strCategory) = Ucase("TC_SOURCE11") then 
            strTemp = "WPFObject(""CancelButton"")"
            Set objTemp1 = objTemp.FindChild("Name",strTemp,9,True)
            If objTemp1.Exists = True then
            'Click on No button
                objTemp1.Click
                strTemp = "WPFObject(""LayoutPanel"", """", 2)"
                Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WaitChild(strTemp,2000)
                If objTemp.Exists = False Then
                  strTCRemarks = strTCRemarks & "<br />" &  "New Workspace has not created"                  
                  strTestCaseResult="PASS"                   
                  Call sCloseSWV()    
                  Exit Sub           
                Else
                  strTCRemarks = strTCRemarks & "<br />" &  "New Workspace has  created"                 
                  strTestCaseResult="FAIL" 
                  Call sClosePanel2()  
                  Call sCloseSWV()                 
                End If
            End If
         End If  
        End If        
     End If
   End If  
   
   'Verify View Options
   
   If Ucase(strCategory) = Ucase("TC_SOURCE09") Then   
        
      'Close the Source Module
       Call sEdgeProcessor
       Call sCloseSWV()
       
        'Select the Level 2 Source 
       Call sGridSelection(strParameters)
       
                                  
            ''Clicking on New Folder
            strTemp="WPFObject(""ContentControlEx"", ""Add Folder"", 2)"
            Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
            If objTemp.Exists = True then
              objTemp.Click
            End If
            
            'Dealy 5000, "Please Wait"
       
         
            
            'Verifying a Text message dispalyed on Message box
            strTemp = "WPFObject(""TextBlock_Message"")"
            Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Workspace").WPFObject("CustomMessageBoxWindow", "Workspace", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 1).WPFObject("DockPanel", "", 1).WaitChild(strTemp, 50000)
               If objTemp.Exists  Then
                strText = objTemp.Text
                If Ucase(strText) = Ucase("You are not allowed to edit an Open For View workspace.") Then 
                  strTemp = "WPFObject(""Button_OK"")"                  
                  Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Workspace").WPFObject("CustomMessageBoxWindow", "Workspace", 1).WPFObject("Grid", "", 1).FindChild("Name", strTemp,50,True)
                    objTemp.Click
                    strTCRemarks = strTCRemarks & "<br />" &  "You are not allowed to edit an Open For View workspace, Message box appeared"                     
                    strTestCaseResult="PASS" 
                    Call sCloseSWV() 
                    'Exit For
                Else
                    strTCRemarks = strTCRemarks & "<br />" &  "You are not allowed to edit an Open For View workspace, Message box is not appeared"
                    strTestCaseResult="FAIL" 
                    Call sCloseSWV()
                    'Exit For                 
                End If
              End If
            End If
         
        
   If Ucase(strCategory) = Ucase("TC_SOURCE12")Then
  '  Call sCloseSWV()
    'Close the Source Module
       Call sEdgeProcessor
       Call sCloseSWV()       
      
  'Select the Level 3 Source 
     Call sGridSelection(strParameters)
     Call sEdgeProcessor()
     
   strTemp = "WPFObject(""InplaceBaseEdit"", """", 1)"
   Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("Grid", "", 1).WPFObject("SourceSeriesGridControl").WPFObject("TableView", "", 1).WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 2).WaitChild(strTemp, 5000)
     If objTemp.Exists Then 
        objTemp.Click
        Call sEdgeProcessor
        strTemp = "WPFObject(""ComboBoxEdit"", """", 1)"
        'Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("Grid", "", 2).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 7).WPFObject("BarEditItemLinkControl", "", 1).WPFObject("ContentControlEx", "", 1).WPFObject("ComboBoxEdit", "", 1)
        Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 70, True)
        If objTemp.Exists = True then
          objTemp.set_Text("Final")
          Call sEdgeProcessor
        End If
      
        strTemp ="WPFObject(""ContentControlEx"", ""Add"", 2)"
        'Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 2).WPFObject("Grid", "", 2).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).WPFObject("BarControl", "", 1).WPFObject("BarItemLinkInfo", "", 1).WPFObject("BarButtonItemLinkControl", "", 1).FindChild("Name", strTemp, 60, True)
        Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 70, True)
        If objTemp.Enabled = False Then 
            strTCRemarks = strTCRemarks & "<br />" &  "Add Button is Disabled, cannot edit Source Schedule in View only mode"                     
            strTestCaseResult="PASS" 
            Call sCloseSWV() 
        Else      
            strTCRemarks = strTCRemarks & "<br />" &  "Add Button is Enabled, can edit Source Schedule in View only mode"                     
            strTestCaseResult="FAIL" 
            Call sCloseSWV()           
        End If
    End If 
   End If
   Set objTemp = Nothing 
   Set objTemp1 = Nothing
   
  If Err.Number > 0 Then
    Log.Warning("Error in 'sOpenForEditSource', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If 
End Sub 

'###################################################################################################################################################################
'Click on any button under New Workspacce Button
Sub sOpenForEditOrView(strParameters)

  Dim objTemp , objTemp1, strTemp
  On Error Resume Next
  
  
  strRequiredButton = getSplitValue(strParameters,"REQUIREDBUTTON")
  'strMyCategory=getSplitValue(strParameters,"MyCATEGORY")
  
  'strRequiredButton = "WPFObject(""ContentControlEx"", ""Open For View (Source)"", 2)"
  
'Click on NewWorkspace Button  
  strTemp="WPFObject(""ContentControlEx"", ""New Workspace"", 2)"
  Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  If objTemp.Exists Then 
      objTemp.Click
      'Click on strRequiredButton
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strRequiredButton,50,True)
       If objTemp.Exists Then  
         objTemp.Click         
       End If         
  End If
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sOpenForEditOrView', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
  
End Sub
'---------------------------------------------------------------------------------------------------------------------------------------------------------------

'Function to Drop Source Scedules

Sub sSourceScheduleDrop()

On Error Resume Next
  
  Dim strTemp, objTemp , objGridControl
  
  'Click on Source Workspace Vierer Button  
  strTemp = "WPFObject(""TextBlock"", ""Source Workspace Viewer"", 1)"  
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)  
  If objTemp.Exists = False Then 
      strTemp="WPFObject(""ContentControl"", ""Source Workspace"", 1)"
        Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
        If objTemp.Exists = True then
          objTemp.Click
          Call sEdgeProcessor
          log.Message "Opening Source Workspace.."
        End If
  End If
  
  'Click on Source Scedule button  
  strTemp= "WPFObject(""ContentControlEx"", ""Source Schedules"", 2)"
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  If objTemp.Exists = True then
          objTemp.Click
          Delay 2000          
          log.Message "Source Schdules Window"
  End If
  
  'Drop the Created Workspace
      strTemp="WPFObject(""PendingChangeGridControl"")"
      Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      intRowcnt=objGridControl.wRowCount
       For intI=0 to intRowcnt-1
          Call objGridControl.ClickCell(0,1)
          strTemp="WPFObject(""ContentControlEx"", ""Drop"", 2)"
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
          If objTemp.Exists = True then
            objTemp.Click
          End If
          strTemp="WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Please Confirm."")"
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
          If objTemp.Exists = True then
             objTemp.Click
              Sys.Keys("Y")
             Call sEdgeProcessor          
          End If 
      Next
     Call sCloseSource()
     
  If Err.Number > 0 Then
    Log.Warning("Error in 'sSourceScheduleDrop', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
     
End Sub


'---------------------------------------------------------------------------------------------------------------------------------------------------------------
'Function to select the required Level 
Function sGridSelection(strParameters)
'Function sGridSelection()
  On Error Resume Next
    
  Dim strTemp, objTemp, objGridControl, IntCount(4)
  
  strSource_Name=getSplitValue(strParameters,"SOURCE")
  strLevel2src_Name=getSplitValue(strParameters,"Level2Source")
  strLevel3src_Name=getSplitValue(strParameters,"WORKSPACE")
  strCategory=getSplitValue(strParameters,"CATEGORY")
  strLevel = getSplitValue(strParameters,"LEVEL")
  strMultiLevel = getSplitValue(strParameters,"MultiLevel")
  strButton = getSplitValue(strParameters,"Button")
  strLayoutDV = getSplitValue(strParameters,"LayoutDV")
  Delay 5000 
  
  
'   strEnvi = "Edge ( US Integration )" 
'   strSource_Name="Test"
'   strLevel2src_Name= "Automation_Level2FirstFolder"
'   strMultiLevel= "Yes"
  ' strLevel2src_Name="PRT222"
   
   
   'strTestCase_no = "TC_SOURCE_PRT15"
'   'strLevel3src_Name="PRT444"
'   strLevel="Third"

  Delay 2000, "Please Wait"
  
 ' strTemp="WPFObject(""SourceTreeListView"")" 
  
  If strLayoutDV = "Yes" Then
      strTemp =  strButton
    Else
      strTemp="WPFObject(""SourceTreeListView"")"  
    End IF   
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  If objTemp.Exists Then
      Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)  
  End If 
  
  
  If strLayoutDV = "Yes" Then
   strTemp = "WPFObject(""LayoutTreeView"")"
  Else
    strTemp = "WPFObject(""SourceTreeView"")"
  End If    
  
      
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  If objTemp.Exists Then
      Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  End If 
  
  'Expanding First Node
   intTotNodeCnt=objGridControl.Nodes_2.Count  
   For intI=0 to intTotNodeCnt-1         
     If Ucase(objGridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
        objGridControl.Nodes_2.Item(intI).ExpandAll               
         intRow=objGridControl.Nodes_2.Item(intI).get_RowHandle
        objGridControl.Keys "^[Home]"
        Call objGridControl.ClearSelectionCore
        Call objGridControl.FocusViewAndRow(objGridControl,intRow)
        objGridControl.SetFocusOnCurrentItem
        Call objGridControl.SelectRowCore(intRow)
        'Call objGridControl.SelectRowCore(intRow) 
        IntCount(0) = intI
        Delay 200           
      Exit For
    End If
   Next
   
   
'   If strLevel2src_Name = "" then 
'    sGridSelection = IntCount
'    Exit Function 
'   End If
'  
  'Selceting the Second Level   
   intTotNodeCnt=objGridControl.Nodes_2.Item(intI).Nodes.Count
   For intJ=0 to intTotNodeCnt-1
   If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) then        
        objGridControl.Nodes_2.Item(intI).ExpandAll       
        intRow=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
        'intRow1=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ+1).Nodes.Item(0).get_RowHandle
        objGridControl.Keys "^[Home]"
        Call objGridControl.ClearSelectionCore
        Call objGridControl.FocusViewAndRow(objGridControl,intRow)
        objGridControl.SetFocusOnCurrentItem
        Call objGridControl.SelectRowCore(intRow)
         If  Ucase(Trim(strMultiLevel)) = Ucase(Trim("Yes"))Then  
            intRow=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ+1).get_RowHandle
            SYS.Keys("^") 
            Call objGridControl.SelectRowCore(intRow)           
         End If             
        IntCount(1) = intJ
        Delay 200     
      Exit For
    End If
   Next
'   
'   If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT15"))Then        
'        SYS.Keys("![Down]")           
'  End If
'   
   
   
  'Selecting the Third Level 
  intTotNodeCnt=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count        
  For intK=0 to intTotNodeCnt-1
    If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel3src_Name) then
      objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).ExpandAll      
          intRow =objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
          objGridControl.Keys "^[Home]"
          Call objGridControl.ClearSelectionCore
          Call objGridControl.FocusViewAndRow(objGridControl,intRow)
          objGridControl.SetFocusOnCurrentItem
          Call objGridControl.SelectRowCore(intRow) 
          IntCount(2) = intK
          Dealy 200       
      Exit For
    End If
   Next
        
   sGridSelection = IntCount
   Err.Clear
   If Err.Number > 0 Then
    Log.Warning("Error in 'sGridSelection', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Function

'---------------------------------------------------------------------------------------------------------------------------------------------------------------

'###################################################################################################################################################################

'Testcase :TC_SOURCE14  :Verify New Source Orgonization Button in display Viewer.

Sub sNSOButton(strParameters)

  Dim objTemp , strTemp, arrField(11)
  On Error Resume Next

  strCategory=getSplitValue(strParameters,"CATEGORY")
  
  
  'Open source module
  Call sOpenSourceDispalyViewer()
  Call sEdgeProcessor()
  

'Verify New Source Orgonization Button is enabled or not for level1 Source
  
   If Ucase(strCategory) = Ucase("TC_SOURCE14")Then   
   
       'Select first Level 
       Call sGridSelection(strParameters)
  
      strTemp = "WPFObject(""ContentControlEx"", ""New Source Organization"", 2)"
      Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
    If objTemp.IsEnabled= True then 
       strTCRemarks = strTCRemarks & "<br />" &  "New Source Orgonization Button is enabled for level1 source"                     
       strTestCaseResult="PASS"
    Else 
       strTCRemarks = strTCRemarks & "<br />" &  "New Source Orgonization Button is Disabled for level1 source"                     
       strTestCaseResult="FAIL" 
    End If
   End If
   
'Verify New Source Orgonization Button is enabled or not for any source other than level1 Source
  
   If Ucase(strCategory) = Ucase("TC_SOURCE15")Then   
      
       'Select first Level 
       Call sGridSelection(strParameters)
  
      strTemp = "WPFObject(""ContentControlEx"", ""New Source Organization"", 2)"
      Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
    If objTemp.IsEnabled= False then 
       strTCRemarks = strTCRemarks & "<br />" &  "New Source Orgonization Button is Diabaled for greater then level1 source"                     
       strTestCaseResult="PASS"
    Else 
       strTCRemarks = strTCRemarks & "<br />" &  "New Source Orgonization Button is also enabled for greater then level1 source"                     
       strTestCaseResult="FAIL" 
    End If
   End If
   Set objTemp = Nothing
   
  If Err.Number > 0 Then
    Log.Warning("Error in 'sNSOButton', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'###################################################################################################################################################################

'Testcase :TC_SOURCE16-26  :Verify All fields in New Source Level1 Window

Sub sNSOFieldDescription(strParameters)

  
  Dim objTemp , objTemp1, strTemp, arrField(11)
  On Error Resume Next

  
  strSource_Name=getSplitValue(strParameters,"SOURCE")
  strCategory=getSplitValue(strParameters,"CATEGORY")
  
  'Open source module
  Call sOpenSourceDispalyViewer()
  Call sEdgeProcessor()
  
  'Open New Source Organization Window
  Call sOpenNSO(strParameters)
  
   'Verify Fileds in New Source Organization Window
  strTemp = "WPFObject(""PART_ContainerContent"")"
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  If objTemp.Exists Then 
    If Ucase(strCategory) = Ucase("TC_SOURCE16_17_18_19_20_22_23_24_25_26")Then  
     
    'Verify names of all Feilds in New Source Organization window   
          IntCount = 0 
          For Int1=1 to 10
            strFiled = "Field" & CStr(Int1)
            arrField(Int1)= getSplitValue(strParameters,strFiled)
            
            'Verify the Fields in New Source (Level1) Window
            strTemp = "WPFObject(""Label"", """&arrField(Int1)&""", 1)"
          Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True) 
          If objTemp.Exists Then 
            IntCount = IntCount+1
            blnFlag = True
          End If
           If blnFlag = False then
            strTCRemarks = strTCRemarks &  "<br />" & "<br />"&  arrField(Int1) &"Feild is not available"
            strTCRemarks = strTCRemarks &  "<br />" & "TC_SOURCE16 is Failed"                  
            strTestCaseResult="FAIL"     
           End If
          Next
           If IntCount= 10  then             
             strTCRemarks = "All Fields are Available in New Source (Level1) Window " 
             strTCRemarks = strTCRemarks & "<br />" & "TC_SOURCE16 is Passed"                      
             strTestCaseResult="PASS"
          Else 
             strTCRemarks = strTCRemarks  &  "<br />" & "<br />" & "New Source Orgonization Button is Disabled for level1 source"   
             strTCRemarks = strTCRemarks  &  "<br />" & "TC_SOURCE16 is Failed"                    
             strTestCaseResult="FAIL" 
          End If
          
          'VerifyIntCountIntCount Text Objects in New Source (Level1) Window
          IntNewCount = 0 
          For IntI=1 to 10
            strFiled = "Text" & CStr(IntI)
            arrField(IntI)= getSplitValue(strParameters,strFiled)
            'Verify the text Fields in New Source (Level1) Window
            strTemp = "WPFObject("&arrField(IntI)&")"
            Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True) 
          
            If IntI = 1 Then 
              strText = objTemp.Content              
              If Ucase(strText) = Ucase(strSource_Name) And objTemp.Focusable = False Then 
                 strTCRemarks = strTCRemarks  &  "<br />" & "<br />"&  strSource_Name& " Country Name is diaplayed and its is not editable "                
                 IntNewCount = IntNewCount +1             
               Else
                 strTCRemarks = strTCRemarks  &  "<br />" & "<br />"& strSource_Name& " Country Name is not diaplayed Or/And its is editable " 
               End If
            End If
            
            If IntI= 5  Then 
              strTCRemarks = strTCRemarks & "<br />"
              nCount = 0 
               For IntJ=0 to 5
                  objTemp.set_SelectedIndex(IntJ)
                  strText = objTemp.Text                  
                  If Trim(Ucase(strText))= Trim(Ucase("Association")) Or Trim(Ucase(strText))= Trim(Ucase("CEIC Generated"))_
                      Or Trim(Ucase(strText))= Trim(Ucase("Central Bank")) Or Trim(Ucase(strText))= Trim(Ucase("Company"))_
                      Or Trim(Ucase(strText))= Trim(Ucase("Government"))Or Trim(Ucase(strText))= Trim(Ucase("Stock Exchange")) Then 
                      strTCRemarks = strTCRemarks & "<br />" & "The DropDown Contains:" & strText  
                      nCount = nCount+1
                  End IF
                Next
                  If nCount = 6 then
                    strTCRemarks = strTCRemarks & "<br />"& "Drop Down Contains all Feilds"
                    IntNewCount = IntNewCount +1                   
                  Else
                    strTCRemarks = strTCRemarks & "<br />"& "Drop Down does not Contains all Feilds"                   
                  End If
            End IF
            
            If IntI= 6 Then 
              objTemp.set_IsChecked(True)
              Delay 200
              If objTemp.IsChecked = True then 
                strTCRemarks = strTCRemarks & "<br />" & "<br />"& "Is Official Check box is checked"
                IntNewCount = IntNewCount +1                
              Else 
                strTCRemarks = strTCRemarks & "<br />" & "<br />"& "Is Official Check box is not checked"               
              End IF
            End If

            If IntI= 10  Then
              strSourceName= getSplitValue(strParameters,"SourceFolder")
              strTemp= "WPFObject(""InsertSourceAfterComboEdit"")"
              Set objTemp1 = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
              objTemp1.set_Text(strSourceName)              
              strSelectedText = objTemp1.Text
              strClassName = objTemp.ClrClassName 
              strName =objTemp.WPFControlText
              strCombo = objTemp1.ClrClassName
              If  Ucase(strClassName) = Ucase("CheckEdit") And Ucase(strName) = Ucase("Top") _
                  And Ucase(strCombo) = Ucase("ComboBoxEdit") And Trim(Ucase(strSelectedText)) = Trim(Ucase(strSourceName)) Then 
                strTCRemarks = strTCRemarks & "<br />" & "<br />"& "The Check Box Top and Combobox with all Source Folder options are available "
                IntNewCount = IntNewCount +1
              Else
                strTCRemarks = strTCRemarks & "<br />" & "<br />"& "The Check Box Top Or/And Combobox with all Source Folder options are not available "
               End IF
            End IF
            If IntI = 2 Or IntI = 3 Or IntI = 4 Or IntI = 7 Or IntI = 8 Or IntI = 9 Then 
              If IntI= 2 then 
                strTextFiled = "Source Abbreviation"
              Elseif IntI= 3 then 
                strTextFiled = "Source Description"
              Elseif IntI= 4 then 
                strTextFiled = "Source Description Local"
             Elseif IntI= 7 then 
                strTextFiled = "URL" 
             Elseif IntI= 8 then 
                strTextFiled = "Macro Cap Flag" 
             Elseif IntI= 9 then 
                strTextFiled = "Macro Path"
             End If
             
              objTemp.set_Text(arrField(IntI))
              strText = objTemp.EditValue
              If objTemp.Focusable = True  And Ucase(strText) = Ucase(arrField(IntI)) Then 
                  strTCRemarks =  strTCRemarks  &  "<br />" & "<br />"& "'"& arrField(IntI) & "' Text is Added to " & strTextFiled & " Filed "                  
                  IntNewCount = IntNewCount +1                  
              End If
            End If            
          Next
          If IntCount= 10  then 
             strTemp = "WPFObject(""CancelButton"")"
             Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True) 
             objTemp.Click
             strTCRemarks = strTCRemarks &  "<br />" & "<br />"&  "All Fields are As expected in New Source (Level1) Window " 
             strTCRemarks = strTCRemarks & "<br />"   & "TC_SOURCE17_26 are Passed"                      
             strTestCaseResult="PASS"
          Else 
             strTCRemarks = strTCRemarks &  "<br />" & "<br />"&  "New Source Orgonization Button is Disabled for level1 source"   
             strTCRemarks = strTCRemarks & "<br />"   & "Any of the TC_SOURCE17_26 are Failed"                    
             strTestCaseResult="FAIL" 
          End If
          
    End If
  Else
    strTCRemarks = "New Source Orgonization Button is Disabled for level1 source"                     
    strTestCaseResult="ABORT" 
    Exit Sub 
  End If
  
  Set objTemp = Nothing
  Set objTemp1 = Nothing
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sNSOFieldDescription', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'---------------------------------------------------------------------------------------------------------------------------------------------------------------

Sub sOpenNSO(strParameters)

On Error Resume Next
  
  'Open source module
  Call sOpenSourceDispalyViewer()
  Call sEdgeProcessor()
  
  'Select First Level 
  Call sGridSelection(strParameters)

  
  'click on New Source Organization button   
  strTemp = "WPFObject(""ContentControlEx"", ""New Source Organization"", 2)"
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  If objTemp.Exists Then 
      objTemp.Click
      Delay 500
  Else
    strTCRemarks = "New Source Orgonization Button is Disabled for level1 source"                     
    strTestCaseResult="ABORT" 
    Exit Sub    
  End If
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sOpenNSO', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub
'###################################################################################################################################################################

'Testcase :TC_SOURCE28_29_31 :Validation of all fields in New Source Level1 Window
Sub sNSOValidation(strParameters)

  Dim objTemp , objTemp1, strTemp, arrField(5)
  On Error Resume Next

  
  
    strSource_Name=getSplitValue(strParameters,"SOURCE")
    strCategory=getSplitValue(strParameters,"CATEGORY")
    strFieldName= getSplitValue(strParameters,"FeildName")
    strErrorText= getSplitValue(strParameters,"ErrorText")
    
  'Open source module
  Call sOpenSourceDispalyViewer()
  Call sEdgeProcessor()
  
  'Open New Source Organization Window
  Call sOpenNSO(strParameters)
  
    
    'Enter the Reuired Filed
      Select Case Trim(Ucase(strFieldName))
        Case Trim(Ucase("SourceAbbreviation"))
            For IntI=1 to 5 
              strFiled = "Text" & CStr(IntI)
              arrField(IntI)= getSplitValue(strParameters,strFiled)
              strTemp = "WPFObject("&arrField(IntI)&")"     
              Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
              objTemp.Set_Text("Testing")
              'strErrorText = "'Source Abbreviation cannot be empty. Please fill in.'"
            Next
        Case Trim(Ucase("Description"))
            For IntI=1 to 4 
              strFiled = "Text" & CStr(IntI)
              arrField(IntI)= getSplitValue(strParameters,strFiled)
              strTemp = "WPFObject("&arrField(IntI)&")"     
              Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
              objTemp.Set_Text("Testing")
              'strErrorText = "'Source Description and Description Local cannot be empty. Please fill in.'"
            Next
        Case Trim(Ucase("AllMandatoryFields"))
            For IntI=1 to 3 
              strFiled = "Text" & CStr(IntI)
              arrField(IntI)= getSplitValue(strParameters,strFiled)
              strTemp = "WPFObject("&arrField(IntI)&")"     
              Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
              objTemp.Set_Text("Testing")
              'strErrorText = "'Source Abbreviation, Description and Description Local cannot be empty. Please fill in.'"
            Next        
      End Select
      
      'Click on Save button
       strTemp = "WPFObject(""OkButton"")"
       Set objTemp1= Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
       objTemp1.Click 
     

    strTemp = "WPFObject(""ErrorMsg"")"
    Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
    strText = objTemp.WPFControlText
    
    'Verify Error Message for Validation
    If Ucase(Trim(strText)) = Ucase(Trim(strErrorText)) Then
        strTemp = "WPFObject(""CancelButton"")"
        Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True) 
        objTemp.Click
        strTCRemarks = "'" & strText & "' Error Message Dispalyed"                                    
        strTestCaseResult="PASS"
    Else      
        strTemp = "WPFObject(""CancelButton"")"
        Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True) 
        objTemp.Click
        strTCRemarks = "'" & strText & "' Error Message Dispalyed"                                    
        strTestCaseResult="FAIL"                
    End If
    
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sNSOValidation', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Sub


'###################################################################################################################################################################

'Testcase :TC_SOURCE30 :Check for adding New source
Sub sNSOAddnewSource(strParameters)

  Dim objTemp , objTemp1, strTemp, arrField(10), blnFlag
  On Error Resume Next

      strSource_Name=getSplitValue(strParameters,"SOURCE")
      nIteration=getSplitValue(strParameters,"Iteration")
      blnFlag = False
      strCategory=getSplitValue(strParameters,"CATEGORY")
      
'    strFieldName= getSplitValue(strParameters,"FeildName")
'    strErrorText= getSplitValue(strParameters,"ErrorText")
    
  'Open source module
  Call sOpenSourceDispalyViewer()
  Call sEdgeProcessor()
  
  'Open New Source Organization Window
  Call sOpenNSO(strParameters)
  
    
  'Enter a valid Data to Add new Source 
    For IntI = 1 to 9 
          strField = "Text" & CStr(IntI)
          arrField(IntI)= getSplitValue(strParameters,strField)
            'Verify the text Fields in New Source (Level1) Window
          strTemp = "WPFObject("&arrField(IntI)&")"   
          Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
          strText = Left(arrField(IntI) ,(len(arrField(IntI))-8)) & cStr(nIteration)          
             
          If IntI = 2 Then 
              strLevel2Source = strText                
          End If  
         
          Select Case IntI
            Case  7 
                objTemp.set_SelectedIndex(1)
            Case 8
                objTemp.set_IsChecked(True)
            Case 9
                 strTemp1 = "WPFObject(""InsertSourceAfterCheckEdit"")"
                 Set objTemp1 = Sys.Process("EdgeClient").FindChild("Name", strTemp1, 50, True)
                   
                'Validation for Top Check box and Insert Source Text box 'Chcek Top check Box    
                If Ucase(strCategory) = Ucase("TC_SOURCE33")Then                   
                    'Check the Top check box   
                    objTemp1.set_IsChecked(True) 
                    Delay 200
                    If  objTemp.IsEnabled = False Then
                         strTCRemarks = "Insert Source After Drop Down is Disabled" 
                         blnFlag = True                                                           
                    Else
                         strTCRemarks = "Insert Source After Drop Down is not Disabled"                                        
                     End If
                   
                 End If
                 
                 ''Validation for Top Check box and Insert Source Text box 'unChcek Top check Box  
                 If Ucase(strCategory) = Ucase("TC_SOURCE34")Then 
                   strSourceLevel2 =getSplitValue(strParameters,"Level2Source")
                    Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Root").WPFObject("Root").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("StackPanel", "", 1).WPFObject("StackPanel", "", 10).WPFObject("InsertSourceAfterComboEdit")
                    objTemp1.set_IsChecked(False)
                     If  objTemp.IsEnabled = True Then
                        objTemp.Set_Text(strSourceLevel2)
                        strNewText = objTemp.Text
                        If Trim(Ucase(strNewText)) = Trim(Ucase(strSourceLevel2)) Then 
                         strTCRemarks = "New Folder selected from Insert Source After Drop Down" 
                         blnFlag = True 
                        End If
                     Else
                        strTCRemarks ="New Folder was not able to select from Insert Source After Drop Down"                        
                     End If
                     
                 End If            
            Case Else                           
                objTemp.Set_Text(strText)
          End Select 
    Next
    
  
    
    
    'Click on Save button
       strTemp = "WPFObject(""OkButton"")"
       Set objTemp1= Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
       objTemp1.Click 
       Delay 200
       
    'Verify Error Message for Duplicate Description , Descritpiton Local, Source Abbr.

    If Ucase(strCategory) = Ucase("TC_SOURCE32")Then 
      strTemp= "WPFObject(""PART_ContainerContent"")"  
      Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Attention").FindChild("Name",strTemp,50,True)
      If objTemp.Exists Then
          strTemp = "WPFObject(""TextBlock_Message"")" 
          Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Attention").FindChild("Name",strTemp,50,True)
          strErrorText = objTemp.Text
          If Ucase(trim(strErrorText)) = Ucase(Trim("Validation failed for the Source's Source Abbreviation, Description or Description Local matches a sibling's corresponding properties.")) Then
              strTCRemarks = "'" & strErrorText & "' Error Message displayed "                   
              strTestCaseResult="PASS" 
              strTemp = "WPFObject(""Button_OK"")"
              Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Attention").FindChild("Name",strTemp,50,True)
              'Clcik on OK button
               objTemp.Click
              Exit Sub 
          Else
              strTCRemarks = "'" & strErrorText & "' Error Message is displayed "                   
              strTestCaseResult="FAIL" 
              Exit Sub 
          End If
      End If
    End If
    
      
    'Verification of Added Source in Source Module 
    Call sEdgeProcessor()        
    strTemp="WPFObject(""SourceTreeListView"")"   
    Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
    If objTemp.Exists Then
        Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)  
    End If
    
    
   intTotNodeCnt=objGridControl.Nodes_2.Count  
   For intI=0 to intTotNodeCnt-1         
     If Ucase(objGridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then
      objGridControl.Nodes_2.Item(intI).ExpandAll     
      intRow=objGridControl.Nodes_2.Item(intI).get_RowHandle
        objGridControl.Keys "^[Home]"
        Call objGridControl.ClearSelectionCore
        Call objGridControl.FocusViewAndRow(objGridControl,intRow)
        objGridControl.SetFocusOnCurrentItem
        Call objGridControl.SelectRowCore(intRow)        
      Exit For
    End If
   Next
   
  
  'Selceting the Second Level   
   intTotNodeCnt=objGridControl.Nodes_2.Item(intI).Nodes.Count
   For intJ=0 to intTotNodeCnt-1
   If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2Source) Then   
      blnFlag = True     
      Exit For     
    End If
   Next  
   
    If blnFlag = True  Then 
        strTCRemarks =  strTCRemarks &  "<br />" & "<br />"& "New Level2 Source '" & strLevel2Source & "'  is added to the '" & strSource_Name &"' Country in Source module"     
        strTestCaseResult="PASS"
    Else
       strTCRemarks = strTCRemarks &  "<br />" & "<br />"&  "New Level2 Source '" &strLevel2Source & "' is not added to the '" & strSource_Name &"' Country in Source module"                       
       strTestCaseResult="FAIL" 
      
    End IF
     
    
   If Err.Number > 0 Then
    Log.Warning("Error in 'sNSOAddnewSource', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
   
End Sub 

'###############################################################################################################################################################
'To Create a RedDot for required Workspace

Sub sRedDotCreation(strParameters)
'Sub sRedDotCreation()

  On Error Resume Next
  Dim strTemp, objTemp , strCategory
  strCategory=getSplitValue(strParameters,"CATEGORY")
  
  'strEnvi = "Edge ( US Integration )"
  DescText=Replace(aqDateTime.Now,"/","-")
  DescText=Replace(DescText,":","_")  
  
  
  
 'Open source module
  Call sOpenSourceDispalyViewer()
  Call sEdgeProcessor()
  
  'Select Second Level 
  Call sGridSelection(strParameters)
  
  'Click on New Workspace button 
  Call sOpenForEditOrView(strParameters) 
  
   strTemp="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
   Set objTemp=Sys.Process("EdgeClient").WaitChild(strTemp,50000)
    If objTemp.Exists = True then    
       strTemp="WPFObject(""ChangeNameTextEdit"")"
       Set objTemp1 = objTemp.FindChild("Name",strTemp,9,True) 
          
       'Provide workspace name
        objTemp1.Click
        objTemp1.Text = DescText 
              
       'Clickon OK button 
        strTemp="WPFObject(""OkButton"")"
        Set objTemp1 = objTemp.FindChild("Name",strTemp,9,True)          
        objTemp1.Click
        
         If Ucase(strCategory) = Ucase("TC_SOURCE35") OR Ucase(strCategory) = Ucase("TC_SOURCE36")Then
              Delay 500
               Exit sub
        End If
        Call sEdgeProcessor 
        Call sClosePanel2()
    End If
    
     
  If Err.Number > 0 Then
    Log.Warning("Error in 'sRedDotCreation', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
  
End Sub

'*******************************************************************************************************************************************************************
'Testcase :TC_SOURCE35 : Check for validation on exporting the locked folder for edit 
Sub sRedDotValidation(strParameters)

  On Error Resume Next
  Dim strTemp, objTemp , strCategory , strText
  
  strLevel2src_Name=getSplitValue(strParameters,"Level2Source")
  strCategory=getSplitValue(strParameters,"CATEGORY")
  
  'Verify Open for Edit (Source and Source Schedule)
    If Ucase(strCategory) = Ucase("TC_SOURCE35") OR Ucase(strCategory) = Ucase("TC_SOURCE36")Then
    
      Call sRedDotCreation(strParameters)
      'Verify Error Message
      strTemp = "WPFObject(""TextBlock_Message"")"
      Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Warning").WPFObject("CustomMessageBoxWindow", "Warning", 1).FindChild("Name",strTemp,50,True) 
  
      'Get a Display name of a computer
      Set objSysInfo = CreateObject("ADSystemInfo")
      strUser = objSysInfo.UserName
      Set objUser = GetObject("LDAP://" & strUser)
      strFullName = objUser.Get("displayName")
      sDisplayName = Split(strFullName,",")
     
  
      If objTemp.Exists Then 
          strText = objTemp.Text
          'You are not allowed to open a workspace of 'Automation_Source03' for it has been locked by Chethana on 'Automation_Source03'.
          strTemp = "You are not allowed to open a workspace of '"&strLevel2src_Name&"' for it has been locked by "&sDisplayName(0)&" on '"&strLevel2src_Name&"'."
          If InStr(strText, strTemp) > 0 Then
            strTemp ="WPFObject(""Button_No"")"
            Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
            objTemp.Click
            strTCRemarks = strText & " ----- Message displayed" 
            strTestCaseResult="PASS"
          Else
            strTCRemarks = strText & " ----- Message displayed" 
            strTCRemarks =  strTCRemarks &  "<br />" & "  Locked Message did not appear"
            strTestCaseResult="FAIL" 
          End If
      End If
    End If
    
    If Ucase(strCategory) = Ucase("TC_SOURCE37") OR Ucase(strCategory) = Ucase("TC_SOURCE38")Then
       'Open source module
        Call sOpenSourceDispalyViewer()
        Call sEdgeProcessor()
  
        'Select Second Level 
        Call sGridSelection(strParameters)
  
        'Click on New Workspace button 
        Call sOpenForEditOrView(strParameters) 
        Call sEdgeProcessor()
        
        If Ucase(strCategory) = Ucase("TC_SOURCE37") Then
            'strTemp = "WPFObject(""TextBlock"", ""Source Workspace (For View Only) "", 1)"
            strTemp = "Source Workspace"           
        ElseIf Ucase(strCategory) = Ucase("TC_SOURCE38") Then
            strTemp = "Source Series Schedule"
        End If
           strText= "WPFObject(""TextBlock"", """ &strTemp& " (For View Only) "", 1)"
            Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2).FindChild("Name",strText,10,True)
            strText =  objTemp.WPFControlText
            If Trim(Ucase(strText)) = Trim(Ucase("Source Workspace (For View Only)")) Or  Trim(Ucase(strText)) = Trim(Ucase("Source Series Schedule (For View Only)")) Then
              strTCRemarks = strTemp &" is Opened in View Only Mode"
              strTestCaseResult="PASS"
              Call sClosePanel2()
              If Ucase(strCategory) = Ucase("TC_SOURCE38") Then 
                Call sCloseSWV()
                Call SourceWorkSpacevwr()
              End If
            Else
              strTCRemarks = strTemp &" not Opened in View Only Mode"
              strTestCaseResult="FAIL"            
            End If 
      End If
            
  If Err.Number > 0 Then
    Log.Warning("Error in 'sRedDotValidation', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
    
End Sub

'****************************************************************************************************************************************************************
'Testcase :TC_SOURCE39-44 : Verify Right Click option in Source Module

Sub sRightClickDispalyViewer(strParameters)
'Sub sRightClickDispalyViewer()

On Error Resume Next

       Dim strTemp, objTemp, objGridControl, arrLable(15), IntCount, IntRowControl
       strCategory=getSplitValue(strParameters,"CATEGORY") 
       strMyCategory=getSplitValue(strParameters,"MyCATEGORY")  
       strATPFile=getSplitValue(strParameters,"ATP") 
       
        
    'Select the Level1/2 Source   
        Call sOpenSourceDispalyViewer()  
        'Call sRefrshSourceModule() 
        Delay 2000 
        'Call sSelectRow(strParameters)
        Call sGridSelection(strParameters)
        
        
      'Right Click on a Required Source  
        Call sSourceClickR(strParameters)
       
    
        'Set the specific Object 
        strTemp1 = "WPFObject(""ContentControlEx"", ""New Source Organization"", 2)"
        Set objNSO =Sys.Process("EdgeClient").FindChild("Name",strTemp1,50,True)
        
        strTemp2 = "WPFObject(""ContentControlEx"", ""New Workspace"", 2)"
        Set objNW =Sys.Process("EdgeClient").FindChild("Name",strTemp2,50,True)
        
        strTemp3 = "WPFObject(""ContentControlEx"", ""Open Global STP"", 2)"
        Set objOGSTP =Sys.Process("EdgeClient").FindChild("Name",strTemp3,50,True)
        
        strTemp4 = "WPFObject(""ContentControlEx"", ""Open CN STP"", 2)"
        Set objOCNSTP =Sys.Process("EdgeClient").FindChild("Name",strTemp4,50,True)
        
        strTemp5 = "WPFObject(""ContentControlEx"", ""Subscription"", 2)"
        Set objSUB =Sys.Process("EdgeClient").FindChild("Name",strTemp5,50,True)
        
        strTemp6 = "WPFObject(""ContentControlEx"", ""ATP"", 2)"
        Set objATP =Sys.Process("EdgeClient").FindChild("Name",strTemp6,50,True)
        
       
        
        'Open the New Source Organization window by Righ click 
        If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT96")) Then 
            strTemp = "WPFObject(""ContentControlEx"", ""New Source Organization"", 2)" 
             Set objTemp  = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
             If objTemp.Exists Then 
              objTemp.Click 
             End If             
             Delay 200 
             Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Root").WPFObject("Root").WPFObject("Grid", "", 1).WPFObject("PART_InactiveBorder")
             If objTemp.Exists Then 
                Log.message "New source organization window is opened by right click for level1 folder"
                strTCRemarks = "New source organization window is opened by right click for level1 folder"
                strTestCaseResult="PASS"
             Else
                 Log.message "New source organization window is not opened by right click for level1 folder"
                 strTCRemarks = "New source organization window is not opened by right click for level1 folder"
                 strTestCaseResult="FAIL"                         
             End If
             strTemp= "WPFObject(""CancelButton"")"
             Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Root").FindChild("Name",strTemp,50,True)
             objTemp.Click
            Exit Sub 
        End If
        
          
      'Check for right click functionality of the options OF New Workspace dropdown
       IF Ucase(Trim(strMyCategory))= Ucase(Trim("TC_SOURCE44")) Then 
              
          Call sOpenForEditSource(strParameters)         
       End If  
       
       
        
     'Verify  TC_SOURCE39 Right Click options should be disabled for Open Global STP and Open CN STP features:
       IF Ucase(Trim(strCategory))= Ucase(Trim("TC_SOURCE39")) Then 
          If objNSO.IsEnabled = True And  objNW.IsEnabled = True And objOGSTP.IsEnabled = False And _
              objOCNSTP.IsEnabled = False And objSUB.IsEnabled = True And objATP.IsEnabled = True  Then 
              strTCRemarks = "Open Global STP  & Open CN STP   options are Inactive" 
              strTCRemarks = strTCRemarks &  "<br />" & "All Right Click Options for Level1 Source are displayed correctly"
              strTestCaseResult="PASS"
          Else
              strTCRemarks = "Right Click Options for Level1 Source are not displayed correctly"
              strTestCaseResult="FAIL"  
         End If
       End IF  
       
      'Check for the  "Right Click Options" for > Level1 Source folder 
      IF Ucase(Trim(strCategory))= Ucase(Trim("TC_SOURCE40")) Then 
          If objNSO.IsEnabled = False And  objNW.IsEnabled = True And objOGSTP.IsEnabled = True And _
              objOCNSTP.IsEnabled = True And objSUB.IsEnabled = True And objATP.IsEnabled = True  Then 
              strTCRemarks = "New Source Organization options is Inactive"
              strTCRemarks = strTCRemarks &  "<br />" & "All Right Click Options for > Level1 Source are displayed correctly"
              strTestCaseResult="PASS"
          Else
              strTCRemarks = "Right Click Options for > Level1 Source are not displayed correctly"
              strTestCaseResult="FAIL"  
         End If
       End IF   
     
      'Check for toggle options for 'New Workspace'
      IF Ucase(Trim(strCategory))= Ucase(Trim("TC_SOURCE41")) Then 
          set objNW = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 2).WPFObject("BarSubItemLinkControl", "", 1).WPFObject("ContentControlEx", "New Workspace", 2)
          objNW.Click
          
          'Identify Objects

          strTemp1 = "WPFObject(""ContentControlEx"", ""Open For View (Source)"", 2)"
          Set objChild1 =Sys.Process("EdgeClient").FindChild("Name",strTemp1,50,True)
          
          strTemp1 = "WPFObject(""ContentControlEx"", ""Open For Edit (Source)"", 2)"
          Set objChild2 =Sys.Process("EdgeClient").FindChild("Name",strTemp1,50,True)
          
          strTemp1 = "WPFObject(""ContentControlEx"", ""Open For View (Source Schedule)"", 2)"
          Set objChild3 =Sys.Process("EdgeClient").FindChild("Name",strTemp1,50,True)
          
          strTemp1 = "WPFObject(""ContentControlEx"", ""New Source Organization"", 2)"
          Set objChild4 = "WPFObject(""ContentControlEx"", ""Open For Edit (Source Schedule)"", 2)"
          
          'Verify All options under New Workspace
          If objChild1.Exists And objChild2.Exists And objChild3.Exists  And objChild4.Exists Then
              strTCRemarks = "All Toggle options for 'New Workspace' are displayed"
              strTestCaseResult="PASS"
              
          Else
              strTCRemarks = "All Toggle options for 'New Workspace' are not displayed"
              strTestCaseResult="FAIL"
          End If  
          
       End IF
       
      'Check for toggle options for 'Subscription'
        IF Ucase(Trim(strCategory))= Ucase(Trim("TC_SOURCE42")) Then 
           Set objSUB = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 5).WPFObject("BarSubItemLinkControl", "", 1).WPFObject("ContentControlEx", "Subscription", 2)
           objSUB.Click

        
         'Identify Objects
          
          strTemp1 = "WPFObject(""ContentControlEx"", ""Open Subscription"", 2)"
          Set objChild1 = Sys.Process("EdgeClient").FindChild("Name",strTemp1,50,True)
          
          strTemp2 = "WPFObject(""ContentControlEx"", ""Show/Hide Subscription"", 2)"
          Set objChild2 = Sys.Process("EdgeClient").FindChild("Name",strTemp1,50,True)
          
          strTemp3 = "WPFObject(""ContentControlEx"", ""Refresh Subscription"", 2)"
          Set objChild3 =Sys.Process("EdgeClient").FindChild("Name",strTemp1,50,True)
         
          'Verify All options under subscription
          If objChild1.Exists And objChild2.Exists And objChild3.Exists then
              strTCRemarks = "All Toggle options for 'Subscription' are displayed"
              strTestCaseResult="PASS"
          Else
             strTCRemarks = "All Toggle options for 'Subscription' are not displayed"
              strTestCaseResult="FAIL"
          End If
        End If
       
      
      'Check for toggle options for 'ATP'
        IF Ucase(Trim(strCategory))= Ucase(Trim("TC_SOURCE43")) Then 
       
          'Clicking/selecting ATP from context-menu        
          strTemp="WPFObject(""ContentControlEx"", ""ATP"", 2)"
          Set objATP=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
          objATP.Click
           
           strTemp="WPFObject(""ContentControlEx"", """&strATPFile&""", 2)"
           Set objMCFlag=Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "", 2).WPFObject("PopupRoot", "", 1).FindChild("Name",strTemp,50,true)
           Set objMCFlag=Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "", 1).WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).FindChild("Name",strTemp,50,true)
      
           If objMCFlag.Exists=true then
              objMCFlag.Click
              
              'Identify Objects                
              strTemp = "WPFObject(""ContentControlEx"", ""Run"", 2)"              
              Set objChild1 =  Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "", 1).WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 1).WPFObject("BarButtonItemLinkControl", "", 1)
              
              strVariable1 = objChild1.WPFControlText
               
              strTemp = "WPFObject(""ContentControlEx"", ""Check Status"", 2)"
              Set objChild2=  Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "", 1).WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 2).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Check Status", 2)
              strVariable2 = objChild2.WPFControlText
              
               strTemp="WPFObject(""ContentControlEx"", ""Open"", 2)"
              Set objChild3=  Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "", 1).WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 3).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Open", 2)
                strVariable3 = objChild3.WPFControlText    
                'Verify All options under subscription
              If strVariable1 = "Run" And strVariable2 = "Check Status" And strVariable3 = "Open" then
                  strTCRemarks = "All Toggle options for 'ATP' are displayed"
                  strTestCaseResult="PASS"
              Else
                 strTCRemarks = "All Toggle options for 'ATP' are not displayed"
                  strTestCaseResult="FAIL"
              End If
              
            Else
             strTCRemarks= strTCRemarks & "<br />" & "ATP menu is not found"
             strTestCaseResult="FAIL"
            End If
        End If   
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sRightClickDispalyViewer', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
          
End Sub

'****************************************************************************************************************************************************************
'Function to Perform Right Click operation

Sub sSourceClickR(strParameters)
'Sub sSourceClickR()

On Error Resume Next
    Dealy 2000
    'Get Source Name
    strSourceName=getSplitValue(strParameters,"SOURCE")
    strLevel2src_Name=getSplitValue(strParameters,"LEVEL2SOURCE")
    strLevel3src_Name=getSplitValue(strParameters,"WORKSPACE")
    strLevel = getSplitValue(strParameters,"Level")
'   
'    strSourceName= "China"
'    strEnvi = "Edge ( US Integration )"
'    strLevel ="Level1" 
'    
    strTemp="WPFObject(""SourceTreeListView"")"    
    Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp,50,True)
         
    'Select the required row and right click 
    objRowControl = GridControl.FindAllChildren("ClrClassName","RowControl",10,true)        
    For i = 0 to ubound(objRowControl)
        If strLevel = "Level1" And (objRowControl(i).DataContext.Row.Description=strSourceName)Then
             log.Message objRowControl(i).DataContext.Row.Description              
             objRowControl(i).ClickR
             Exit For           
        End If
        If strLevel  = "Level2" And (objRowControl(i).DataContext.Row.Description=strLevel2src_Name) Then 
             log.Message objRowControl(i).DataContext.Row.Description            
             objRowControl(i).ClickR
             Exit For    
        End If      
     Next
  sSourceClickR=Err.Number 
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sSourceClickR', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'****************************************************************************************************************************************************************

Sub sRefrshSourceModule()

On Error Resume Next

  'Refresh Button identification
       
  StrRefresh = "WPFObject(""ContentControlEx"", ""Refresh"", 2)"  
  Set objRefresh=Sys.Process("EdgeClient").FindChild("Name",StrRefresh,60,true)
  
  'Click on Refresh Button 
  If objRefresh.Exists Then
    objRefresh.Click    
    Call sEdgeProcessor()
  End If 
  
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sRefrshSourceModule', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
  
End Sub 

'****************************************************************************************************************************************************************
'Testcase :TC_SOURCE45:Verify for the options disabled when user has no 'Edit' right

Sub sNewWorkSpace(strParameters)

  On Error Resume Next
  
  Dim objWS(5), arrTemp(5), blnFlag1, blnFlag2, blnFlag3
  
  'Object Identification
  arrTemp(0) = "WPFObject(""ContentControlEx"", ""New Workspace"", 2)"  
  arrTemp(1) = "WPFObject(""ContentControlEx"", ""Open For View (Source)"", 2)" 
  arrTemp(2) = "WPFObject(""ContentControlEx"", ""Open For Edit (Source)"", 2)" 
  arrTemp(3) = "WPFObject(""ContentControlEx"", ""Open For View (Source Schedule)"", 2)" 
  arrTemp(4) = "WPFObject(""ContentControlEx"", ""Open For Edit (Source Schedule)"", 2)" 

  'Select the Level1/2 Source   
        Call sOpenSourceDispalyViewer() 
        Call sGridSelection(strParameters)
  
 For IntI = 0 to 4 
  Set objWS(IntI) = Sys.Process("EdgeClient").FindChild("Name",arrTemp(IntI),50, True)
  If IntI = 0  and objWS(IntI).Exists Then 
    objWS(IntI).Click    
  End If
 Next
 
  If objWS(1).IsEnabled = True And  objWS(2).IsEnabled = False And objWS(3).IsEnabled = True And objWS(4).IsEnabled = False Then 
    strTCRemarks = "Open For View (Source)  & Open For View (Source Schedule) are Active" 
    strTCRemarks = strTCRemarks &  "<br />" & "Open For Edit (Source)  & Open For Edit (Source Schedule) are Inactive" 
    strTCRemarks = strTCRemarks &  "<br />" & "All Options for Level2 Source for New WorkSpace button with no 'Edit' rights are displayed correctly"
 Else
     strTCRemarks = "All Options for Level2 Source for New WorkSpace button are not displayed correctly"
 End If 
  
 'Set object for Right click options
      arrTemp(0) = "WPFObject(""ContentControlEx"", ""New Source Organization"", 2)"   
      arrTemp(1) = "WPFObject(""ContentControlEx"", ""New Workspace"", 2)"     
      arrTemp(2) = "WPFObject(""ContentControlEx"", ""Open Global STP"", 2)"      
      arrTemp(3) = "WPFObject(""ContentControlEx"", ""Open CN STP"", 2)"       
      arrTemp(4) = "WPFObject(""ContentControlEx"", ""Subscription"", 2)"       
      arrTemp(5) = "WPFObject(""ContentControlEx"", ""ATP"", 2)"
  
 'Right Click on a Required level2 Source  
     Call sSourceClickR(strParameters)
   
    For IntI = 0 to 5 
       Set objWS(IntI) = Sys.Process("EdgeClient").FindChild("Name",arrTemp(IntI),50, True)
    Next
    
   If objWS(0).IsEnabled = False And  objWS(1).IsEnabled = True And objWS(2).IsEnabled = False And _
      objWS(3).IsEnabled = False And objWS(4).IsEnabled = True And objWS(5).IsEnabled = True  Then 
      strTCRemarks = strTCRemarks &  "<br />" &  "<br />" & "'New Source Organization', 'Open Global STP'  And 'Open CN STP' options are Inactive from right click " 
      strTCRemarks = strTCRemarks &  "<br />" & "All Right Click Options for Level2 Source  with no 'Edit' rights are displayed Correctly."
        blnFlag1 = True
   Else
      strTCRemarks = "Right Click Options for Level2 Source with no Edit rights are not displayed correctly"
      blnFlag1 = False
   End If   
   
   'Click on New Workspace toggle option from right click 
 '  Call sSourceClickR(strParameters)  
   arrTemp(1) = "WPFObject(""ContentControlEx"", ""Open For Edit (Source)"", 2)" 
   arrTemp(2) = "WPFObject(""ContentControlEx"", ""Open For Edit (Source Schedule)"", 2)"      
   set objWS(0) = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 2).WPFObject("BarSubItemLinkControl", "", 1).WPFObject("ContentControlEx", "New Workspace", 2)
   objWS(0).Click
       
   
'Verify Edit(source) and Edit (source Schedule ) are inactive
   For IntI = 1 to 2
      Set objWS(IntI) = Sys.Process("EdgeClient").FindChild("Name",arrTemp(IntI),50, True)  
   Next
    If objWS(1).IsEnabled = False And  objWS(2).IsEnabled = False Then 
      strTCRemarks = strTCRemarks &  "<br />" &   "<br />" & "Open For Edit (Source)  & Open For Edit (Source Schedule) are Inactive for Right Click option" 
      strTCRemarks = strTCRemarks &  "<br />" & "All right click options for Level2 Source for New WorkSpace button with no 'Edit' rights are displayed correctly"
       blnFlag2 = True
    Else
      strTCRemarks = "Right Click Options for New WorkSpace button with no 'Edit' rights are not displayed correctly"
      blnFlag2 = False
    End If
   
'Verify open Subscripton   is inactive from right Click
    Call sRefrshSourceModule() 
    Call sSourceClickR(strParameters)
    arrTemp(4) = "WPFObject(""ContentControlEx"", ""Open Subscription"", 2)"
    Set objWS(3) = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 5).WPFObject("BarSubItemLinkControl", "", 1).WPFObject("ContentControlEx", "Subscription", 2)
    objWS(3).Click
    Set objWS(1) = Sys.Process("EdgeClient").FindChild("Name",arrTemp(4),50, True)
    If objWS(1).IsEnabled = False Then
       strTCRemarks = strTCRemarks &  "<br />" &   "<br />" & "Open Subscription option is Inactive"
       strTCRemarks = strTCRemarks &  "<br />" & "All Right click options for Level2 Source for Subscription button with no 'Edit' rights are displayed correctly"
       blnFlag3 = True
       Call sRefrshSourceModule() 
    Else
      strTCRemarks = "All Right click options for Level2 Source for Subscription button with no 'Edit' rights are not displayed correctly"
      blnFlag3 = False
    End If
      
'Verify Test Result:
    If  blnFlag1 = True  And  blnFlag2 = True And  blnFlag3 = True Then 
      strTestCaseResult="PASS"
    Else
       strTestCaseResult="FAIL"
    End If
    
    For IntI=0 to 5
     Set objWS(IntI) = Nothing
    Next
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sNewWorkSpace', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub 


'****************************************************************************************************************************************************************
'Testcase :TC_SOURCE46_47_48_49: Verify functionality of 'ExpandAll' and Collapse All button  for  level1  Source folder

Sub sExpandAll_CollapseAll(strParameters)

  On Error Resume Next  
  Dim strTemp, objTemp, intBeforeCnt, intAfterCnt
  strCategory=getSplitValue(strParameters,"CATEGORY")
  strSource_Name=getSplitValue(strParameters,"SOURCE")
  
'Open Source Disply View Module
    Call sOpenSourceDispalyViewer() 

'------------------------------------------------------------------------
'Object Identification 
    'For Gridobject
    strTemp = "WPFObject(""SourceTreeControl"")"
    Set objGridControl = Sys.Process("EdgeClient").FindChild("Name",strTemp,60, True)

    'For Expand All Button
    strExpand = "WPFObject(""ContentControlEx"", ""Expand All"", 2)"
    Set objExpand = Sys.Process("EdgeClient").FindChild("Name",strExpand,50, True)
    
    'For Collapse All Button
    strCollapse= "WPFObject(""ContentControlEx"", ""Collapse All"", 2)"
    Set objCollapse = Sys.Process("EdgeClient").FindChild("Name",strCollapse,50, True)
 
   'Source TreeView     
     strTree="WPFObject(""SourceTreeListView"")"   
     Set objGridTree = Sys.Process("EdgeClient").FindChild("Name", strTree, 50, True)  

'------------------------------------------------------------------------  

''Select the Level1 Source  
   intTotNodeCnt=objGridTree.Nodes_2.Count  
   For intI=0 to intTotNodeCnt-1         
    If Ucase(objGridTree.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then     
      intRow=objGridTree.Nodes_2.Item(intI).get_RowHandle
      objGridTree.Keys "^[Home]"
      Call objGridTree.ClearSelectionCore
      Call objGridTree.FocusViewAndRow(objGridControl,intRow)
      objGridTree.SetFocusOnCurrentItem
      Call objGridTree.SelectRowCore(intRow)
      Delay 200           
      Exit For
    End If
   Next
'------------------------------------------------------------------------   
'Verify Expand All is enabled or not
If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE46"))  Then
  If objExpand.IsEnabled Then
     strTCRemarks = "Expand All option is Active"
     strTestCaseResult="PASS"
  Else
     strTCRemarks = "Expand All option is Inactive"
     strTestCaseResult="FAIL" 
  End If 
End IF 
'------------------------------------------------------------------------  
  'Get the Row Count before Expanding   
  If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE47")) Then 
    intBeforeCnt =  objGridControl.VisibleRowCount
    
    'Click on Expand All button
    If objExpand.Exists Then 
      objExpand.Click
      Call sEdgeProcessor()
    End If
    
    'Get the Row Count after Expanding
    intAfterCnt = objGridControl.VisibleRowCount
   
    'Verify Expand All option functionality  
    If intBeforeCnt < intAfterCnt Then 
      strTCRemarks = "The System Expanded all the levels of the '" &strSource_Name & "' Country Folder"
      strTestCaseResult="PASS"
    Else
      strTCRemarks = "The System not Expanded all the levels of the '" &strSource_Name & "' Country Folder"
      strTestCaseResult="FAIL"
    End If    
  End If 
'------------------------------------------------------------------------    
  ''Verify Collapse All is enabled or not 
   If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE48"))  Then
      If objCollapse.IsEnabled Then
       strTCRemarks = "Collapse All option is Active"
       strTestCaseResult="PASS"
      Else
       strTCRemarks = "Collapse All option is Inactive"
       strTestCaseResult="FAIL" 
      End If 
   End IF
'------------------------------------------------------------------------   
   If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE50"))  Then
   
    ' Get before RowCount
     intBeforeCnt =  objGridControl.VisibleRowCount
       
      'Click on Collapse All button
      If objCollapse.Exists Then 
        objCollapse.Click
        Delay 2000
      End If
      
      'Get the Row Count after Expanding
      intAfterCnt = objGridControl.VisibleRowCount
      
      'Verify Collapse All option functionality  
      If intBeforeCnt > intAfterCnt Then 
        strTCRemarks = "The System Collapsed '" & strSource_Name & "' Country Folder"
        strTestCaseResult="PASS"
      Else
        strTCRemarks = "The System not Collapsed '" & strSource_Name & "' Country Folder"
        strTestCaseResult="FAIL"
      End If   
      
   End If
 '------------------------------------------------------------------------   
'Verify Collapse All button is enabled or not for Level 2 source folder
If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE49"))  Then
    
    'Click on Expand All button
        If objExpand.Exists Then 
          objExpand.Click
          Call sEdgeProcessor()
        End If  
    'Select The Level 2 Source Folder
    Call sGridSelection(strParameters) 
    
    If objCollapse.IsEnabled Then
       strTCRemarks = "Collapse All option is Active for Level2 Source Folder"
       strTestCaseResult="PASS"
       Call sCloseSWV()
      Else
       strTCRemarks = "Collapse All option is Inactive for Source Folder"
       strTestCaseResult="FAIL" 
       Call sCloseSWV()
    End If        
 
End IF   



  If Err.Number > 0 Then
    Log.Warning("Error in 'sExpandAll_CollapseAll', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
   
End Sub

'****************************************************************************************************************************************************************
'Testcase :TC_SOURCE:51-69 Verify functionality of fliter of each tab in Source display Viewr module

Sub sComboSelection(strParameters)
'Sub sComboSelection()

  On Error Resume Next
  Dim strSelection,  IntCount, strTree
  Dim objSelection,  objGridTree , strText(20), IntHeaderNumber
  
  'Obtain the test data  
  strSource_Name=getSplitValue(strParameters,"SOURCE")
  strCategory=getSplitValue(strParameters,"CATEGORY")
  strHeaderNumber=getSplitValue(strParameters,"HeaderNumber")
  strHeaderName=getSplitValue(strParameters,"HeaderName")
  strFilterString=getSplitValue(strParameters,"FilterString")
  strSearchText=getSplitValue(strParameters,"SearchText")
   
  IntHeaderNumber = CInt(strHeaderNumber)
  
  'Open Source Disply View Module
      Call sOpenSourceDispalyViewer() 
      Delay 2000
  
  'Source TreeView     
   strTemp="WPFObject(""SourceTreeListView"")"   
   Set objTreeView = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)  
   
   'Object identification for Grid Control:
 
   strTemp1="WPFObject(""SourceTreeControl"")"  
   Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp1, 50, True) 
  
'------------------------------------------------------------------------  
'Select the Level1 Source  
   intTotNodeCnt=objTreeView.Nodes_2.Count  
   For intI=0 to intTotNodeCnt-1         
    If Ucase(objTreeView.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) Then        
      intRow=objTreeView.Nodes_2.Item(intI).get_RowHandle      
      objTreeView.Keys "^[Home]"
      Call objTreeView.ClearSelectionCore
      Call objTreeView.FocusViewAndRow(objTreeView,intRow)
      objTreeView.SetFocusOnCurrentItem
      Call objTreeView.SelectRowCore(intRow)              
      Exit For
    End If
   Next
   If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE51")) Then
    SYS.Keys "[Enter]"
    Delay 3000,"Please wait"  
   End If
 
'------------------------------------------------------------------------ 
    'Drag till the end of the screen:
     If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE61")) Then
         Call objTreeView.Drag(650, 489, 672, 1)
         Dealy 3000 , "Please Wait"      
     End If

     'Seaching by seting value for filterstring 
     If CInt(Right(strCategory,2)) > 60 Then   
      objGridControl.set_FilterString(strFilterString)
      Delay 2000
     Else
       'Applying Filter option:
        objTreeView.WPFObject("GridColumnHeader", "", IntHeaderNumber).WPFObject("PART_Content").Click   
        objTreeView.WPFObject("GridColumnHeader", "", IntHeaderNumber).WPFObject("ComboBoxEdit", "", 1).Click     
    End If
   
     For I = 1 to 40   
        If CInt(Right(strCategory,2)) > 60 Then 
           Exit for
        End If         
       
       Set objCombo =  Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("PopupBorderControl", "", 1).WPFObject("PopupContentContainer", "", 1).WPFObject("NonLogicalDecorator", "", 1).WPFObject("PopupContentControl", "", 1).WPFObject("ComboBoxEditItem", "", I).WPFObject("ContentPresenter", "", 1)
        strText(I) = objCombo.Content
       If Ucase(Trim(strText(I))) = Ucase(Trim(strSearchText)) Then
          objCombo.Click
           Delay 2000 , "Please Wait" 
          Exit For       
       End If    
        Sys.Keys"[Down]"
     Next 

    strRunTimeString = objGridControl.FilterString  
    If UCase(Trim(strRunTimeString))= Ucase(Trim(strFilterString))Then
      strTCRemarks = "'"&  strSearchText & "' filter option is selected for '" & strHeaderName & "' Header"      
      objGridControl.set_FilterString("")
      strTestCaseResult="PASS"
    Else
      strTCRemarks = "'"& strSearchText & "' Filter option is not selected for '" & strHeaderName & "' Header"       
      objGridControl.set_FilterString("")
      strTestCaseResult="FAIL"
    End If

    If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE69")) Then
       Call sCloseSWV()
    End If
    
    Set objTreeView = Nothing 
    Set objGridControl = Nothing 
    Set objCombo = Nothing 
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sComboSelection', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
    
End Sub

'****************************************************************************************************************************************************************
'Testcase :TC_SOURCE:70-73 Verify ShortCut Keys for SourceDisplay Viewer

Sub sShortCutKeys(strParameters)

  On Error Resume Next
  Dim objTreeView,  objGridControl 
  
  'Obtain the test data  
  strSource_Name=getSplitValue(strParameters,"SOURCE")
  strCategory=getSplitValue(strParameters,"CATEGORY")
  strKeyWord=getSplitValue(strParameters,"KeyWord")
  
  
  'Open Source Disply View Module
      Call sOpenSourceDispalyViewer() 
      Delay 2000
  
  'Source TreeView     
   strTemp="WPFObject(""SourceTreeListView"")"   
   Set objTreeView = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)  
'   
  'Object identification for Grid Control:
 
   strTemp1="WPFObject(""SourceTreeControl"")"  
   Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp1, 50, True) 
  
'------------------------------------------------------------------------  
'Select the Level1 Source  
   intTotNodeCnt=objTreeView.Nodes_2.Count  
   For intI=0 to intTotNodeCnt-1         
    If Ucase(objTreeView.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) Then        
      intRow=objTreeView.Nodes_2.Item(intI).get_RowHandle      
      objTreeView.Keys "^[Home]"
      Call objTreeView.ClearSelectionCore
      Call objTreeView.FocusViewAndRow(objTreeView,intRow)
      objTreeView.SetFocusOnCurrentItem
      Call objTreeView.SelectRowCore(intRow)              
      Exit For
    End If
   Next
   
  nBeforeRCnt = CInt(objGridControl.VisibleRowCount) 
  If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE72")) then
      SYS.Keys "[Enter]"
      nBeforeRCnt = CInt(objGridControl.VisibleRowCount)
      Delay 2000
      SYS.Keys "[Enter]"     
  End If
  ApplyCutKey(strKeyWord)
  Delay 3000,"Please wait"  
  nAfterRCnt = CInt(objGridControl.VisibleRowCount) 
  
   
   If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE70")) Or  Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE72"))Then      
      If nBeforeRCnt <  nAfterRCnt Then
        strTCRemarks = "Shortcut key to expand the level1 Source is working"
        strTestCaseResult="PASS"
      Else
        strTCRemarks = "Shortcut key to expand the level1 Source is not working"
        strTestCaseResult="FAIL"
      End If    
   End If
   

   If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE71"))Or Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE73"))  Then
      If nBeforeRCnt >  nAfterRCnt Then
        strTCRemarks = "Shortcut key to Collapse the level1 Source is working"
        strTestCaseResult="PASS"
      Else
        strTCRemarks = "Shortcut key to Collapse the level1 Source is not working"
        strTestCaseResult="FAIL"
      End If    
   End If 
   
  Set objTreeView = Nothing 
  Set objGridControl = Nothing 
  
  
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sShortCutKeys', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
   
End Sub 

'------------------------------------------------------------------------ 
  
Function ApplyCutKey(sKeyWord)
   Select Case sKeyWord
        Case  "Enter"
          SYS.Keys "[Enter]"
        Case "CntlEnter"
          SYS.Keys "^[Enter]"
   End Select

End Function

'****************************************************************************************************************************************************************
'Testcase :TC_SOURCE:74-76 Verify creating ATP file

Sub sATP(strParameters)
'Sub sATP()
    On Error Resume Next  
    
    Dim strTemp, objTemp , strATP
    
    strCategory=getSplitValue(strParameters,"CATEGORY")
    strSource_Name=getSplitValue(strParameters,"SOURCE")
    MCFlag=getSplitValue(strParameters,"MCFlag")
    
'    strCategory="China"
'    strSource_Name="China"
'    MCFlag="CN-JAY-Preliminary"
'    strCategory ="TC_SOURCE74"
    'msgbox MCFlag
   
  
    blnFlag= False
  
'Open Source Disply View Module
    Call sOpenSourceDispalyViewer()
    Call sGridSelection(strParameters)  

'Right Click on a Required level1 Source  
     Call sSourceClickR(strParameters)  
     
     
     strTemp = "WPFObject(""ContentControlEx"", ""ATP"", 2)"
     Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)  
     
      If objTemp.Exists=True Then      
        'Click on Toggle Option ATP
          objTemp.Click              
          Delay 500
              
        'Select and click on required McFlag  
          strMcFlag = "WPFObject(""ContentControlEx"", """&MCFlag&""", 2)"
          Set objMcFlag = Sys.Process("EdgeClient").FindChild("Name",strMcFlag,50,True)
          If objMcFlag.Exists=true then
            objMcFlag.Click 
            Delay 500
          End If 
                                     
           'strCategory ="TC_SOURCE74"
        'Verify ATP Data file opens in Excel   
         If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE74"))Then                
            'Open the ATP File                
            'strTemp = "WPFObject(""ContentControlEx"", ""Open"", 2)"
            Set objTemp =Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "", 1).WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 3).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Open", 2)
            If objTemp.Exists Then
                objTemp.Click
               ' msgbox "Open button Clicked"
            End If
              
            'Opening ATP File
            Delay 40000,"Opening ATP file..."  
            if strTestCase_no = "TC_Comp_13" Then
               Delay 40000,"Opening ATP file..." 
               Call PartialUpload()
               Exit Sub               
            End If 
            

            'Verify if the ATP data file is opened in excel
            objArray = Sys.FindAllChildren("ProcessName","EXCEL", 5,True)
            For i=0 to ubound(objArray)
              log.Message objArray(i).FullName
              Set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*RUN*",1,True) 
              If oSTP_ExcelObj.Exists = True Then  
              Else                           
                objArray(i).Close
                Delay 500 
                strTemp= "WPFObject(""Button_Yes"")"
                Set objTemp = Sys.Process("EXCEL", 2).WPFObject("HwndSource: CustomMessageBoxWindow", "Warning").FindChild("Name",strTemp,50,True)
                If objTemp.Exists Then 
                  objTemp.Click 
                End If
                strTCRemarks= "ATP data file is opened in excel"
                strTestCaseResult="PASS"
                blnFlag = True
                Exit For              
              End If
             Next
           
             IF blnFlag = False Then
                strTCRemarks= "ATP data file is not opened in excel"
                strTestCaseResult="FAIL"
             End IF   ' Call sCloseSource        
          End If
          
          'Verify ,if the ATP Automation page is opened by Clikcing on RUN toggle option
          
          If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE75")) OR Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE76"))  Then      
             If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE76")) Then 
                Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "", 1).WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 2).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Check Status", 2)
             Else
                Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "", 1).WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1).WPFObject("BarPopupBorderControl", "", 1).WPFObject("PopupMenuBarControl", "", 1).WPFObject("BarItemLinkInfo", "", 1).WPFObject("BarButtonItemLinkControl", "", 1).WPFObject("ContentControlEx", "Run", 2)
             End IF
  
            'Click on Run toggle option/Click on Check Status toggle option          
             If  objTemp.Exists Then   
                objTemp.Click
             End If
              
            'Delay 30000 sec to load a page    
            Delay 10000, "Please wait Page is loading"                        
            strTemp = "WPFObject(""PART_InactiveBorder"")"
            Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Root").WPFObject("Root").WPFObject("Grid", "", 1).WaitChild(strTemp,30000)         
            strText = objTemp.DataContext.Content.DataContext.Title
           
            'Verify ATP Automation page should be opened or not
            If Instr(strText,MCFlag)>0 then
              strTemp = "WPFObject(""BtnClose"")"
              Set objClose = Sys.Process("EdgeClient").WPFObject("HwndSource: Root").WPFObject("Root").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").FindChild("Name",strTemp,50,True)  
              objClose.Click
              strTCRemarks= "ATP Automation page is opened"
              strTestCaseResult="PASS"
            Else
              strTCRemarks= "ATP Automation page is not opened"
              strTestCaseResult="FAIL"           
            End If
           End IF  
        End If   
        
        
  If Err.Number > 0 Then
    Log.Warning("Error in 'sATP', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If 
End Sub

'****************************************************************************************************************************************************************
'Testcase :TC_SOURCE:77-80 Verify "Subscription" toggle options 


Sub sSubscripton(strParameters)
'Sub sSubscripton()

    On Error Resume Next  
    
    Dim strTemp, objTemp , strATP
    
    strCategory=getSplitValue(strParameters,"CATEGORY")
    strSource_Name=getSplitValue(strParameters,"SOURCE")
    strLevel2Source = getSplitValue(strParameters,"Level2Source")
    strTemp=getSplitValue(strParameters,"RequiredButton")
    strUserName = getSplitValue(strParameters,"UserName")
    strPWD = getSplitValue(strParameters,"Password")
    strHeader = getSplitValue(strParameters,"Header")
    strNegetive = getSplitValue(strParameters,"Negetive")
    strBrowserPage = getSplitValue(strParameters,"BrowserPage")
    strLevel3src_Name= getSplitValue(strParameters,"WORKSPACE")
    
     strTemp = "WPFObject(""ContentControlEx"", ""Subscription"", 2)"
     Remarks = ""
    
'    strCategory = "TC_SOURCE77"
'    strSource_Name = "Test"
'    strLevel2Source = "Automation_Source1"
'    strEnvi = "Edge ( US Integration )" 
'    strUserName ="rchethana"
'    strPWD="Cypress@2014"
'    strHeader = "EDGE Web(Integration)"
    
  
    'Open Source Disply View Module
    Call sOpenSourceDispalyViewer()
    Call sGridSelection(strParameters)
  '  Delay 2000  

    If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE77")) OR Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE78")) OR _
       Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE79")) OR Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE80")) Then  
         Remarks =  " by Right Click"
         strTemp = "WPFObject(""ContentControlEx"", ""Subscription"", 2)"
        'Right Click on a Required level2 Source  
         Call sSourceClickR(strParameters)  
         'Click on Subscription button  
         Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)        
     Else
        Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
     End If   
 
     If objTemp.Exists Then          
         objTemp.Click 
         If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE77")) OR Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE85"))Then
           strTemp= "WPFObject(""ContentControlEx"", ""Open Subscription"", 2)"
           Set objTemp= Sys.Process("EdgeClient").FindChild("Name",strTemp,50, True) 
           'Verify Open Subscription option            
           'Click on Open Subscription button
           objTemp.Click
           'Provide User Credentials
           
'           Set objTemp = Sys.Browser("iexplore").Window("#32770", "Windows Security", 1).Window("DirectUIHWND", "", 1)
'           Set objUserId =   objTemp.Window("CtrlNotifySink", "", 7).Window("Edit", "", 1)
'           Set objPwd =      objTemp.Window("CtrlNotifySink", "", 8).Window("Edit", "", 1) 
'           Set objOk =       objTemp.Window("CtrlNotifySink", "", 3).Window("Button", "OK", 1)
            Set objUserId = Sys.Browser("iexplore").Login.TextBox("UserName") 
            Set objPwd =   Sys.Browser("iexplore").Login.TextBox("Password")
            Set objOk =     Sys.Browser("iexplore").Login.Button("OK")
           objUserId.SetText(strUserName)
           objPwd.SetText(strPWD)
           objOk.Click
           Delay 30000 , "Please Wait"
           'Verify the required webpage is opened or not           
           strXpath = "//div[@class='container']/p/a"   
           'strXpath =  "//p[@class='site-title']/a[contains(text(),'EDGE Web(Integration)')]" 
           'Set objTemp = Sys.Browser("iexplore").Page(strBrowserPage).Header(0).Panel(0).Link(0)
           '
'           strXpath =  "//a[@href='/EdgeService08/']"                                                  
       
           Set objTemp = Sys.Browser("iexplore").Page(strBrowserPage).FindChildByXPath(strXpath,True)
           strText =  objTemp.contentText
          ' msgbox strText
           If Ucase(Trim(strText)) = Ucase(Trim(strHeader)) Then  
               Sys.Browser("iexplore").Page(strBrowserPage).Close          
               strTCRemarks= strHeader &" subscription webpage is opened " & Remarks
               log.message strHeader &" subscription webpage is opened " & Remarks
               strTestCaseResult="PASS"
           Else
              Sys.Browser("iexplore").Page("https://usedgeservice-test.ceicdata.com/EdgeService06/Subscription?SourceId=14331417").Close 
              strTCRemarks= strHeader &" subscription webpage is not opened " & Remarks
              log.message strHeader &" subscription webpage is not opened " & Remarks
              strTestCaseResult="FAIL"        
           End If 
       End If    
       
       'Verify Show/Hide toggle option
       
           If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE78")) Or Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE79"))OR _
              Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE86")) OR  Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE87"))Then
           strTemp= "WPFObject(""ContentControlEx"", ""Show/Hide Subscription"", 2)"
           Set objTemp= Sys.Process("EdgeClient").FindChild("Name",strTemp,50, True)  
           'Click on Show/hide Subscription button
           If objTemp.Exists then
              objTemp.Click 
              Set PicObj = Utils.Picture
              Set PicObj = Sys.Desktop.Picture
              PicObj.SavetoFile(strLogFolder & "Screenshots\" & strTestCase_No &  "_" & picCount & ".jpg")
              picCount = picCount + 1
              strTCRemarks="Screenshot of Datatalk window is captured"
              strTCRemarks= "Subscription column  is " & strHeader &" next to Source Abbr. in Source display viewer" & Remarks
              strTestCaseResult="PASS" 
           Else
              strTCRemarks= "Subscription column  is " & strNegetive &" next to Source Abbr. in Source display viewer" & Remarks
              strTestCaseResult="FAIL"            
           End If
          End If
         
  
        'Verify Refresh Subscription Toggle Option
         If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE80")) OR Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE88"))Then
            strTemp= "WPFObject(""ContentControlEx"", ""Refresh Subscription"", 2)"
            Set objTemp= Sys.Process("EdgeClient").FindChild("Name",strTemp,50, True)  
            'Click on Refresh button
            If objTemp.Exists then
              objTemp.Click 
              strTCRemarks= "Subscription Column is refreshed" & Remarks
              strTestCaseResult="PASS"
            Else
              strTCRemarks= "Subscription Column is not refreshed" & Remarks
              strTestCaseResult="FAIL"
            End If          
         End If
         
        If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE89")) then  
          'Select the Level 3 Souce
           'Call sGridSelection(strParameters)    
            strTemp= "WPFObject(""ContentControlEx"", ""Refresh Subscription"", 2)"
            Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
             'Click on Refresh button
             If objTemp.Exists then
               objTemp.Click 
               strTCRemarks= "Subscription Column is refreshed on by Right Click on level3 Source" 
               strTestCaseResult="PASS"
             Else
               strTCRemarks= "Subscription Column is not refreshed on by Right Click on level3 Source" 
               strTestCaseResult="FAIL"
             End If    
         End If 
        End If 
     
      Set objTemp = Nothing 
      Set objUserId = Nothing 
      Set objPwd = Nothing 
      Set objOk = Nothing  
      
   If Err.Number > 0 Then
    Log.Warning("Error in 'sSubscripton', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
           
End Sub  
     
'****************************************************************************************************************************************************************
'Testcase :TC_SOURCE:81-84 Verify "Open Global STP and CN STP" functionalities
Sub sSTP(strParameters)

    On Error Resume Next  
    
    Dim strTemp, objTemp , strATP
    
    strCategory=getSplitValue(strParameters,"CATEGORY")
    strSource_Name=getSplitValue(strParameters,"SOURCE")
    strLevel2Source = getSplitValue(strParameters,"Level2Source")
    strLevel3src_Name=getSplitValue(strParameters,"WORKSPACE")
    strTemp=getSplitValue(strParameters,"RequiredButton")
    strTestDataFile = getSplitValue(strParameters,"TestDataFile") 
    blnFlag=False
    
    'Open Source Disply View Module
    Call sOpenSourceDispalyViewer()
    Call sGridSelection(strParameters)
  
   
     'Click on Open Global STP button
    ' strTemp = "WPFObject(""ContentControlEx"", ""Open Global STP"", 2)"   
     If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE81"))OR Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE83")) Then   
         Delay 200
        'Select the required row and right click 
         strTemp1="WPFObject(""SourceTreeListView"")"    
         Set GridControl=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).FindChild("Name",strTemp1,50,True)
   
         objRowControl = GridControl.FindAllChildren("ClrClassName","RowControl",10,true)        
         For i = 0 to ubound(objRowControl)
            log.Message objRowControl(i).DataContext.Row.Description
            If (objRowControl(i).DataContext.Row.Description=strLevel3src_Name) Then 
              objRowControl(i).ClickR
              Exit For
            End If
         Next   
        Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").FindChild("Name",strTemp,50,True)
        Remarks =  " by Right Click"
     End If
     
     If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE82")) OR Ucase(Trim(strCategory)) = Ucase(Trim("TC_SOURCE84")) Then       
        Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        Remarks = ""
     End If
     
     If objTemp.Exists Then         
         objTemp.Click 
         Call sExcelFullHistory()
         'Verify if the  STP file is opened in excel
            objArray = Sys.FindAllChildren("ProcessName","EXCEL", 5,True)
            For i=0 to ubound(objArray)
              set oSTP_ExcelObj = objArray(i).FindChild("WndCaption", "*"&strLevel3src_Name&"*",1,True)
              If oSTP_ExcelObj.Exists = True Then 
                Delay 200 
                If Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT99"))Then 
                  Set netUIHWND =  Sys.Process("EXCEL", 2).Window("XLMAIN", strTestDataFile &"*", 1).Window("EXCEL2", "", 2).Window("MsoCommandBar", "Ribbon", 1).Window("MsoWorkPane", "Ribbon", 1).Window("NUIPane", "", 1).Window("NetUIHWND", "", 1)
                  Call Sys.Keys("~Y")  
                  Call Sys.Keys("YS")                              
                  'Call NetUIHWND.Keys("YS")
                  Set objOK = Sys.Process("EXCEL", 2).WinFormsObject("AboutForm").WinFormsObject("button1")
                  If objOK.Exists Then 
                    objOK.Click 
                    objArray(i).Close
                    strTCRemarks= "CN STP data file is opened with EDGE Tab on it " & Remarks 
                    log.Message "CN STP data file is opened with EDGE Tab on it " & Remarks                     
                    strTestCaseResult="PASS"
                    blnFlag = True
                    Exit For  
                  End If
                End If              
                objArray(i).Close
                strTCRemarks= "STP data file is opened in excel" & Remarks 
                strTestCaseResult="PASS"
                blnFlag = True
                Exit For              
              End If
             Next         
     End If
     
     If blnFlag = False then 
        strTCRemarks= "STP data file is not opened in excel"
        strTestCaseResult="FAIL"       
     End If
     
     
  If Err.Number > 0 Then
    Log.Warning("Error in 'sSTP', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub     

'****************************************************************************************************************************************************************
'                                          Source Display Veiwer Scripts are completed.
'****************************************************************************************************************************************************************
 

'****************************************************************************************************************************************************************
'                                          Source-Workspace Scripts are Statred.
'****************************************************************************************************************************************************************
''**************************************************************
'Start    : First Script started from this procedure.
'Testcases: Verify all function related SouceWorkSpace 
'Start Date    : 30/4/2018
'Created by: Chethana S R
'Total Number of testcases: 179
' Last Updated: 
'************************************************************** 

'Select the required workspace and click on open for edit Source button
Sub sOpenSourceWorkSpace(strParameters)
'Sub sOpenSourceWorkSpace()

    On Error Resume Next      
    Dim strTemp, objTemp 
    
    strButton = getSplitValue(strParameters,"Button")    
    'strButton = "WPFObject(""ContentControlEx"", ""Open For Edit (Source Schedule)"", 2)"
    
    If strButton = "" Then 
      strButton = "WPFObject(""ContentControlEx"", ""Open For Edit (Source)"", 2)"
    End If
    
   ' Open Source Disply View Module
    Call sOpenSourceDispalyViewer()
    Call sEdgeProcessor()
    Call sGridSelection(strParameters)
    
    DescText=Replace(aqDateTime.Now,"/","-")
    DescText=Replace(DescText,":","_") 
    DescLocalText = DescText

    ''Clicking on "New Workspace" Button and selecting "Open for Edit(Souce)" option 
    strTemp="WPFObject(""ContentControlEx"", ""New Workspace"", 2)"
    Set objNewWorkspace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    If objNewWorkspace.Exists = True then
      objNewWorkspace.Click     
      strTemp=strButton      
      Set objopenforEdit=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objopenforEdit.Exists then
        objopenforEdit.Click            
      End If
    
      ''Waiting for Workspace Name prompt
      strTemp="WPFObject(""HwndSource: WorkspaceNamePrompt"", ""Please provide a new Workspace Name"")"
      Set objNewWrkSpace_Name=Sys.Process("EdgeClient").WaitChild(strTemp,60000)
        If objNewWrkSpace_Name.Exists = True then
          strTemp="WPFObject(""ChangeNameTextEdit"")"
          ''Entering Workspace Name
          Set objNewWrkSpace_Txtbox=objNewWrkSpace_Name.FindChild("Name",strTemp,9,True)
            If objNewWrkSpace_Txtbox.Exists = True then
              objNewWrkSpace_Txtbox.Click
              objNewWrkSpace_Txtbox.Text=DescText
              ''Clicking on Ok Button 
              strTemp="WPFObject(""OkButton"")"
              Set objNewWrkSpace_okbtn=objNewWrkSpace_Name.FindChild("Name",strTemp,9,True)
              If objNewWrkSpace_okbtn.Exists = True then
                objNewWrkSpace_okbtn.Click 
                Call sEdgeProcessor()
                Call sCloseSWV()              
              End If
            End If
        End If
      End If
      
      
  If Err.Number > 0 Then
    Log.Warning("Error in 'sOpenSourceWorkSpace', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub


'****************************************************************************************************************************************************************
'Testcase :TC_SourceWorkspace_1 :Check opening the workspace 
Sub sOpeningWorkSpace(strParameters)
  On Error Resume Next
  
  Dim strTemp, objTemp , ArrTemp(20), IntCount 
  
  'Open the souce workspace
  
  strCategory=getSplitValue(strParameters,"CATEGORY")
  
    If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SourceWorkspace_1")) Then
      Call sOpenSourceWorkSpace(strParameters)
      strTemp ="WPFObject(""LayoutPanel"", """", 1)" 
      Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WaitChild(strTemp,60000)
      strText = objTemp.Caption
  
      'Verify the selected workspace is opened or not
      If objTemp.Exists And Ucase(Trim(strText)) = Ucase(Trim("Source Workspace (For Edit) - "&DescText)) Then
        strTCRemarks= DescText&" Workspace is opened"
        strTestCaseResult="PASS"
      Else
         strTCRemarks= DescText&" Workspace is not opened"
         strTestCaseResult="FAIL"
      End IF
    End If
    
    'Testcase :TC_SourceWorkspace_2 :Check the labels  on the Tool bar.
    If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SourceWorkspace_2")) Then
        'close the Layoutpannel 1 
        IntCount = 0    
        strTemp = "WPFObject(""BarControl"", """", 1)"
        Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("BarContainerControl", "", 1).FindChild("Name",strTemp,50,True)
        'Compare the displayed Label
        If objTemp.Exists Then
          For IntI = 0 to 14
            strLabel = "Label" & CStr(IntI)
            arrField(Int1) = getSplitValue(strParameters,strLabel)
            strText(IntI)  = objTemp.Items.Item(IntI).WPFControlText  
            If Ucase(Trim(arrField(Int1))) = Ucase(Trim(strText(IntI))) Then
              IntCount = IntCount+1
            End If      
          Next 
        End If
  
        If IntCount = 15 Then 
          strTCRemarks = "All Buttons Displayed Correctly"
          strTestCaseResult="PASS"
        Else
          strTCRemarks = "Not all Buttons Displayed Correctly"
          strTestCaseResult="FAIL"
        End If
    End If
    'Testcase :TC_SourceWorkspace_3 : Verify Status of Buttons  on Workspace tool bar
     If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SourceWorkspace_3"))Then     
       '         
'          'Get the status of each button     
           blnFlag =  sVerifyLabel(strParameters)
      
            'Compare the Status of all required button
           If blnFlag(0) = False AND blnFlag(1) = False And blnFlag(2) = False And blnFlag(3) = False And blnFlag(4) = False And _
              blnFlag(5) = False And blnFlag(6) = False And blnFlag(7) = True And blnFlag(8) = True And blnFlag(9) = True Then 
              strTCRemarks = "Status of All buttons are Correct"
              strTestCaseResult="PASS"
           Else
              strTCRemarks = "Status of All buttons are not as Expected"
              strTestCaseResult="FAIL"             
           End If           
     End If
    
     'Testcase :TC_SourceWorkspace_4 : Check the Buttons  on Workspace tool bar for level1 source
     If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SourceWorkspace_4")) Then

         'Select the Level1 Source:
          Call sGridSelection(strParameters)
         'Get the status of each button     
          blnFlag =  sVerifystatus(strParameters)
      
          'Compare the Status of all required button
          If blnFlag(0) = False AND blnFlag(1) = False And blnFlag(2) = False And blnFlag(3) = False And blnFlag(4) = False And _
             blnFlag(5) = False And blnFlag(6) = False And blnFlag(7) = True And blnFlag(8) = True And blnFlag(9) = True Then 
             strTCRemarks = "Status of All buttons are Correct for Level1 Source"
             strTestCaseResult="PASS"             
           Else
             strTCRemarks = "Status of All buttons are not as Expected for Level1 Source"
             strTestCaseResult="FAIL"                         
          End If          
     End If
     
     'Testcase :TC_SourceWorkspace_5 : Check the Buttons  on Workspace tool bar for level3 source without "Series ID"
     If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SourceWorkspace_5")) Then
          'Select the Level1 Source:
          Call sGridSelection(strParameters)
          Call sEdgeProcessor()
         'Get the status of each button     
          blnFlag =  sVerifystatus(strParameters)
      
          'Compare the Status of all required button
          If blnFlag(0) = True AND blnFlag(1) = True And blnFlag(2) = True And blnFlag(3) = True And blnFlag(4) = False And _
             blnFlag(5) = True And blnFlag(6) = False And blnFlag(7) = True And blnFlag(8) = True And blnFlag(9) = True Then 
             strTCRemarks = "Status of All buttons are Correct for Level3 Source without Series ID"
             strTestCaseResult="PASS"             
           Else
             strTCRemarks = "Status of All buttons are not as Expected for Level3 Source without Series ID"
             strTestCaseResult="FAIL"                         
          End If         
     End If
     
     'Testcase :TC_SourceWorkspace_6: Check the Buttons  on Workspace tool bar for level3 source with "Series ID"
     If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SourceWorkspace_6")) Then
          'Select the Level1 Source:
          Call sGridSelection(strParameters)
          Call sEdgeProcessor()
          
         'Get the status of each button     
          blnFlag =  sVerifystatus(strParameters)          
          'Compare the Status of all required button
          If blnFlag(0) = False AND blnFlag(1) = False And blnFlag(2) = True And blnFlag(3) = True And blnFlag(4) = False And _
             blnFlag(5) = True And blnFlag(6) = False And blnFlag(7) = True And blnFlag(8) = True And blnFlag(9) = True Then 
             strTCRemarks = "Status of All buttons are Correct for Level3 Source With Series ID"
             strTestCaseResult="PASS" 
             Call sCloseSWV() 
             Call SourceWorkSpacevwr()          
           Else
             strTCRemarks = "Status of All buttons are not as Expected for Level3 Source With Series ID"
             strTestCaseResult="FAIL"                               
          End If         
     End If
  Set objTemp = Nothing 
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sOpeningWorkSpace', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'****************************************************************************************************************************************************************
'Fucntion to Verify Active/Inactive status of all buttons in Source Workspace window
Function sVerifystatus(strParameters)

  On Error Resume Next
  Dim blnFlag(20),ArrTemp(20)
'Get the status of each button
           For IntI = 0 to 9
              strLabel = "Label" & CStr(IntI)
              ArrTemp(IntI) = getSplitValue(strParameters,strLabel)
              Set objTemp = Sys.Process("EdgeClient").FindChild("Name",ArrTemp(IntI),50,True)
              strText = Ucase(Trim(objTemp.WPFControlText))
              If  strText = Ucase(Trim("Paste Folder")) OR strText = Ucase(Trim("Workspace")) Then 
                objTemp.Click
                Delay 200
              End If
              If objTemp.IsEnabled then
                blnFlag(IntI) = True
              Else
                blnFlag(IntI) = False
              End If
           Next             
           sVerifystatus = blnFlag
           Set objTemp = Nothing 

  If Err.Number > 0 Then
    Log.Warning("Error in 'sVerifystatus', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Function 

'****************************************************************************************************************************************************************
'Testcase :TC_SourceWorkspace_9: Verify Successfully saved workspace message when we add folder and try to save workspace.
'Testcase :TC_SOURCE_PRT03 and TC_SOURCE_PRT04: Check for adding Top/Bottom level2 source folder 

Sub sAddFolder(strParameters)
'Sub sAddFolder()

  On Error Resume Next
  Dim strTemp, onjTemp ,intTotNodeCnt, Level3Count, Level4Count
  
  
   strCategory=getSplitValue(strParameters,"CATEGORY")
   strFolderCount=getSplitValue(strParameters,"FolderCount")
   strSource_Name=getSplitValue(strParameters,"SOURCE")
   strLevel2src_Name=getSplitValue(strParameters,"Level2Source")
   strLevel3src_Name=getSplitValue(strParameters,"WORKSPACE")
   blnFlag = False
   IntCnt = 0
   
'   'strCategory=getSplitValue(strParameters,"CATEGORY")
'   strFolderCount=1
'   strSource_Name=Test
'   strLevel2src_Name=Automation_Folder
'   strTestCase_no = "TC_SOURCE_PRT05"
'   'strLevel3src_Name=getSplitValue(strParameters,"WORKSPACE")
   
   'Open for Edit Source
   Call sOpenSourceWorkSpace(strParameters)
   
      'Select any Level 2 Source 
     Call sGridSelection(strParameters)
     Call sEdgeProcessor()
      'strRequiredDesc = DescText
  'Enter valid input  in "Combo Box"   
     strTemp = "WPFObject(""SpinEdit"", """", 1)"
     Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
     If objTemp.Exists Then
        objTemp.Keys("") 
        objTemp.Keys(strFolderCount)
        Delay 200 
      End If
      
  
      'Click on "Add Folder" button
      strTemp = "WPFObject(""ContentControlEx"", ""Add Folder"", 2)"
      Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objTemp.Exists Then
        objTemp.Click
        Delay 2000,"New Folder..."
      End If
      DescTextLocal =  CStr(1) & "-" & DescText 
  
     'Getting no. of Rows under level 2
     IntCount = sGetRowCount(strParameters)
     Delay 2000
     
     strTemp="WPFObject(""SourceTreeListView"")"   
     Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
     
     IntCount(2) = IntCount(2) - (strFolderCount-1)
     For I = 0 to strFolderCount-1    
       'Enter the Description and Description Local   
        DescText = CStr(I+1) & "-" & DescText  
        Set objDescCell=objTemp.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(IntCount(2))    
        Call objDescCell.Content.set_Description(DescText)
        Call objDescCell.Content.set_DescriptionLocal(DescText)     
        strRequiredDesc = DescText    
        IntCount(2) = IntCount(2)+1
       Next   
  
    'Verify the Size of change   
    If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT58"))Then         
        'Validate Size if Change
        strTemp= "WPFObject(""TextEdit"", """", 1)"
        'strEnvi = "Edge ( US Integration )" 
        Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).FindChild("Name", strTemp, 50, True)
        If objTemp.Exists Then 
          intCnt = objTemp.wText      
          If Cint(intCnt) = 3 Then 
            strTCRemarks =  "Size of changes is updated to '3'"
            strTestCaseResult = "PASS"
          Else
            strTCRemarks =  "Size of changes is updated to '3'"
            strTestCaseResult = "PASS"
          End If
        End If
        
        'Close all Opend Windows    
       ' Call sCloseSWV()
        'Delay 100
        Call sCloseWithYes(1299)
        Delay 1000  
        Call SourceWorkSpacevwr()
      
        'Exit Sub 
        Exit Sub
    End If
    
    
     'Save the Modified Workspace.
    If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SourceWorkspace_9")) Then
      Call fSaveWorkspace()
      Call sEdgeProcessor()
      Exit Sub
    End If
    
    'Upload the Workspace
    If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SourceWorkspace_11")) Then
      Call fUploadWorkSpace()
      Call sEdgeProcessor()
      Call  sOpenSourceDispalyViewer()
      
'      If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT09"))Then 
'          Exit Sub
'      End If
       'Getting no. of Rows under level 2
      IntCount = sGetRowCount(strParameters) 
      Call sEdgeProcessor()
      
      strTemp = "WPFObject(""SourceTreeListView"")"
      Set objGridControl = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
     
     'Verify Added Level 3 Folder is displayed or not
      intTotNodeCnt=objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Count  
      
      'Verifying  added Folder/Folders  
          For intK= 0 to intTotNodeCnt-1             
             If Ucase(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(intK).Content.Description)=Ucase(DescTextLocal) then 
                   IntI = CInt(Left(DescTextLocal,1))+1
                   DescTextLocal = CStr(IntI) &"-" & DescTextLocal
                   IntCnt = IntCnt+1       
            End If
          Next
 
    
      If IntCnt = CInt(strFolderCount) Then 
            If IntCnt > 1 Then
                strText = "folders are"
            ElseIf IntCnt = 1 Then
                 strText = "folder " & DescText & " is"  
            End If 
            
            strTCRemarks = "The newely created level3 source "& strText &" dispalyed in source dispaly viewer"
            strTestCaseResult="PASS" 
               ' blnFlag = True  
      Else     
       'blnFlag = False Then 
         strTCRemarks = "The newely created level3 source "& strText &" not dispalyed in source dispaly viewer"
         strTestCaseResult="FAIL" 
      End If
    End If 
    
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sAddFolder', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If  
End Sub
'****************************************************************************************************************************************************************
'Testcase :TC_SourceWorkspace_10: Verify the newly added folder Displayed or not
 
Sub sOpenSavedWorkSpace(strParameters)
'Sub sOpenSavedWorkSpace()

  On Error Resume Next  
  
  'Open Source Workspace Viewer Window
  Call sOpenSourceWSViewer()
  
''Selecting Records 
      strTemp="WPFObject(""PendingChangeGridControl"")"
      Set objGridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,True)
      Set objTableView = objGridControl.WPFObject("PendingChangeTableView")
      intRowcnt=objGridControl.wRowCount
      
  'Open the Workspace from Source Workspace Viewer
      Call sOpenWorkspace(strParameters)
   
      Call objGridControl.ClickCell(0 , "Workspace Name")      
      For intI = 1 to intRowcnt-1  
        strWorkSpaceName= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Grid", "", 1).WPFObject("PendingChangeGridControl").WPFObject("PendingChangeTableView").WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intI).WPFObject("CellsControl", "", 1).WPFObject("LightweightCellEditor", "", 1).WPFObject("InplaceBaseEdit", "", 1).DisplayText   
        Exit For
      Next    
          
      'Open the selected workspace      
          strTemp = "WPFObject(""ContentControlEx"", ""Open Workspace"", 2)"          
          Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,60,true)
          If objTemp.Exists  Then  
            objTemp.Click
            Call sEdgeProcessor
            strTemp = "WPFObject(""LayoutPanel"", """", 2)"
            Set objTemp=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 2)
            Call sCloseSWV()
             If Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT09")) Then
                Exit Sub 
             End If           
          End If 
'    
'  'Verify Added folder is shown or not  
    IntCount = sGetRowCount(strParameters)  
    
    Set objDescCell=Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).WPFObject("SourceTreeListControl").WPFObject("SourceTreeListView").Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(IntCount(2))
    strText =  objDescCell.Content.get_Description
    
    If Ucase(Trim(strText)) = Ucase(Trim(DescText)) Then
      strTCRemarks = "The newly added folder is Displayed "
      strTestCaseResult="PASS" 
      Err.Clear  
      Call sCloseSWV() 
      Call SourceWorkSpacevwr()      
    Else
      strTCRemarks = "The newly added folder is not Displayed "
      strTestCaseResult="FAIL" 
    End If 
    
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sOpenSavedWorkSpace', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'****************************************************************************************************************************************************************'Func
'Function to get the Rowcount of level 1 , 2 and 3

Function sGetRowCount(strParameters)
'Function sGetRowCount()

On Error Resume Next
Dim IntCount(3)
'strEnvi = "Edge ( US Integration )" 
  
  strButton = getSplitValue(strParameters,"Button")
  if strButton ="" then 
    strTemp = "WPFObject(""SourceTreeListView"")"
  else
    strTemp = strButton 
  End If
  
  Set GridControl = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  
  strSource_Name=getSplitValue(strParameters,"SOURCE")
  strLevel2src_Name=getSplitValue(strParameters,"Level2Source")
  strLevel3src_Name=getSplitValue(strParameters,"WORKSPACE") 
  strLevel4src_Name=getSplitValue(strParameters,"Level4") 

'   
'    strSource_Name="Test"
'    strLevel2src_Name = "Automation_Level2-CopyFolder"
'  '  strLevel3src_Name = "Find-1"
  
  intTotNodeCnt=GridControl.Nodes_2.Count    
     For intI=0 to intTotNodeCnt-1     
       If Ucase(GridControl.Nodes_2.Item(intI).Content.Description) = Ucase(strSource_Name) Then          
            GridControl.Nodes_2.Item(intI).ExpandAll 
            IntCount(0) =intI
          Exit For
        End If
     Next
     
     intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
     For intJ=0 to intTotNodeCnt-1
        If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) Then            
              GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll           
              IntCount(1) =intJ
            Exit For
        End If
     Next
   
     intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count 
     If Ucase(strLevel3src_Name) <> "" Then 
       For intK=0 to intTotNodeCnt-1
          If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel3src_Name) then
              IntCount(2) =intK               
              Exit For
         End If
       Next
     Else       
       IntCount(2)=intTotNodeCnt-1        
     End If 
     
     
     intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intk).Nodes.Count 
     If Ucase(strLevel4src_Name) <> "" Then 
       For intL=0 to intTotNodeCnt-1
          If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Nodes.Item(intL).Content.Description)=Ucase(strLevel4src_Name) then
              IntCount(3) =intL               
              Exit For
         End If
       Next
     Else       
       IntCount(3)= intTotNodeCnt-1        
     End If 
     'msgbox IntCount(2)
     sGetRowCount = IntCount  
     
  If Err.Number > 0 Then
    Log.Warning("Error in 'sGetRowCount', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If  
  
End Function 

'****************************************************************************************************************************************************************'Func
'Function to Save the Workspace 

Function fSaveWorkspace()

On Error Resume Next
'Saving the Workspace

    
    strTemp="WPFObject(""ContentControlEx"", ""Workspace"", 2)"
    Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    If objTemp.Exists Then
      objTemp.Click      
      strTemp="WPFObject(""ContentControlEx"", ""Save Workspace"", 2)" 
      Set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
     
      'Click on save Workspace Button
      If objTemp.Exists Then  
         objTemp.Click
         Delay(3000) 
        'Clicking on Do you want to Save message box
        strTemp="WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Confirm save."")"
        Set objTemp=Sys.Process("EdgeClient").WaitChild(strTemp,60000)           
        If objTemp.Exists Then 
          strTemp = "WPFObject(""Button_Yes"")"
          set objTemp=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
            objTemp.Click
          Set objTemp = Sys.Process("EdgeClient").Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", """")",600000)
          If objTemp.Exists Then 
            objTemp.Keys ("O")
            If Ucase(Trim(strCategory)) = Ucase(Trim("TC_SourceWorkspace_9")) Then
              strTCRemarks = "'Confirm Save' Message displayed"
              strTestCaseResult="PASS" 
              Call sCloseSWV()
            End If
          End If
        End If  
      Else
          strTCRemarks = "'Confirm Save' Message is not displayed"
          strTestCaseResult="PASS" 
      End If 
    End If

End Function 
'****************************************************************************************************************************************************************'Func
'Function to Upload the Workspace 

Function fUploadWorkSpace()

On Error Resume Next 

Dim strTemp, objTemp

   Delay 2000
  'Click on Workspace button
  strTemp="WPFObject(""ContentControlEx"", ""Workspace"", 2)"
    Set objWrkSpace=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true)
    If objWrkSpace.Exists = True then    
      objWrkSpace.Click
      If objWrkSpace.Exists = True then
        strTemp="WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"
        set objwrkspcUpload=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        If objwrkspcUpload.Exists = True then
        'Click on Upload Button
          objwrkspcUpload.Click
          strTemp="WPFObject(""HwndSource: WindowContentHolder"", ""Confirm"")"
          Set objConfirm=Sys.Process("EdgeClient").WaitChild(strTemp,60000)
           If objConfirm.Exists = True then
            objConfirm.Keys "[Enter]"   
            If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT77"))or Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT73"))Then 
                  'Verify Error Message:
                  strTemp = "WPFObject(""TextBlock_Message"")"
                  Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Error").FindChild("Name",strTemp,50,True)
                  strText = objTemp.Text
                  if strText = "Validation failed. Upload not attempted."Then 
                     'Click on Ok button 
                      strTemp = "WPFObject(""Button_OK"")"
                      Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Error").FindChild("Name",strTemp,50,True)
                      objTemp.click
                      strTCRemarks = "Validation window appeared to show duplicate series "
                      strTestCaseResult="PASS"
                      Exit Function  
                  Else
                      strTCRemarks = "Validation window appeared to show duplicate series"
                      strTestCaseResult="PASS"  
                      Exit Function                     
                  End If 
                End If         
            Set objConfirm = Sys.Process("EdgeClient")._
            Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Upload Workspace"")",600000)'._
             If objConfirm.Exists = True then
                Sys.Keys("O")                
                'strTCRemarks = strTCRemarks & "<br />" & "'Upload successful' Message displayed"
                strTestCaseResult="PASS" 
                Call sEdgeProcessor              
             End If
           End If
          End If
        Else
            strTCRemarks = "'Upload successful' Message is not displayed"
            strTestCaseResult="FAIL" 
        End IF
      End If

End Function
'****************************************************************************************************************************************************************
'                                          Project Team Regression Scripts are Statred.
'****************************************************************************************************************************************************************
''**************************************************************
'Start    : First Script started from this procedure.
'Testcases: Verify all function related Project Team Regression
'Start Date    : 11/5/2018
'Created by: Chethana S R
'Total Number of testcases: 
'Last Updated: 
'************************************************************** 

'Testcase : TC_SOURCE_PRT01 and TC_SOURCE_PRT02 : Check for adding Top/Bottom level2 source folder 

Sub sNSO(strParameters)
'Sub sNSO()

  Dim objTemp , objTemp1, strTemp, arrField(10), blnFlag, intTotNodeCnt
  On Error Resume Next
  
  DescText=Replace(aqDateTime.Now,"/","-")
  DescText=Replace(DescText,":","_")
  
  strSource_Name=getSplitValue(strParameters,"SOURCE")
  strLevel2SourceName=getSplitValue(strParameters,"Level2SourceName")
  strCategory=getSplitValue(strParameters,"CATEGORY")
  blnFlag = False
  
  
  
  
  ''Open source module
  Call sOpenSourceDispalyViewer()
  Call sEdgeProcessor()
  
  ''Open New Source Organization Window
  Call sOpenNSO(strParameters)
  
  ''Enter a valid Data to Add new Source 
    For IntI = 1 to 9       
         DescText=Replace(DescText," ","-")
         strField = "Text" & CStr(IntI)
         arrField(IntI)= getSplitValue(strParameters,strField)
         
            'Verify the text Fields in New Source (Level1) Window
          strTemp = "WPFObject("&arrField(IntI)&")"   
          Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
          
          If  objTemp.Exists Then
            'Select Check Boxes
            Select Case IntI
              Case 1 
                  strDescription = DescText
                  objTemp.set_Text(DescText)    
              Case 4
                  objTemp.set_Text("https://google.com")  
              Case 5
                  objTemp.set_Text("MacroCapFlag") 
              Case  7 
                  objTemp.set_SelectedIndex(1)
              Case 8
                  objTemp.set_IsChecked(True)
              Case 9
                   If Ucase(strCategory) = Ucase("TC_SOURCE_PRT01")Then 
                      J = 0
                      MyText = "top of the"
                      strTemp1 = "WPFObject(""InsertSourceAfterCheckEdit"")"
                      Set objTemp1 = Sys.Process("EdgeClient").FindChild("Name", strTemp1, 50, True) 
                      'Check the Top check box   
                      objTemp1.set_IsChecked(True)  
                   ElseIf Ucase(strCategory) = Ucase("TC_SOURCE_PRT02") then                     
                      Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Root").WPFObject("Root").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("Grid", "", 1).WPFObject("PART_ContainerContent").WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("StackPanel", "", 1).WPFObject("StackPanel", "", 10).WPFObject("InsertSourceAfterComboEdit")
                      objTemp.set_Text(strLevel2SourceName)
                   End If
              Case Else
                   objTemp.set_Text(DescText)        
           End Select
          End If  
    Next
    
    'Click on Save button
       strTemp = "WPFObject(""OkButton"")"
       Set objTemp= Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
       objTemp.Click 
       Call sEdgeProcessor
       Delay 2000
       
       
'       strSource_Name = "Hong Kong"
'       strLevel2SourceName="Bank of East Asia"
'       strDescription = "5-11-2018-6_20_39-PM"
'       strCategory = "TC_SOURCE_PRT02"
       
    ''object Identification for Grid
    strTemp="WPFObject(""SourceTreeListView"")"   
    Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  
       intTotNodeCnt=objGridControl.Nodes_2.Count  
       For intI=0 to intTotNodeCnt-1         
          If Ucase(objGridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strSource_Name) then 
             ' objGridControl.Nodes_2.Item(intI).ExpandAll    
              Exit For
          End If
       Next    
       'IntCount = sGridSelection(strParameters) 
       Delay 2000 
       
       'For TC_SOURCE_PRT02 Test Case To Find out IntJ value
       If Ucase(strCategory) = Ucase("TC_SOURCE_PRT02") Then
            MyText = "bottom of the" & strDescription &"under the"
           'Selceting the Second Level   
           intTotNodeCnt=objGridControl.Nodes_2.Item(intI).Nodes.Count
           For intJ=0 to intTotNodeCnt-1
              If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2SourceName) Then                   
                Exit For
              End If
           Next
       End If
  
    'Verification of Added Source in Source Module 
    for IntK = 0 to 4 
      If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strDescription) Then 
          blnFlag = True
          strTCRemarks = "New Level2 Source '" & strDescription & "'  is added to '"& MyText & strSource_Name &"' Country in Source module"     
          strTestCaseResult="PASS"
          Exit For
       End IF
       intJ=intJ+1
    Next
     
    
  If blnFlag = False Then
    strTCRemarks = "New Level2 Source '" & strDescription & "'  is not added to the '" & MyText & strSource_Name &"' Country in Source module" 
    strTestCaseResult="FAIL"
  End If
  
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sNSO', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub 

'****************************************************************************************************************************************************************
'Testcase :TC_SOURCE_PRT05: Verify create source folder functionality under multiple same levels

Sub sMultipleLevelFolder(strParameters)
'Sub sMultipleLevelFolder()

  Dim objTemp , strTemp,  blnFlag, intTotNodeCnt, Level4Count, IntCnt, Level2Cnt
  'Dim IntCount(3)
  On Error Resume Next
  
  DescText=Replace(aqDateTime.Now,"/","-")
  DescText=Replace(DescText,":","_")
  

   strFolderCount=getSplitValue(strParameters,"FolderCount")
   strSource_Name=getSplitValue(strParameters,"SOURCE")
   strLevel2src_Name=getSplitValue(strParameters,"Level2Source")
   strLevel3src_Name=getSplitValue(strParameters,"WORKSPACE")
   blnFlag = False

  

'   strFolderCount=1
'   strSource_Name="Test"
'   strLevel2src_Name="Automation_AddFolder"


   'Open for Edit Source
   Call sOpenSourceWorkSpace(strParameters)
   Call sEdgeProcessor()
   
   'Enter valid input  in "Combo Box"   
     strTemp = "WPFObject(""SpinEdit"", """", 1)"
     Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
     If objTemp.Exists Then
        objTemp.Keys("") 
        objTemp.Keys(strFolderCount)
        Delay 200 
      End If
     
      
    strTemp="WPFObject(""SourceTreeListView"")"   
    Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  
      'Expand Level 1
     intTotNodeCnt=objGridControl.Nodes_2.Count    
     For intI=0 to intTotNodeCnt-1     
       If Ucase(objGridControl.Nodes_2.Item(intI).Content.Description) = Ucase(strSource_Name) Then          
           Call objGridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 1).WPFObject("RowMarginControl", "", 1).Click          
          Exit For
        End If
     Next
     
     ''Expand Level 2 and Sleect the Multiple Level 3 Rows 
     intTotNodeCnt=objGridControl.Nodes_2.Item(intI).Nodes.Count
     For intJ=0 to intTotNodeCnt-1
        If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) Then            
             Call objGridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", 2).WPFObject("RowMarginControl", "", 1).Click(33, 9)
             intRow=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(0).get_RowHandle
             objGridControl.Keys "^[Home]"       
             Call objGridControl.ClearSelectionCore
             Call objGridControl.FocusViewAndRow(objGridControl,intRow-1)
             objGridControl.SetFocusOnCurrentItem
             Call objGridControl.SelectRowCore(intRow-1)           
             Delay 2000
             FolderCnt = intTotNodeCnt
             
             'Select Level 3 Folder
             If Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT05")) Then 
                SYS.Keys("[Down]")
                FolderCnt = intTotNodeCnt-1
             End If
             intTotNodeCnt=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count           
             SYS.Keys("![Down]")
             Delay 200      
             For I = 0 to FolderCnt
               SYS.Keys("![Down]")
             Next
            
            Exit For
        End If
     Next
     
      Delay 2000 , "Please Wait While selecting"      
     
      'Click on "Add Folder" button
      strTemp = "WPFObject(""ContentControlEx"", ""Add Folder"", 2)"
      Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objTemp.Exists Then
        objTemp.Click
        Delay 2000,"New Folder..."
      End If

      
    '  Nodes_2.Item(IntI)).Nodes.Item(IntJ).Nodes.Item(IntP).Nodes.Item(Level4Count-1) 
     'Enter the Description and Description Local for each Added Cell  at Level 3   
        For IntP = 0 to intTotNodeCnt-1
          Level4Count = objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Item(IntP).Nodes.Count          
          Set objDescCell= objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Item(IntP).Nodes.Item(Level4Count-1)
          Call objDescCell.Content.set_Description(DescText)
          Call objDescCell.Content.set_DescriptionLocal(DescText)   
       Next 
       
   ''Enter the Description and Description Local for each Added Cell  at Level 2   
     If Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT06")) Then 
      IntK = (objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count)-1
      Set objDescCell=objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Item(IntK)
      Call objDescCell.Content.set_Description(DescText)
      Call objDescCell.Content.set_DescriptionLocal(DescText)    
    End If       
    
      'Upload the Workspace
       Call fUploadWorkSpace()
       Call sEdgeProcessor()
       
 'Verify Added Folder displayed in Display viewer or not
     
     'Open the Source DisplayViewer
       Call sOpenSourceDispalyViewer() 
       Call sEdgeProcessor()
       
    ' 'Getting no. of Rows under level 2
     IntCount = sGetRowCount(strParameters)
     Delay 2000
     
     strTemp="WPFObject(""SourceTreeListView"")"   
     Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
     
     'Verify Levle 2 Added Folder is displayed in Display Viewer or not 
     If Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT06")) Then     
     intTotNodeCnt=objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Count 
     For intJ=0 to intTotNodeCnt-1
        If Ucase(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(intJ).Content.Description)=Ucase(DescText) Then  
          blnFlag = True  
        End If
     Next
     End If
     
      'Verify Added Level4 Folder is displayed or not
     If Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT05")) OR Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT06")) Then  
        IntCnt = 0     
        For intK=0 to intTotNodeCnt-1
            Level4Count = objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(intK).Nodes.Count  
            If Level4Count > 0 Then
              If  Ucase(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(intK).Nodes.Item(Level4Count-1).Content.Description)=Ucase(DescText) then         
                  IntCnt = IntCnt+1                                    
              End If 
            End If    
         Next 
      End If
      
      If Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT06")) And blnFlag = True And IntCnt > 0  Then 
          strTCRemarks = "The newely added level3 and Level 4 source folder " & DescText &" is dispalyed in source dispaly viewer"
          strTestCaseResult="PASS" 
      ElseIf  IntCnt > 0  Then 
          strTCRemarks = "The newely added level4 source folder " & DescText &" is dispalyed in source dispaly viewer"
          strTestCaseResult="PASS"         
      ElseIF blnFlag = False Then      
          strTCRemarks = "The newely added level3 source folder " & DescText &" is not dispalyed in source dispaly viewer"
          strTestCaseResult="FAIL"       
      End If
 
  If Err.Number > 0 Then
    Log.Warning("Error in 'sMultipleLevelFolder', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
           
End Sub

'****************************************************************************************************************************************************************
'Testcase :TC_SOURCE_PRT08:Verify Source Folder after Amending the workspace.
'Testcase :TC_SOURCE_PRT09:Verify Source Folder after Deleting the workspace.


Sub sAmendWS(strParameters)
'Sub sAmendWS()

  Dim objTemp , strTemp,  blnFlag, intTotNodeCnt, Level4Count, IntCnt, Level2Cnt, strNewName
  'Dim IntCount(3)
  On Error Resume Next
  
   'strFolderCount=getSplitValue(strParameters,"FolderCount")
   strSource_Name=getSplitValue(strParameters,"SOURCE")
   strLevel2src_Name=getSplitValue(strParameters,"Level2Source")
   strLevel3src_Name=getSplitValue(strParameters,"WORKSPACE")
   'myNumber = Right(strLevel3src_Name,2)+2
   blnFlag = False


   'Open for Edit Source
   Call sOpenSourceWorkSpace(strParameters)
   Call sEdgeProcessor()
   
    DescText = strRequiredDesc 
    
    strTemp="WPFObject(""SourceTreeListView"")"   
    Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
'   
           'Call sEdgeProcessor()
    IntRowNumber = fWorkSpaceRowSelection(strParameters)
    Delay 2000
    
    'Amend the Existing Folder
     If Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT08"))   Then   
      'intReplaceNumber = CInt(Right(strLevel3src_Name,1)) 
      strNumber =  CInt(Right((objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Content.Description), 2))+1    
      strNewName =   strLevel3src_Name  & CStr(strNumber)   
      Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Content.set_Description(strNewName)
      Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Content.set_DescriptionLocal(strNewName)
     End If  
     
     'Delete the Existing folder
     If Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT09"))   Then 
          strTemp = "WPFObject(""ContentControlEx"", ""Delete Folder"", 2)"
          Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
          'Delete the Selected Folder
          If objTemp.IsEnabled Then 
            objTemp.Click
             strTemp ="WPFObject(""DXMessageBox"", """", 1)" 
            Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: WindowContentHolder", "Confirm").FindChild("Name",strTemp,50,True)
            If objTemp.Exists Then 
               SYS.Keys "[Enter]"
            End If
            Set PicObj = Utils.Picture
            Set PicObj = Sys.Desktop.Picture
            PicObj.SavetoFile(strLogFolder & "Screenshots\" & strTestCase_No &  "_" & picCount & ".jpg")
            picCount = picCount + 1    
            Delay 200
          End If
           'Save the Workspace
          Call fSaveWorkspace()          
          Call sCloseSWV() 
          'Open the Saved Workspace from Source Workspace Viewer         
          Call sOpenSavedWorkSpace(strParameters)
          PicObj.SavetoFile(strLogFolder & "Screenshots\" & strTestCase_No &  "_" & picCount & ".jpg")         
          strTCRemarks = "Deleted Folder "& DescText &" is not dispalyed under Source Workspace"
          strTestCaseResult="PASS"  
      End If
    
     ' If Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT08")) OR Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT10"))    Then                       
        'Upload the Workspace
        Call fUploadWorkSpace()
        Call sEdgeProcessor()
      'End If
  
   'Open Source Dispaly Viewer
    Call  sOpenSourceDispalyViewer()
      
   'Getting no. of Rows under level 2
    IntCount = sGetRowCount(strParameters)
    Delay 2000 
    'Call sEdgeProcessor()
      
    strTemp = "WPFObject(""SourceTreeListView"")"
    Set objGridControl = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
     
   'Verify Added Level 3 Folder is displayed or not
    intTotNodeCnt=objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Count  
  
  'Verifying  added Folder/Folders  
   If Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT08"))   Then    
        For intK= 0 to intTotNodeCnt-1             
           If Ucase(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(intK).Content.Description)=Ucase(strNewName) then 
            blnFlag= True  
            strTCRemarks = "Amended folder "& strNewName &" is uploaded"
            strTestCaseResult="PASS"   
          End If
        Next   
      
      If blnFlag = False Then 
             strTCRemarks = "Amended folder is not uploaded"
             strTestCaseResult="FAIL"   
      End If         
   End If

  If Err.Number > 0 Then
    Log.Warning("Error in 'sAmendWS', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub


'****************************************************************************************************************************************************************
'Function to select Row in workspace viewer
Function fWorkSpaceRowSelection(strParameters)
'Function fWorkSpaceRowSelection()

On Error Resume Next
Dim strTemp, objGridControl, IntRowNumber(4), strLevel3Category, strLevel2Category

Delay 2000 

  
     strSource_Name=getSplitValue(strParameters,"SOURCE")
     strLevel2src_Name=getSplitValue(strParameters,"Level2Source")
     strLevel3src_Name=getSplitValue(strParameters,"WORKSPACE")
     strLevel2Category= getSplitValue(strParameters,"LEVEL2CATEGORY")
     strLevel3Category= getSplitValue(strParameters,"Level3Category")
     strLevel2Source=getSplitValue(strParameters,"WorkSpaceLevel2")
     strLevel3Source=getSplitValue(strParameters,"WorkSpaceLevel3")
     strFolderCount=getSplitValue(strParameters,"FolderCount")
     strFirstGrid = getSplitValue(strParameters,"FirstGrid")
     intRowControl = 1


'     strLevel3Category="Select-1" 
     
''     intlen = len(strLevel3src_Name)-2
''     strLevel3src_Name = Left(strLevel3src_Name,9)
     
     
     If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT09"))Then
        strLevel3src_Name = DescText 
     End If
     
'     strSource_Name="Test"
'     strLevel2src_Name="Automation_Source1"
''     strLevel3src_Name="AmendName"
'     strTestCase_no = "TC_SOURCE_PRT10"

    strTemp="WPFObject(""SourceTreeListView"")"   
    Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  
    'Expand Level 1 in Workspace Viewer 
     intTotNodeCnt=objGridControl.Nodes_2.Count    
     For intI=0 to intTotNodeCnt-1     
       If Ucase(objGridControl.Nodes_2.Item(intI).Content.Description) = Ucase(strSource_Name) Then          
         objGridControl.Nodes_2.Item(intI).ExpandAll                       
         intRow=objGridControl.Nodes_2.Item(intI).get_RowHandle         
         Call sSelcetLayoutLevel(objGridControl, intRow)   
        ' intRowControl =intRow +1 
         'Call objGridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intRowControl).WPFObject("RowMarginControl", "", 1).Click(12, 10)
        Delay 200  
          Exit For
        End If
     Next
     
     ''Expand Level 2 in Workspace Viewer 
     intTotNodeCnt=objGridControl.Nodes_2.Item(intI).Nodes.Count      
     For intJ=0 to intTotNodeCnt-1
        If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2src_Name) Then            
          objGridControl.Nodes_2.Item(intI).ExpandAll       
          intRow=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
          Call sSelcetLayoutLevel(objGridControl, intRow) 
           'intRowControl =intRow  
           'Call objGridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intRowControl).WPFObject("RowMarginControl", "", 1).Click(40, 13)
           Delay 200
           Exit For  
        End If
     Next
     
     
      If Ucase(strLevel2Category) = Ucase("Select")  Then 
       For intJ=0 to intTotNodeCnt-1  
       If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2Source) then
        intRow=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
        objGridControl.Keys "^[Home]"
        Call objGridControl.ClearSelectionCore
        Call objGridControl.FocusViewAndRow(objGridControl,intRow)
        objGridControl.SetFocusOnCurrentItem        
        Call objGridControl.SelectRowCore(intRow)
        IntRowNumber(1) =intJ        
        Exit For
        End If 
       Next
      End If
    
     ''Expand Level 3 in Workspace Viewer  
     intTotNodeCnt=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
     If Ucase(strLevel3src_Name) <> ""  Then
       For intK=0 to intTotNodeCnt-1  
         strtext = objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description 
        ' intlencnt = len(strtext)-2 
         strtext = Left(strtext,9)             
         If Ucase(strtext)=Ucase(strLevel3src_Name) Then                
              Call objGridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "",intRowControl+intK).WPFObject("RowMarginControl", "", 1).Click(59, 10)
              IntRowNumber(2) =intK
              intRowControl = intRowControl+1
              Delay 400
              Exit for         
         End If 
       Next         
     Else    
        IntRowNumber(2)=intTotNodeCnt-1      
     End If
     
     If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT09"))Then 
       For intK=0 to intTotNodeCnt-1  
       If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel3src_Name) then
        intRow=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
        objGridControl.Keys "^[Home]"
        Call objGridControl.ClearSelectionCore
        Call objGridControl.FocusViewAndRow(objGridControl,intRow)
        objGridControl.SetFocusOnCurrentItem
        Call objGridControl.SelectRowCore(intRow)
        IntRowNumber(2) =intK        
        Exit For
        End If 
       Next
      End If 
      
     
      
    If Ucase(strLevel3Category) = Ucase("Select")  Then 
    For intK=0 to intTotNodeCnt-1  
       If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel3Source) then
        intRow=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
        objGridControl.Keys "^[Home]"
        Call objGridControl.ClearSelectionCore
        Call objGridControl.FocusViewAndRow(objGridControl,intRow)
        objGridControl.SetFocusOnCurrentItem        
        Call objGridControl.SelectRowCore(intRow)          
          'Call objGridControl.SelectRowCore(intRow-1)
        IntRowNumber(2) =intK        
        Exit For
        End If 
       Next
      End If 
     
      
      IntRowNumber(3) = intRowControl                      
     'Return Row numbers for all levels
     fWorkSpaceRowSelection = IntRowNumber       
  If Err.Number > 0 Then
    Log.Warning("Error in 'fWorkSpaceRowSelection', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If  
End Function 

''****************************************************************************************************************************************************************
'Testcase :TC_SOURCE_PRT10:Verify Source dispaly viewer after Delete and upload the workspace workspace.

Sub sVerifyUploadAfterDelete(strParameters)
'Sub sVerifyUploadAfterDelete()


On Error Resume Next
Dim strTemp, objGridControl

     strSource_Name=getSplitValue(strParameters,"SOURCE")
     strLevel2src_Name=getSplitValue(strParameters,"Level2Source")
     strLevel3src_Name=getSplitValue(strParameters,"WORKSPACE")
     intRowControl = 1
     
'     strSource_Name="Test"
'     strLevel2src_Name="Automation_Source1"
    ' strLevel3src_Name=getSplitValue(strParameters,"WORKSPACE")
'      DescText = "1-5-21-2018 5_24_45 PM"
      
      
    Call fWorkSpaceRowSelection(strParameters) 
    
    'Upload the Deleted Workspace and Verify in Source Display Viewer
    Call sUploadFolder(strParameters)

  If Err.Number > 0 Then
    Log.Warning("Error in 'sVerifyUploadAfterDelete', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

''****************************************************************************************************************************************************************
'Testcase :TC_SOURCE_PRT11/*:Verify Copy Folder and Paste Above/Below/Inside source folder/Folders

Sub sDiffentLevel3CopyFolder(strParameters)
'Sub sLevle3CopyFolder()

  On Error Resume Next
   Dim strTemp, objGridControl, objTemp, blnFlag, newSourceName,  intTotNodeCnt
  
  
   strSource_Name=getSplitValue(strParameters,"SOURCE")
   strLevel2src_Name=getSplitValue(strParameters,"Level2Source")  
   strCopyOption= getSplitValue(strParameters,"COPYOPTION") 
   strPasteOption = getSplitValue(strParameters,"PASTEOPTION") 
   strCategory=getSplitValue(strParameters,"CATEGORY") 
   strLevel3Source=getSplitValue(strParameters,"WorkSpaceLevel3") 
   strFolderCount=getSplitValue(strParameters,"FolderCount")
   strText =getSplitValue(strParameters,"DISPLAYTEXT") 
   blnFlag = False   
   strLevel3src_Name=getSplitValue(strParameters,"WORKSPACE") 
   strFolderCount=getSplitValue(strParameters,"FoldestrSourceNamerCount")
' 
'   strSource_Name = "Test"
'   strLevel2src_Name ="Level2-CopyFolder"
'   strTestCase_no = "TC_SOURCE_PRT15"
'   strLevel3Source="CopyFolder-1"
'   strFolderCount = 5
'   strCopyOption = "WPFObject(""ContentControlEx"", ""Copy Folder Only"", 2)" 
'   strPasteOption =" WPFObject(""ContentControlEx"", ""Paste Inside"", 2)" 
'   strCategory = "Inside"
'   IntRowNumber(2) = 0
   
     
   
    
   'Open Source Disply View Module
    'Call sOpenSourceDispalyViewer()
    'Call sGridSelection(strParameters)

   'Open for Edit Source
   Call sOpenSourceWorkSpace(strParameters)
   Call sEdgeProcessor()   
   
   'Perform Copy First Level2->Level3 folder to second Level2->Level3 Folder   
   Call fTwoLevel2RowSelection(strParameters)
    
    
   If Err.Number > 0 Then
    Log.Warning("Error in 'sDiffentLevel3CopyFolder', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Sub 


''****************************************************************************************************************************************************************
'Function to Copy Paste 
Function sCopyPaste(strCopyOption,strPasteOption)

On Error Resume Next 
  Delay 2000, "Please Wait"

'Copy the selected folder
   strTemp = "WPFObject(""ContentControlEx"", ""Copy Folder"", 2)"
   Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
   
   If objTemp.Exists Then 
      objTemp.Click
      strTemp = strCopyOption
      Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      if objTemp.Exists Then 
        objTemp.Click
        Delay 200
      End If 
   End IF
   
'Paste the copied/Cut folder

   strTemp = "WPFObject(""ContentControlEx"", ""Paste Folder"", 2)"
   Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
   
   If objTemp.Exists Then 
      objTemp.Click
      strTemp = strPasteOption
      Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      if objTemp.Exists Then 
        objTemp.Click
        Delay 200
      End If 
   End IF    
   
   
   Delay 5000, "Please Wait"
   'Call sEdgeProcessor()
   '
   'Click Ok for Copy with series
   
    strTemp = "WPFObject(""Button_OK"")"
   Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
 
   If objTemp.Exists Then 
      objTemp.Click
   End If
   
   If Err.Number > 0 Then
    Log.Warning("Error in 'sCopyPaste', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
   
End Function 

''****************************************************************************************************************************************************************
'Upload workspace after copying:
Sub sUploadFolder(strParameters)
'Sub sUploadFolder()

    'msgbox strName(0)

  On Error Resume Next
  Dim strTemp, objGridControl, objTemp, intRequiredRowNumber, blnFlag, blnReg
  blnFlag = False
 
 ' msgbox intRowCount

  strSource_Name=getSplitValue(strParameters,"SOURCE")
  strLevel2src_Name=getSplitValue(strParameters,"Level2Source")
  strText =getSplitValue(strParameters,"DisplayText")
  strFolderCount=getSplitValue(strParameters,"FolderCount")
  strLevel = getSplitValue(strParameters,"LEVEL")
  strLevel3Source=getSplitValue(strParameters,"WorkSpaceLevel3")
  strCategory=getSplitValue(strParameters,"CATEGORY")
  strLayoutDV = getSplitValue(strParameters,"LayoutDV")
  
  
'  strSource_Name = "Test"
'  strLevel2src_Name = "Automation_Level2-CopyFolder"
'  strLevel = 3
'  strName(0) = "CopyFolder-35-01-02-2020 4_27_08 PM"
'  strFolderCount = 1
  
'  strCategory = "Inside"  
''  strName(1) = "CopyFolder-2"
''  strName(2) = "CopyFolder-3"
'  'intRowCount = 1
  
  
'  strFolderCount = 1
'  strLevel3Source = "CopyFolder-1"  
'  strName(0)="CopyFolder-93"
'  strName(1)="CopyFolder-95"
'  strFolderCount = 2
   'msgbox intRowCount
  'intExpRowCount = intRowCount
  'intRowCount =0
  
  'Upload the Workspace
    Call fUploadWorkSpace()
    Call sEdgeProcessor() 
    
   
    'Open Source Dispaly Viewer/LayoutDispalyViwewr
    If strLayoutDV = "Yes" Then 
        Call sOpenLayout()  
        Call sEdgeProcessor()
         Delay 2000 , "Please wait Layout Form is loading"
    Else
      Call  sOpenSourceDispalyViewer()
    End IF      
    
     'Getting no. of Rows under level 2
    IntCount = sGetRowCount(strParameters)
    Delay 2000 
    Call sEdgeProcessor()
      
    'strTemp = "WPFObject(""SourceTreeListView"")"
    strButton = getSplitValue(strParameters,"Button")
    If strButton ="" then 
      strTemp = "WPFObject(""SourceTreeListView"")"
    Else
      strTemp = strButton 
    End If
    Set objGridControl = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
     
   'Verify The Uploaded workspace is dispalyed in Source Display Viewer:
    intTotNodeCnt=objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Count  
        
   '''Verifying  Deleted Folders are dispalyed or not 
   If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT10"))Then   
    blnFlag = True
      For intK= 0 to intTotNodeCnt-1             
         If Ucase(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(intK).Content.Description)=Ucase(DescText) then 
            blnFlag= False     
        End If
      Next  
      
      If blnFlag = False Then  
          strTCRemarks = strText & "'" & DescText &"' dispalyed in Source Dispaly Viewer"
          strTestCaseResult="FAIL"
      Else
           strTCRemarks = strText & "'" & DescText &"' is not dispalyed in Source Dispaly Viewer"
          strTestCaseResult="PASS"             
      End If  
      Exit Sub 
    End If
 
   ' msgbox intRowCount
     ''Verifying  Copied/Cut Folders are dispalyed or not 
     
    ' msgbox strName(0)
     
     P= 0 
     Select Case strLevel 
        Case 2
           intTotNodeCnt=objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Count  
           For intI= 0 to intTotNodeCnt-1  
             If Ucase(objGridControl.Nodes_2.Item(IntCount(0)).Content.Description)=Ucase(strSource_Name) Then
              If Ucase(strCategory) = Ucase("Inside")Then 
                IntCount(1) = IntCount(1)+(strFolderCount-1)
                intcntLevel3 = objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(intRowCount).Nodes.Count 
                For IntJ = 0 to  intcntLevel3-1
                  If Ucase(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(intRowCount).Nodes.Item(IntJ).Content.Description)= Ucase(strName(IntP))Then
                     blnFlag= True 
                     P =P+1                                         
                  End If
                 Next 
                 Exit For                 
              Else  
              'For Category Above and Below                        
                For IntJ = 0 to  strFolderCount-1          
                  If Ucase(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(intRowCount).Content.Description)= Ucase(strName(P))Then
                    intRowCount = intRowCount+1
                     blnFlag= True  
                     P =P+1    
                   End If
                 Next
                 Exit For
             End IF
           End IF 
            ' Exit For
           Next   
         Case 3
          For intI= 0 to intTotNodeCnt-1  
             If Ucase(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Content.Description)=Ucase(strLevel2src_Name) Then 
               If Ucase(strCategory) = Ucase("Inside") Then               
                intcntLevel3 = objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(intRowCount).Nodes.Count 
                For IntJ = 0 to  intcntLevel3-1
                  If Ucase(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(intRowCount).Nodes.Item(IntJ).Content.Description)= Ucase(strName(P))Then
                     blnFlag= True 
                     P = P+1       
                  End If
                 Next 
                 Exit For                
              Else               
                 For IntP = 0 to  strFolderCount-1          
                    If Ucase(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(intRowCount).Content.Description)= Ucase(strName(P))Then
                       blnFlag= True 
                       intRowCount =intRowCount+1
                       P = P+1                        
                    End If
             Next
           End IF   
'           Exit For  
           End If     
          Next         
         Case 4
           intTotNodeCnt=objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(IntCount(2)).Nodes.Count
            For intI= 0 to intTotNodeCnt-1  
              If Ucase(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(IntCount(2)).Content.Description)=Ucase(strLevel3Source) Then 
                  If Ucase(strCategory) = Ucase("Inside") Then 
                      intcntLevel3 = objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(IntCount(2)).Nodes.Count 
                       For IntJ = 0 to  intcntLevel3-1
          				      If Ucase(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(IntCount(2)).Nodes.Item(IntJ).Content.Description)= Ucase(strName(P))Then
          					         strWorkSpace = strName(P) 
                           blnFlag= True 
          					       P = P+1                                            
          					      intRowCount =intRowCount+1                     
          				      End If
          				      Exit For  
                      Next      
                  Else 
                      For IntP = 0 to  strFolderCount-1          
                          If Ucase(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(IntCount(2)).Nodes.Item(intI).Content.Description)= Ucase(strName(P))Then
                              blnFlag= True 
                              strWorkSpace = strName(P)                              
                              P= P+1
                          End If
                      Next
'          	    Exit For
              End IF 
             End If                               
          Next                   
     End Select 
     
      If blnFlag = True And P = CInt(strFolderCount) Then
        If strLayoutDV = "Yes"  Then           
          strTCRemarks = strText &" '"&  strWorkSpace &"'  dispalyed in Layout Module after uploading the workspace"
          strTestCaseResult="PASS"
        Else
          strTCRemarks = strText &" '"& strWorkSpace &"' dispalyed in Source Dispaly Viewer after uploading the workspace"
          strTestCaseResult="PASS"
        End If
      Else      
        strTCRemarks = strText & " dispalyed in Source/Layput Dispaly Viewer"
        strTestCaseResult="FAIL"             
      End If 
      
      'Clean Up
     If objGridControl.Exists Then 
        Call sCloseSWV()    
     End If
     
   If Err.Number > 0 Then
    Log.Warning("Error in 'sUploadFolder', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
      
End Sub 

''****************************************************************************************************************************************************************
'Testcase :TC_SOURCE_PRT11:Verify Copy Folder and Paste Above source folder.

Sub sCopyFolder(strParameters)
'Sub sCopyFolder()

  On Error Resume Next
  Dim strTemp, objGridControl, objTemp, blnFlag, newSourceName, intTotNodeCnt, intSeriesID(0), strSourceName(3)
  
  
   strSource_Name=getSplitValue(strParameters,"SOURCE")
   strLevel2src_Name=getSplitValue(strParameters,"Level2Source")  
   strCopyOption= getSplitValue(strParameters,"COPYOPTION") 
   strPasteOption = getSplitValue(strParameters,"PASTEOPTION") 
   strCategory=getSplitValue(strParameters,"CATEGORY") 
   strLevel3Source=getSplitValue(strParameters,"WorkSpaceLevel3") 
   strLevel2Source=getSplitValue(strParameters,"WorkSpaceLevel2")
   strFolderCount=getSplitValue(strParameters,"FolderCount")
   strText =getSplitValue(strParameters,"DISPLAYTEXT") 
   strLevel = getSplitValue(strParameters,"LEVEL")
   strWithSeries = getSplitValue(strParameters,"WITHSERIES")
   blnFlag = False
   
   Redim intSeriesID(Cint(strFolderCount))
   
   
'   strSource_Name = "Test"
'   strLevel2Source ="Level2-CopyFolder"
'   strLevel3Source =CopyFolderWithSeries-1
'   strFolderCount = 1
'   strCopyOption = "WPFObject(""ContentControlEx"", ""Copy Folder Only"", 2)" 
'   strPasteOption =" WPFObject(""ContentControlEx"", ""Paste Above"", 2)" 
'   strCategory = "Above"
'   strWithSeries="Yes"
'   strLevel=3
'   strFolderCount =1
'   IntRowNumber(0) = 0 
'   IntRowNumber(1) = 0 
  
     
  
   
     
  ' Open for Edit Source
   Call sOpenSourceWorkSpace(strParameters)
   Call sEdgeProcessor()   
   
'      
'  'Select the Level 3 Source folder under Sorce Workspace:         
  IntRowNumber = fWorkSpaceRowSelection(strParameters) 

   strTemp="WPFObject(""SourceTreeListView"")"      
   Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True) 
   
   strTemp = WPFObject("SourceSeriesTableView")
   Set objSeriesPanel = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceSeriesViewControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("SourceSeriesGridControl").WPFObject("SourceSeriesTableView")
             
   
  'Select the Required Number of rows to copy. 
 
  X=0
  Y=0 
   Delay 2000, "Pls Wait ..."
    If strFolderCount > 1 Then       
        For I = 1 to strFolderCount-1          
          If Ucase(strWithSeries) = Ucase("Yes") Then
           Delay 2000
            intSeriesID(X) = objSeriesPanel.DataContext.Item(Y).SeriesId  
             X=X+1   
           End IF           
            SYS.Keys("![Down]") 
            Delay 1000
            If strLevel = 2 Then 
              IntRowNumber(1) = IntRowNumber(1)+1
              intRowCount = IntRowNumber(1) 
              'msgbox intRowCount
            ElseIf strLevel = 3 Then                 
                 IntRowNumber(2) = IntRowNumber(2)+1
                intRowCount = IntRowNumber(2)  
              'msgbox intRowCount         
            End If       
        Next  
    ElseIf strFolderCount = 1 Then 
          If Ucase(strWithSeries) = Ucase("Yes") Then
           Delay 2000
           intSeriesID(X) = objSeriesPanel.DataContext.Item(Y).SeriesId  
           'X=X+1
         End IF 
         Select Case strLevel
               Case 2
                 intRowCount = IntRowNumber(1) 
               Case 3
                  intRowCount = IntRowNumber(2)                 
         End Select         
    End If

    intSeriesID(X) = objSeriesPanel.DataContext.Item(Y).SeriesId
   
   'Get the Row Count as per Paste Below               
    If strFolderCount > 0 And (Ucase(strCategory) = Ucase("Below"))  Then 
         If strLevel = 2 Then 
              IntRowNumber(1) = IntRowNumber(1)+1
              intRowCount = IntRowNumber(1)
              'msgbox intRowCount 
            ElseIf strLevel = 3 Then 
              IntRowNumber(2) = IntRowNumber(2)+1
              intRowCount = IntRowNumber(2)
              'msgbox intRowCount  
            End If        
    ElseIf strFolderCount < 0 Then 
       strTCRemarks = "'Copy' and 'Paste Below' Fucntionality requires atleast one folder to copy"
       strTestCaseResult="FAIL" 
       Exit Sub 
    End If
    
     
  'Copy and Paste selected Folder
   Call sCopyPaste(strCopyOption,strPasteOption)
   Delay 500
   P= 0
   
   'Amend The Description and Description Local Name   
   If Ucase(strCategory) = Ucase("Above") OR  Ucase(strCategory) = Ucase("Below")Then
    For J = 0 to strFolderCount-1 
        'intNewNumber = Minute(Time) + Second(Time) + J 
          DescText=Replace(aqDateTime.Now,"/","-")
          intNewNumber =Replace(DescText,":","_")         
          intNewNumber1 = left(intNewNumber,1)+ Minute(Time) + Second(Time) + J &"-" &intNewNumber
        If strLevel = 2 Then          
            intLen= Len(strLevel2Source)-Instr(strLevel2Source, "-")             
            newSourceName =  Replace(strLevel2Source ,Right(strLevel2Source ,intLen), intNewNumber1)       
            Delay 200       
            Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Content.set_Description(newSourceName)
            Delay 200  
            Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Content.set_DescriptionLocal(newSourceName)
            Delay 200  
            Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Content.set_SourceCode(newSourceName) 
            Delay 200  
            strName(P) =  newSourceName 
            IntRowNumber(1) = IntRowNumber(1)+1 
            P=P+1
            Delay 500         
        ElseIf  strLevel = 3 Then 
            intLen= Len(strLevel3Source)-Instr(strLevel3Source, "-")
            newSourceName =  Replace(strLevel3Source ,Right(strLevel3Source ,intLen), intNewNumber1) 
            Delay 200
            Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Content.set_Description(newSourceName)
            Delay 200
            Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Content.set_DescriptionLocal(newSourceName) 
            strName(P) =  newSourceName 
            IntRowNumber(2) = IntRowNumber(2)+1 
            P=P+1
            Delay 500        
       End If               
    Next
   End IF
    
   P= 0
   If Ucase(strCategory) = Ucase("Inside") Then
    For J = 0 to strFolderCount-1  
        intNewNumber = Minute(Time) + Second(Time) + J         
        If strLevel = 2 Then         
          intLen= Len(strLevel2Source)-Instr(strLevel2Source, "-")
          newSourceName =  Replace(strLevel2Source ,Right(strLevel2Source ,intLen), intNewNumber)        
          Delay 200
          Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(J).Content.set_Description(newSourceName)
          Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(J).Content.set_DescriptionLocal(newSourceName)           
        ElseIf strLevel = 3 Then 
          intLen= Len(strLevel3Source)-Instr(strLevel3Source, "-")
          newSourceName =  Replace(strLevel3Source ,Right(strLevel3Source ,intLen), intNewNumber)        
          Delay 200
          Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Nodes.Item(J).Content.set_Description(newSourceName)
          Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Nodes.Item(J).Content.set_DescriptionLocal(newSourceName) 
        End If
        strName(P) =  newSourceName       
        P=P+1 
    Next
   End IF
   
    If Ucase(strWithSeries) = Ucase("Yes") Then   
       'msgbox strSourceName(0)
       intTotNodeCnt=objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Count  
       For intK=0 to intTotNodeCnt-1  
          If Ucase(objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(intK).Content.Description)=Ucase(strName(0)) then
          intRow=objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(intK).get_RowHandle
            objGridControl.Keys "^[Home]"
            Call objGridControl.ClearSelectionCore
            Call objGridControl.FocusViewAndRow(objGridControl,intRow)
            objGridControl.SetFocusOnCurrentItem        
            Call objGridControl.SelectRowCore(intRow) 
            Call sEdgeProcessor()
            Delay 2000, "Please Wait"         
            'Call objGridControl.SelectRowCore(intRow-1)
            'IntRowNumber(1) =intJ        
            Exit For
        End If 
       Next
   
    newSeriesCount = 0 
    
     For I = 0 to strFolderCount-1             
              intNewSeriesID(I) = objSeriesPanel.DataContext.Item(Y).SeriesId
               If intNewSeriesID(I) = intSeriesID(I) Then
                  newSeriesCount = newSeriesCount+1    
                  SYS.Keys("[Down]") 
                  Delay 1000                     
                End If
          Next        
       
         Delay 200
         If newSeriesCount = Cint(strFolderCount) Then 
           strTCRemarks = "All Series are Copied Correctly"
           strTestCaseResult="PASS"
        Else
          strTCRemarks = "All Series are Not Copied Correctly"
          strTestCaseResult="FAIL" 
          Exit Sub  
        End If
      
   End If
    
   'Save and Verify Copied/Cut Folder
    Call sSaveAndVerify(strParameters,IntRowNumber) 
       
    
    
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'sCopyFolder', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
   
 
   
End Sub 


''****************************************************************************************************************************************************************
'Function to select Row in workspace viewer
Function fTwoLevel2RowSelection(strParameters)
'Function fTwoLevel2RowSelection()

On Error Resume Next
Dim strTemp, objGridControl, IntRowNumber(5), strLevel3Category, strLevel2Category , intSeriesID(3), strSourceName(3), intNewSeriesID(3)
Dim intLevel2Source2RowNumber(10), intNumber(5)
  
     Delay 2000, "Please Wait"
    ' Call sCloseSWV() 
     
     strSource_Name =getSplitValue(strParameters,"SOURCE")
     strLevel2Source1 =getSplitValue(strParameters,"Level2Source1")
     strLevel2Source2 =getSplitValue(strParameters,"Level2Source2")
     strLevel3Source1 =getSplitValue(strParameters,"Level3Source1")
     strLevel3Source2 =getSplitValue(strParameters,"Level3Source2")
     strLevel4Source1 = getSplitValue(strParameters,"Level4Source1")
     strLevel3Category = getSplitValue(strParameters,"Level3Category")
     strCopyOption  =getSplitValue(strParameters,"COPYOPTION") 
     strPasteOption  = getSplitValue(strParameters,"PASTEOPTION")
     strCategory =getSplitValue(strParameters,"CATEGORY")   
     strFolderCount =getSplitValue(strParameters,"FolderCount")
     strWithSeries = getSplitValue(strParameters,"WITHSERIES")
     strLayoutDV = getSplitValue(strParameters,"LayoutDV")
     strButton = getSplitValue(strParameters,"Button")
     strLevel = getSplitValue(strParameters,"Level")
     
     
'     Redim intSeriesID(Cint(strFolderCount))
'     Redim strSourceName(Cint(strFolderCount))
'     Redim intNewSeriesID(Cint(strFolderCount))
     
     
      blnFlag = False
   
'     strEnvi = "Edge ( US Integration )"   
'     strSource_Name="dX Non-Asia Database (Current Eng Version)"
'     strLevel2Source1="Level2-CopyFolder-1"
'     strLevel2Source2="Level2-CopyFolder-2"
'     strLevel3Source1="Level3-CopyFolder-1"
'     strLevel3Source2="Level3-CopyFolder-3"
'     strLevel4Source1="Level4-CopyFolder-1"
'     strLevel3Category="Select"
'     strCopyOption="WPFObject(""ContentControlEx"", ""Copy Folder Only"", 2)"
'     strPasteOption="WPFObject(""ContentControlEx"", ""Paste Above"", 2)"
'     strCategory="Above"
'     strFolderCount="1"
'     strWithSeries="Yes"
'     strLayoutDV = "Yes"
'     strButton = "WPFObject(""LayoutTreeListView"")"

      
    If strLayoutDV = "Yes" Then
      strTemp =  strButton
    Else
      strTemp="WPFObject(""SourceTreeListView"")"  
    End IF 
      
   IntRowNumber(0) = fGridone(strTemp,strSource_Name )
   IntRowNumber(1) = fGridTwo(strTemp,strLevel2Source1 ,IntRowNumber(0))  
   
    If Ucase(strLevel3Category) = Ucase("Select")  Then 
       IntRowNumber(2) = fGridThree(strTemp,strLevel3Source1 ,IntRowNumber(0), IntRowNumber(1))       
       IntP = IntP+1     
    End If 
    
    If Cint(strLevel) = 4 then 
       IntRowNumber(3)=  sLayoutLevel4GridSelection(strParameters,intI,intJ,intK)
       IntRowNumber(4) = intRowControl
    End if   
   
      
    
   If strLayoutDV = "Yes" Then
      strTemp =  strButton
    Else
      strTemp="WPFObject(""SourceTreeListView"")"  
    End IF   
   Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True) 
   
   'strTemp = WPFObject("SourceSeriesTableView")'
    If strLayoutDV = "Yes" Then
      Set objSeriesPanel = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("LayoutSeriesViewControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("LayoutSeriesGridControl").WPFObject("LayoutSeriesTableView")
    Else
      Set objSeriesPanel = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceSeriesViewControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("SourceSeriesGridControl").WPFObject("SourceSeriesTableView")
    End IF   
   
 Y=0
 X=0
  'Select the Required Number of rows to copy. 
    If strFolderCount > 1 Then       
        For I =0 to strFolderCount-2 
          If Ucase(strWithSeries) = Ucase("Yes") Then
           Delay 2000
           intSeriesID(X) = objSeriesPanel.DataContext.Item(Y).SeriesId
          ' msgbox intSeriesID(X)  
           X=X+1    
           'msgbox X       
          End IF                 
          SYS.Keys("![Down]")  
          IntRowNumber(2) = IntRowNumber(2)+1
          intRowCount = IntRowNumber(2)          
          Next  
    ElseIf strFolderCount = 1 Then 
        If Ucase(strWithSeries) = Ucase("Yes") Then
          Delay 2000
          intSeriesID(X) = objSeriesPanel.DataContext.Item(Y).SeriesId  
          'X=X+1
         End IF 
    End If
    
    Call  fCopy(strCopyOption)
    Call sEdgeProcessor()
    
'Select the Folder to Paste Above/Below
  strTemp ="WPFObject(""LayoutTreeListView"")" 
  IntRowNumber(1) = fGridTwo(strTemp,strLevel2Source2 ,IntRowNumber(0))  
  IntRowNumber(2) = fGridThree(strTemp,strLevel3Source2 ,IntRowNumber(0), IntRowNumber(1))  
  Call sEdgeProcessor() 
       
  'Get the Row Count as per Paste above /Below               
    If strFolderCount > 0 And (Ucase(strCategory) = Ucase("Below"))  Then 
        IntRowNumber(2) = IntRowNumber(2)+1 
        intRowCount = IntRowNumber(2)        
    ElseIf strFolderCount < 0 Then 
       strTCRemarks = "'Copy' and 'Paste Above' Fucntionality requires atleast one folder to copy"
       strTestCaseResult="FAIL" 
       Exit Function 
    End If
  
       Call  fPaste(strPasteOption)
       Call sEdgeProcessor()
       
'
      'Amend The Description and Description Local Name  
   'If Ucase(strCategory) = Ucase("Above") OR  Ucase(strCategory) = Ucase("Below") OR Ucase(strCategory) = Ucase("Inside") Then
    For J = 0 to strFolderCount-1 
        intNewNumber = Minute(Time) + Second(Time) + J 
        intLen= Len(strLevel3Source1)-Instr(strLevel3Source1, "-")
        newSourceName =  Replace(strLevel3Source1 ,Right(strLevel3Source1 ,intLen), intNewNumber)  
        strSourceName(J) = newSourceName      
        Delay 200
        If Ucase(strCategory) = Ucase("Above") OR  Ucase(strCategory) = Ucase("Below")Then 
          Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Content.set_Description(newSourceName)
          Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Content.set_DescriptionLocal(newSourceName) 
          If strLayoutDV = "Yes" Then
            Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Content.set_DxFileNm(newSourceName) 
           End If
       ElseIf Ucase(strCategory) = Ucase("Inside")Then 
           Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Nodes.Item(0).Content.set_Description(newSourceName)
           Call objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Nodes.Item(0).Content.set_DescriptionLocal(newSourceName) 
       End If
        strName(P) =  newSourceName 
        IntRowNumber(2) = IntRowNumber(2)+1 
        P=P+1
        Delay 500 
    Next
   'End IF
    IntRowNumber(2) =  IntRowNumber(2)- 1
    
    If Ucase(strWithSeries) = Ucase("Yes") Then   
     'msgbox strSourceName(0)
     If Ucase(strCategory) = Ucase("Inside")Then 
        intTotNodeCnt=objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Nodes.Count 
        For intL=0 to intTotNodeCnt-1 
          If Ucase(objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Nodes.Item(intL).Content.Description)=Ucase(strSourceName(0)) then
            intRow=objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Nodes.Item(intL).get_RowHandle
            objGridControl.Keys "^[Home]"
            Call objGridControl.ClearSelectionCore
            Call objGridControl.FocusViewAndRow(objGridControl,intRow)
            objGridControl.SetFocusOnCurrentItem        
            Call objGridControl.SelectRowCore(intRow) 
            Call sEdgeProcessor()
            Delay 2000, "Please Wait"         
            'Call objGridControl.SelectRowCore(intRow-1)
            'IntRowNumber(1) =intJ        
            Exit For
        End If  
        Next
     Else
       intTotNodeCnt=objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Count  
       For intK=0 to intTotNodeCnt-1  
          If Ucase(objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(intK).Content.Description)=Ucase(strSourceName(0)) then
          intRow=objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(intK).get_RowHandle
            objGridControl.Keys "^[Home]"
            Call objGridControl.ClearSelectionCore
            Call objGridControl.FocusViewAndRow(objGridControl,intRow)
            objGridControl.SetFocusOnCurrentItem        
            Call objGridControl.SelectRowCore(intRow) 
            Delay 2000, "Please Wait"         
            'Call objGridControl.SelectRowCore(intRow-1)
            'IntRowNumber(1) =intJ        
            Exit For
        End If 
       Next
    End If
     newSeriesCount =0
     'Verify for Series copied or not
     'Y=0
            
         For I = 0 to strFolderCount-1             
              intNewSeriesID(I) = objSeriesPanel.DataContext.Item(Y).SeriesId
               If intNewSeriesID(I) = intSeriesID(I) Then
                  newSeriesCount = newSeriesCount+1    
                  SYS.Keys("[Down]") 
                  Delay 1000                     
                End If
          Next        
       
         Delay 200
         If newSeriesCount = Cint(strFolderCount) Then 
           strTCRemarks = "All Series are Copied Correctly"
           strTestCaseResult="PASS"
        Else
          strTCRemarks =  "All Series are Not Copied Correctly"
          strTestCaseResult="FAIL" 
          Exit Function  
        End If      
   End If
    
    
   'Save and Verify Copied/Cut Folder
      Remarks =  sSaveAndVerify(strParameters,IntRowNumber)   
      'msgbox Remarks
      fTwoLevel2RowSelection = Remarks

 If Err.Number > 0 Then
    Log.Warning("Error in 'sTwoLevel2RowSelection', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Function 

'============================================================================================================================================
Function  fCopy(strCopyOption)
  On Error Resume Next 
  Delay 2000, "Please Wait"
   
  
'Copy the selected folder
   strTemp = "WPFObject(""ContentControlEx"", ""Copy Folder"", 2)"
   Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
   
   If objTemp.Exists Then 
      objTemp.Click
      strTemp = strCopyOption
      Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      if objTemp.Exists Then 
        objTemp.Click
        Delay 200
      End If 
   End IF 

End Function

'================================================================================================================================================
'============================================================================================================================================
Function  fCut()
  On Error Resume Next 
  Delay 2000, "Please Wait"
   
  
'Copy the selected folder
   strTemp = "WPFObject(""ContentControlEx"", ""Cut Folder"", 2)"
   Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
   
   If objTemp.Exists Then 
'      objTemp.Click
'      strTemp = strCopyOption
'      Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      if objTemp.Exists Then 
        objTemp.Click
        Delay 200
      End If 
   End IF 

End Function

'================================================================================================================================================
Function  fPaste(strPasteOption)

On Error Resume Next
Delay 2000, "Please Wait"

'Paste the copied/Cut folder

   strTemp = "WPFObject(""ContentControlEx"", ""Paste Folder"", 2)"
   Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
   
   If objTemp.Exists Then 
      objTemp.Click
      strTemp = strPasteOption
      Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      if objTemp.Exists Then 
        objTemp.Click
        Delay 200
      End If 
   End IF 
   
   
   Delay 5000, "Please Wait"


   'Click Ok for Copy with series
   
    strTemp = "WPFObject(""Button_OK"")"
   Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
 
   If objTemp.Exists Then 
      objTemp.Click
   End If   
'

End Function
'================================================================================================================================================
Function sSaveAndVerify(strParameters,IntRowNumber)

On Error Resume Next
Delay 2000, "Please Wait"

    Dim intTotNodeCnt, strFolderCount ,strText , strCategory , strLevel

    strFolderCount=getSplitValue(strParameters,"FolderCount")
    strText =getSplitValue(strParameters,"DISPLAYTEXT") 
    strCategory =getSplitValue(strParameters,"CATEGORY")
    strLevel = getSplitValue(strParameters,"LEVEL") 
    strLayoutDV = getSplitValue(strParameters,"LayoutDV")
    strButton = getSplitValue(strParameters,"Button")  
    
'     strEnvi = "Edge ( US Integration )"   
'     strSource_Name="dX Non-Asia Database (Current Eng Version)"
'     strLevel2Source1="Level2-CopyFolder-1"
'     strLevel2Source2="Level2-CopyFolder-2"
'     strLevel3Source1="Level3-CopyFolder-1"
'     strLevel3Source2="Level3-CopyFolder-3"
'     strLevel3Category="Select"
'     strCopyOption="WPFObject(""ContentControlEx"", ""Copy Folder Only"", 2)"
'     strPasteOption="WPFObject(""ContentControlEx"", ""Paste Above"", 2)"
'     strCategory="Above"
'     strFolderCount="1"
'     'strWithSeries="Yes"
'     strLayoutDV = "Yes"
'     strButton = "WPFObject(""LayoutTreeListView"")"
'     strLevel = 3
     
    
    blnFlag = False


   'Save the Workspace
    Call fSaveWorkspace() 
    Call sEdgeProcessor()         
    Call sCloseSWV() 
    
   ' Open the Saved Workspace from Source Workspace Viewer         
    If strLayoutDV = "Yes" Then
       Call sOpenLayoutViewrWS()
       Call sEdgeProcessor()  
       Delay 2000       
    Else
      Call sOpenSavedWorkSpace(strParameters) 
    End IF 
    
    Call sEdgeProcessor()  
    Delay 2000      
    
    strTemp = "WPFObject(""ContentControlEx"", ""Expand All"", 2)" 
    'Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
    call sObjClick(strTemp)
  
    If strLayoutDV = "Yes" Then
      strTemp =  strButton
    Else
      strTemp="WPFObject(""SourceTreeListView"")"  
    End IF      
    Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)    
    'Verify the copy and paste changed have been saved.
    P= 0
    If Ucase(strCategory) = Ucase("Above") OR  Ucase(strCategory) = Ucase("Below")Then  
    Select Case strLevel 
        Case 2
          intTotNodeCnt=objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Count
          For intJ = 0 to intTotNodeCnt-1
             If Ucase(objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(intJ).Content.Description)= Ucase(strName(P)) Then
                blnFlag= True  
                DescText = strName(P)
                P = P+1  
                Delay 200
             End If
          Next
        Case 3
          intTotNodeCnt=objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Count
           For intK = 0 to intTotNodeCnt-1
             If Ucase(objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(intK).Content.Description)= Ucase(strName(P))Then 
                 blnFlag= True  
                 DescText = strName(P)
                 P = P+1  
                 Delay 200        
              End IF 
            Next   
    End Select
   End If 
    
      intTotNodeCnt=objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Nodes.Count
      If Ucase(strCategory) = Ucase("Inside") Then      
        For intK = 0 to intTotNodeCnt-1
           If Ucase(objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Nodes.Item(intK).Content.Description)= Ucase(strName(P)) Then 
              blnFlag= True  
              DescText = strName(P)
              P = P+1  
              Delay 200         
          End IF   
        Next
       End IF
  
    'Verify Modified Rows are displayed or Not
      'msgbox strName(P-1)
      If blnFlag= True And P = CInt(strFolderCount)  Then 
        strTCRemarks =   strText & " Fucntionality is working as expected"
        strTestCaseResult="PASS"
      Else
         strTCRemarks =  strText & " Fucntionality is not working as expected"
         strTestCaseResult="FAIL"  
      End If
     
      sSaveAndVerify =  strTCRemarks
  If Err.Number > 0 Then
    Log.Warning("Error in 'sSaveAndVerify', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If 
     
End Function

'********************************************************************************************************************************************************************8
'Testcase :TC_SOURCE_PRT31:Verify Copy Folder and Paste Inside source folder.

Sub sCopyFolderPasteInside(strParameters)
'Sub sCopyFolderPasteInside()

  On Error Resume Next
  Dim strTemp, objGridControl, objTemp, blnFlag, newSourceName, intTotNodeCnt, intSeriesID(3), strSourceName(3), intNewSeriesID(3)
  
  
   strSource_Name=getSplitValue(strParameters,"SOURCE")   
   strLevel2Firstsrc_Name=getSplitValue(strParameters,"Level2FirstSource")
   strLevel2Secondsrc_Name=getSplitValue(strParameters,"Level2SecondSource")
   strPasteOption = getSplitValue(strParameters,"PASTEOPTION") 
   strCopyOption= getSplitValue(strParameters,"COPYOPTION")
   strFolderCount=getSplitValue(strParameters,"FolderCount") 
   strText =getSplitValue(strParameters,"DISPLAYTEXT")
   strWithSeries = getSplitValue(strParameters,"WITHSERIES")
   blnFlag = False
   'Redim intSeriesID(Cint(strFolderCount))
'   
'   strCategory=getSplitValue(strParameters,"CATEGORY") 
'   strLevel3Source=getSplitValue(strParameters,"WorkSpaceLevel3") 
'   strLevel2Source=getSplitValue(strParameters,"WorkSpaceLevel2")
'   strFolderCount=getSplitValue(strParameters,"FolderCount")
'   strText =getSplitValue(strParameters,"DISPLAYTEXT") 
'   strLevel = getSplitValue(strParameters,"LEVEL")
'   strWithSeries = getSplitValue(strParameters,"WITHSERIES")
'   blnFlag = False



'   strSource_Name = "Hong Kong"
'   strLevel2Firstsrc_Name ="Level2FirstFolderwithSeries"
'   strLevel2Secondsrc_Name ="Level2SecondFolder"   
'   strCopyOption = "WPFObject(""ContentControlEx"", ""Copy Folder with Series"", 2)"
'   strPasteOption ="WPFObject(""ContentControlEx"", ""Paste Inside"", 2)"
'   strWithSeries = "Yes"
'   strFolderCount = 1
'   Redim intSeriesID(Cint(strFolderCount))
'   strEnvi = "Edge ( US Integration )" 
'   
   'strFolderCount = 1
  ' strCategory = "Above"
   'strWithSeries="Yes"
   'strLevel=3
  ' strFolderCount =  1
   'IntRowNumber(0) = 0 
   'IntRowNumber(1) = 0 
   
   Delay 2000, "Pls Wait..."
   intRowControl = 1
   
   
   ' Open for Edit Source
   Call sOpenSourceWorkSpace(strParameters)
   Call sEdgeProcessor()   
   
   

   
  
    strTemp="WPFObject(""SourceTreeListView"")"   
    Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
    
    strTemp = WPFObject("SourceSeriesTableView")
    Set objSeriesPanel = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceSeriesViewControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("SourceSeriesGridControl").WPFObject("SourceSeriesTableView")
   
  
    'Expand Level 1 in Workspace Viewer 
       
     intTotNodeCnt=objGridControl.Nodes_2.Count    
     For intI=0 to intTotNodeCnt-1     
       If Ucase(objGridControl.Nodes_2.Item(intI).Content.Description) = Ucase(strSource_Name) Then          
           Call objGridControl.WPFObject("HierarchyPanel", "", 1).WPFObject("RowControl", "", intRowControl+intI).WPFObject("RowMarginControl", "", 1).Click   
           IntRowNumber(0) = intI
           intRowControl = intRowControl+1
           Delay 400    
          Exit For
        End If
     Next 
     
     
   'Select the Required Level2 Source and Copy the Folder
     intTotNodeCnt=objGridControl.Nodes_2.Item(intI).Nodes.Count
     For intJ=0 to intTotNodeCnt-1  
       If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2Firstsrc_Name) then
          intRow=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
          objGridControl.Keys "^[Home]"
          Call objGridControl.ClearSelectionCore
          Call objGridControl.FocusViewAndRow(objGridControl,intRow)
          objGridControl.SetFocusOnCurrentItem        
          Call objGridControl.SelectRowCore(intRow)
          Delay 1000          
          'Call objGridControl.SelectRowCore(intRow-1)
          'IntRowNumber(1) =intJ  
           X = 0
           Y = 0 
          If Ucase(strWithSeries) = Ucase("Yes") Then
            Delay 2000
              intSeriesID(X) = objSeriesPanel.DataContext.Item(Y).SeriesId  
              X=X+1   
          End IF     
          Call  fCopy(strCopyOption)
          Call sEdgeProcessor()                
          Exit For
        End If 
     Next
     
     'Select the required Level2 Source Folder and Peast the Copied folder 
     
     For intJ=0 to intTotNodeCnt-1  
       If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2Secondsrc_Name) then
          objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
          intRow=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
          objGridControl.Keys "^[Home]"
          Call objGridControl.ClearSelectionCore
          Call objGridControl.FocusViewAndRow(objGridControl,intRow)
          objGridControl.SetFocusOnCurrentItem        
          Call objGridControl.SelectRowCore(intRow)          
          'Call objGridControl.SelectRowCore(intRow-1)
          'IntRowNumber(1) =intJ  
          Call  fPaste(strPasteOption)
          Call sEdgeProcessor()   
          intTotNodeCntLevel3 = objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
          
          newSeriesCount = 0 
              
          For IntK = 0 to intTotNodeCntLevel3-1   
              If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(IntK).Content.Description)=Ucase(strLevel2Firstsrc_Name) then  
                I=0               
                intRow=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(IntK).get_RowHandle
                objGridControl.Keys "^[Home]"
                Call objGridControl.ClearSelectionCore
                Call objGridControl.FocusViewAndRow(objGridControl,intRow)
                objGridControl.SetFocusOnCurrentItem        
                Call objGridControl.SelectRowCore(intRow) 
                Dealy 1000                  
                intNewSeriesID(I) = objSeriesPanel.DataContext.Item(Y).SeriesId
                 If intNewSeriesID(I) = intSeriesID(I) Then
                    newSeriesCount = newSeriesCount+1    
                    'SYS.Keys("[Down]") 
                    Delay 1000                     
                  End If
              End If
         Next        
       
         Delay 200
         If newSeriesCount = Cint(strFolderCount) Then 
           strTCRemarks = "All Series are Copied Correctly"
           strTestCaseResult="PASS"
        Else
          strTCRemarks = "All Series are Not Copied Correctly"
          strTestCaseResult="FAIL" 
          Exit Sub  
        End If
        Exit For      
     End If
    Next

    
    'Upload the Workspace
    Call fUploadWorkSpace()
    Call sEdgeProcessor() 
    
   
    'Open Source Dispaly Viewer
    Call  sOpenSourceDispalyViewer()
    Delay 2000 
    
    
    strTemp="WPFObject(""SourceTreeListView"")"   
    Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
    
    intTotNodeCnt=objGridControl.Nodes_2.Count    
     For intI=0 to intTotNodeCnt-1     
       If Ucase(objGridControl.Nodes_2.Item(intI).Content.Description) = Ucase(strSource_Name) Then  
          objGridControl.Nodes_2.Item(intI).ExpandAll   
          intRow=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
          objGridControl.Keys "^[Home]"
          Call objGridControl.ClearSelectionCore
          Call objGridControl.FocusViewAndRow(objGridControl,intRow)
          objGridControl.SetFocusOnCurrentItem        
          Call objGridControl.SelectRowCore(intRow)  
        Exit For
        End If 
     Next
            
     intTotNodeCnt=objGridControl.Nodes_2.Item(intI).Nodes.Count
    For intJ=0 to intTotNodeCnt-1  
       If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2Secondsrc_Name) Then
          objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
          intRow=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
          objGridControl.Keys "^[Home]"
          Call objGridControl.ClearSelectionCore
          Call objGridControl.FocusViewAndRow(objGridControl,intRow)
          objGridControl.SetFocusOnCurrentItem        
          Call objGridControl.SelectRowCore(intRow)  
          intTotNodeCntLevel3=objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
           For intK=0 to intTotNodeCntLevel3-1 
           If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel2Firstsrc_Name) Then 
              blnFlag = True
              Exit For
          End If          
         Next
         Exit For
       End If
    Next
        
      If blnFlag = True Then  
        strTCRemarks = strText & " dispalyed in Source Dispaly Viewer after uploading the workspace"
        strTestCaseResult="PASS"
      Else
         strTCRemarks = strText & " dispalyed in Source Dispaly Viewer"
         strTestCaseResult="FAIL"             
     End If 
     
  If Err.Number > 0 Then
    Log.Warning("Error in 'sCopyFolderPasteInside', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'********************************************************************************************************************************************************************8
'Testcase :TC_SOURCE_PRT35:Verify Copy Folder and Paste Inside source folder.

Sub sMultiLevelCopyFolderPasteInside(strParameters)

'Sub sMultiLevelCopyFolderPasteInside()

  On Error Resume Next
  Dim strTemp, objGridControl, objTemp, blnFlag, newSourceName,  intTotNodeCnt, intSeriesID(3), strSourceName(3), intNewSeriesID(3), IntRowNumber
  
  
   strSource_Name=getSplitValue(strParameters,"SOURCE")   
   strLevel2Source=getSplitValue(strParameters,"Level2Source")
   strLevel3FirstSRC_Name=getSplitValue(strParameters,"Level3FirstSRC_Name")
   strLevel3SecondSRC_Name=getSplitValue(strParameters,"Level3SecondSRC_Name")
   strLevel4Source= getSplitValue(strParameters,"Level4Source")
   strPasteOption = getSplitValue(strParameters,"PASTEOPTION") 
   strCopyOption= getSplitValue(strParameters,"COPYOPTION")
   strText =getSplitValue(strParameters,"DISPLAYTEXT") 
   blnFlag = False
   Cnt = 0 



'   strSource_Name = "Test"
'   strLevel2Source ="Automation_Level2-CopyFolder"
'   strLevel3FirstSRC_Name ="CopyFolder-Inside-1"
'   strLevel3SecondSRC_Name = "CopyFolder-Inside-2"
'   strLevel4Source ="Level4-CopyFolder"      
'   strCopyOption="WPFObject(""ContentControlEx"", ""Copy Folder Only"", 2)"
'   strPasteOption = "WPFObject(""ContentControlEx"", ""Paste Inside"", 2)"
'   strEnvi = "Edge ( US Integration )" 

   
   
   ' Open for Edit Source
   Call sOpenSourceWorkSpace(strParameters)
   Call sEdgeProcessor()   
   Delay 2000

  'Select the Level4 Folder to Peast the Copied folder
  strTemp="WPFObject(""SourceTreeListView"")"   
  Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  strTemp = "WPFObject(""ContentControlEx"", ""Expand All"", 2)"
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  Call objTemp.Click()
  Delay 2000
  LevelCnt = objGridControl.Nodes_2.Count
  For IntI= 0 to LevelCnt-1
    Leve2Cnt = objGridControl.Nodes_2.Item(IntI).Nodes.Count
    For IntJ = 0 to Leve2Cnt-1
      Leve3Cnt = objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Count      
      For IntK = 0 to Leve3Cnt-1      
            If Ucase(objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Item(IntK).Content.Description)=Ucase(strLevel3FirstSRC_Name) Then
                'Select the Level3 source to Copy   
               intRow=objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Item(IntK).get_RowHandle   
               objGridControl.Keys "^[Home]"
               Call objGridControl.ClearSelectionCore
               Call objGridControl.FocusViewAndRow(objGridControl,intRow)
               objGridControl.SetFocusOnCurrentItem        
               Call objGridControl.SelectRowCore(intRow) 
               'Copy the Selected Folder
               Delay 1000 
               Call  fCopy(strCopyOption)                  
            End If 
            If Ucase(objGridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(IntK).Content.Description)=Ucase(strLevel3SecondSRC_Name) Then
               I =  intI
               J = intJ
               K= intK
             'Select the Level4 Folder to Peast
             Leve4Cnt = objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Item(IntK).Nodes.Count
             For IntL = 0 to Leve4Cnt-1
              If Ucase(objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Item(IntK).Nodes.Item(IntL).Content.Description)=Ucase(strLevel4Source) Then
                 L= intL
                'Select the Level4 source to Peast   
               intRow=objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Item(IntK).Nodes.Item(IntL).get_RowHandle
               objGridControl.Keys "^[Home]"
               Call objGridControl.ClearSelectionCore
               Call objGridControl.FocusViewAndRow(objGridControl,intRow)
               objGridControl.SetFocusOnCurrentItem        
               Call objGridControl.SelectRowCore(intRow) 
               'Copy the Selected Folder
               Delay 1000 
               Call  fPaste(strPasteOption)
               Call sEdgeProcessor()        
              End If
             Next              
            End If  
         Next 
      Next
   Next
  
   'Save the Workspace and Opened the Saved the Workspace.
   
   'Save the Workspace
    Call fSaveWorkspace() 
    Call sEdgeProcessor()         
    Call sCloseSWV() 
    
   ' Open the Saved Workspace from Source Workspace Viewer         
    Call sOpenSavedWorkSpace(strParameters)
    Call sEdgeProcessor()  
    Delay 2000    
    
    'Verify the Copied folder is dispalyed or not
      strTemp="WPFObject(""SourceTreeListView"")"   
       Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
       strTemp= "WPFObject(""ContentControlEx"", ""Expand All"", 2)"
       Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
       objTemp.Click 
       Delay 200
       Leve5Cnt = objGridControl.Nodes_2.Item(I).Nodes.Item(J).Nodes.Item(K).Nodes.Item(L).Nodes.Count
       For IntM = 0 to Leve5Cnt-1
        If Ucase(objGridControl.Nodes_2.Item(I).Nodes.Item(J).Nodes.Item(K).Nodes.Item(L).Nodes.Item(IntM).Content.Description)=Ucase(strLevel3FirstSRC_Name) Then
         blnFlag = True 
        End If
       Next
    
    'Upload the Workspace
    Call fUploadWorkSpace()
    Call sEdgeProcessor() 
    
   
    'Open Source Dispaly Viewer
    Call  sOpenSourceDispalyViewer()
    Delay 2000 
    
    
    strTemp="WPFObject(""SourceTreeListView"")"   
    Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
    
   'Verify the Copied folder displayed in Display viewer.
   
   '   strSource_Name = "Test"
'   strLevel2Source ="Level2-CopyFolder"
'   strLevel3FirstSRC_Name ="CopyFolder-1"
'   strLevel3SecondSRC_Name = "Level3-CopyFolder"
'   strLevel4Source ="Level4-CopyFolder" 
   
   IntRowNumber =  SelectLevel5Source(strSource_Name,strLevel2Source,strLevel3SecondSRC_Name,strLevel4Source,strLevel3FirstSRC_Name)
   
   If Ucase(objGridControl.Nodes_2.Item(IntRowNumber(0)).Nodes.Item(IntRowNumber(1)).Nodes.Item(IntRowNumber(2)).Nodes.Item(IntRowNumber(3)).Nodes.Item(IntRowNumber(4)).Content.Description)=Ucase(strLevel3FirstSRC_Name) Then
      Cnt = 1
   End If
   
   If blnFlag = True And Cnt = 1 Then  
        strTCRemarks = strText & " dispalyed in Source Dispaly Viewer after uploading the workspace"
        strTestCaseResult="PASS"
    Else
         strTCRemarks = strText & " dispalyed in Source Dispaly Viewer"
         strTestCaseResult="FAIL"             
    End If 
  

  If Err.Number > 0 Then
    Log.Warning("Error in 'sMultiLevelCopyFolderPasteInside', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'****************************************************************************************************************************8
'Sub SelectLevel5Source(strParameters)
Function SelectLevel5Source(strLevel1,strLevel2,strLevel3,strLevel4,strLevel5)

On Error Resume Next
Dim IntRowNumber(6)

'strLevel1="China"
'strLevel2="Input Files"
'strLevel3="NA"
'strLevel4="Nationwide"
'strLevel5="CN-AC"
    'strEnvi = "Edge ( US Integration )" 



'  strLevel1=getSplitValue(strParameters,"Level1")
'  strLevel2=getSplitValue(strParameters,"Level2")
'  strLevel3=getSplitValue(strParameters,"Level3")
'  strLevel4=getSplitValue(strParameters,"Level4")
'  strLevel5=getSplitValue(strParameters,"Level5")
'
'    strSource_Name=strLevel1
'    strLevel2src_Name=strLevel2
  
     Delay 2000,"Pls Wait.."
    strTemp="WPFObject(""SourceTreeListView"")"
    Set GridControl=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    strTemp="WPFObject(""SourceTreeControl"")"
    Set GridSourceTree=Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    Delay 5000,"Pls Wait.."
    ''Selecting Country Name
    intTotNodeCnt=GridControl.Nodes_2.Count
    For intI=0 to intTotNodeCnt-1         
        If Ucase(GridControl.Nodes_2.Item(intI).Content.Description)=Ucase(strLevel1) then
          GridControl.Nodes_2.Item(intI).ExpandAll
          log.Message "Country Name - " & GridControl.Nodes_2.Item(intI).Content.Description 
          IntRowNumber(0) = intI      
    '      strTCRemarks=strTCRemarks & Chr(10) & "Selected Node - " & GridControl.Nodes_2.Item(intI).Content.Description  
          blnFlag=False  
          Exit For
        End If
    Next
    If blnFlag = True then
      strTCRemarks="Country Name not found"
      strTestCaseResult="FAIL"
      Exit Function
    End If
  
    Delay 5000,"Pls Wait.."
        blnFlag = True 
    ''Selecting Level2Source_Name
    intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Count
  For intJ=0 to intTotNodeCnt-1
      If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description)=Ucase(strLevel2) then
        GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).ExpandAll
    '    intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(0).get_RowHandle
        intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).get_RowHandle
'        Call GridSourceTree.ClickCell(intRow, "Edit")
        Call GridControl.ClearSelectionCore
        Call GridControl.FocusViewAndRow(GridControl,intRow)
        GridControl.SetFocusOnCurrentItem
        Call GridControl.SelectRowCore(intRow)
        log.Message "Level2 Source Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
        IntRowNumber(1) = intJ 
        blnFlag = False 
        Exit For
      End If
    Next
    If blnFlag = True then
      log.Message "Level2 Source Name not found"
      strTCRemarks="Level2 Source Name not found"
      strTestCaseResult="FAIL"
      Exit Function
    End If
    Delay 2000,"Pls Wait.."
    
    ''Selecting Level3Source_Name
    intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Count
  For intK=0 to intTotNodeCnt-1
      If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Content.Description)=Ucase(strLevel3) then
        GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).ExpandAll
        intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).get_RowHandle
        Call GridControl.ClearSelectionCore
        Call GridControl.FocusViewAndRow(GridControl,intRow)
        GridControl.SetFocusOnCurrentItem
        Call GridControl.SelectRowCore(intRow)
        IntRowNumber(2) = intK 
        'log.Message "Level2 Source Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
        blnFlag = False 
        Exit For
      End If
    Next
    If blnFlag = True then
      'log.Message "Level2 Source Name not found"
      strTCRemarks="Level3 Source Name not found"
      strTestCaseResult="FAIL"
      Exit Function
    End If
    Delay 2000,"Pls Wait.." 
    
    'selecting level4 source
    intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Nodes.Count
  For intL=0 to intTotNodeCnt-1
      If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Nodes.Item(intL).Content.Description)=Ucase(strLevel4) then
       GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Nodes.Item(intL).ExpandAll
        intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Nodes.Item(intL).get_RowHandle
        Call GridControl.ClearSelectionCore
        Call GridControl.FocusViewAndRow(GridControl,intRow)
        GridControl.SetFocusOnCurrentItem
        Call GridControl.SelectRowCore(intRow)
        IntRowNumber(3) = intL 
        'log.Message "Level2 Source Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
        blnFlag = False 
        Exit For
      End If
  Next
    If blnFlag = True then
      'log.Message "Level2 Source Name not found"
      strTCRemarks="Level4 Source Name not found"
      strTestCaseResult="FAIL"
      Exit Function
    End If
    Delay 2000,"Pls Wait.."
    
    'selecting level5 source
    intTotNodeCnt=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Nodes.Item(intL).Nodes.Count
  For intM=0 to intTotNodeCnt-1
      If Ucase(GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Nodes.Item(intL).Nodes.Item(intM).Content.Description)=Ucase(strLevel5) then
       
        intRow=GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Nodes.Item(intK).Nodes.Item(intL).Nodes.Item(intM).get_RowHandle
        Call GridControl.ClearSelectionCore
        Call GridControl.FocusViewAndRow(GridControl,intRow)
        GridControl.SetFocusOnCurrentItem
        Call GridControl.SelectRowCore(intRow)
         IntRowNumber(4) = intM 
        'log.Message "Level2 Source Name - " & GridControl.Nodes_2.Item(intI).Nodes.Item(intJ).Content.Description  
        blnFlag = False 
        Exit For
      End If
  Next
    If blnFlag = True then
      'log.Message "Level2 Source Name not found"
      strTCRemarks="Level5 Source Name not found"
      strTestCaseResult="FAIL"
      Exit Function
    End If
    Delay 2000,"Pls Wait.."    
    SelectLevel5Source = IntRowNumber

End Function
'****************************************************************************************************************************************************************************
'Testcase :TC_SOURCE_PRT40-{}:Verify Cut Folder and Paste Above/Below source folder/s.

Sub sCutFolders(strParameters)
'Sub sCutFolders()


Delay 3000 , "Pls Wait..."

 On Error Resume Next
  Dim strTemp, objGridControl, objTemp, blnFlag, newSourceName, intTotNodeCnt, intSeriesID(0), strSourceName(3)
  
  
   strSource_Name=getSplitValue(strParameters,"SOURCE")
   strLevel2Source=getSplitValue(strParameters,"Level2Source")
   strLevel3FirstSRC_Name=getSplitValue(strParameters,"Level3FirstSRC_Name")
   strLevel3SecondSRC_Name=getSplitValue(strParameters,"Level3SecondSRC_Name")  
   strCategory=getSplitValue(strParameters,"CATEGORY")
   strLevel =getSplitValue(strParameters,"Level") 
   bFlag = False
   
   
   'strText =getSplitValue(strParameters,"DISPLAYTEXT")      
'   'strCopyOption= getSplitValue(strParameters,"COPYOPTION") 
'  ' strPasteOption = getSplitValue(strParameters,"PASTEOPTION") 
'   'strCategory=getSplitValue(strParameters,"CATEGORY") 
'   strLevel3Source=getSplitValue(strParameters,"WorkSpaceLevel3") 
'   strLevel2Source=getSplitValue(strParameters,"WorkSpaceLevel2")
'   strFolderCount=getSplitValue(strParameters,"FolderCount")'  
'   strLevel = getSplitValue(strParameters,"LEVEL")
'   strWithSeries = getSplitValue(strParameters,"WITHSERIES")

'   
'   Redim intSeriesID(Cint(strFolderCount))
'   
   
'  strLevel3FirstSRC_Name = "CopyFolder-1"
'  strLevel3SecondSRC_Name = "Level2FirstFolder" 
 
  
   ' Open for Edit Source
   Call sOpenSourceWorkSpace(strParameters)
   Call sEdgeProcessor() 
   
   'Cut required Level3 source and peast above/Below/Inside 
   Call fSelectLevel3(strParameters,strLevel3FirstSRC_Name,strLevel3SecondSRC_Name)
   
    'msgbox DescText 
    'Save the Workspace
    Call fSaveWorkspace() 
    Call sEdgeProcessor()         
    Call sCloseSWV() 
    
    'Open the Saved Workspace
    Call fOpenSavedWorkspace()
    Call sEdgeProcessor()
    'msgbox intRowNum
   
    
    If Ucase(Trim(strLevel)) = Trim(Ucase("Two")) Then 
      intRowCount = fVerifyLevel2SavedWorkspace(strParameters)
    Else
      intRowCount = fVerifySavedWorkspace(strParameters)
    End If 
   ' msgbox intRowCount 

  If Err.Number > 0 Then
    Log.Warning("Error in 'sCutFolders', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'======================================================================================================================================================================================
'Function to Select Level 3 Folder to Cut 
Function fSelectLevel3(strParameters,strLevel3FirstSRC_Name,strLevel3SecondSRC_Name)
'Function fSelectLevel3()

On Error Resume Next
  Dim nRowNumber(5)
  
     strPasteOption = getSplitValue(strParameters,"PASTEOPTION") 
     strFolderCount=getSplitValue(strParameters,"FolderCount")
     strWithSeries = getSplitValue(strParameters,"WITHSERIES")
     strLevel =getSplitValue(strParameters,"Level")
     
     If Ucase(strLevel) = Ucase("Two") Then 
      strLevel2FirstSRC_Name  = strLevel3FirstSRC_Name 
      strLevel2SecondSRC_Name = strLevel3SecondSRC_Name
     End If 
     
          
'     strEnvi = "Edge ( US Integration )" 
'     strPasteOption ="WPFObject(""ContentControlEx"", ""Paste Below"", 2)"
'     strFolderCount=1
'     'strWithSeries = "Yes"
'     strLevel2FirstSRC_Name = "CopyFolder-1"
'     strLevel2SecondSRC_Name= "Level2FirstFolder"
  
     
 ''Expand All Source
  Delay 3000
  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.BarManager.ClickItem("[0]|Expand All")
  Call sEdgeProcessor()
  Delay 2000
'  strTemp = "WPFObject(""ContentControlEx"", ""Expand All"", 2)"
'  Call sObjClick(strTemp)
''  Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
''  If objTemp.Exists Then 
''     objTemp.Click  
''     Delay 200
''  End If
  
  Delay 500
'Select the Level4 Folder to Peast the Copied folder
  strTemp="WPFObject(""SourceTreeListView"")"   
  Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  LevelCnt = objGridControl.Nodes_2.Count
    For IntI= 0 to LevelCnt-1
      Leve2Cnt = objGridControl.Nodes_2.Item(IntI).Nodes.Count      
      For IntJ = 0 to Leve2Cnt-1  
        If Ucase(objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Content.Description)=Ucase(strLevel2FirstSRC_Name) Then
            Delay 1000
            'Select the Level3 source to Copy  
            intRow=objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).get_RowHandle  
            Exit For
            Delay 200 
         End If      
        Leve3Cnt = objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Count
        For IntK = 0 to Leve3Cnt-1               
           'Copy the Selected Folder
           'Delay 1000  
           If Ucase(objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Item(IntK).Content.Description)=Ucase(strLevel3FirstSRC_Name) Then
              Delay 1000
            'Select the Level3 source to Copy  
               intRow=objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Item(IntK).get_RowHandle  
               Exit for
               Delay 200 
            End If
         Next 
       Next
      Next
               objGridControl.Keys "^[Home]"
               Call objGridControl.ClearSelectionCore
               Call objGridControl.FocusViewAndRow(objGridControl,intRow)
               objGridControl.SetFocusOnCurrentItem        
               Call objGridControl.SelectRowCore(intRow)
               If strFolderCount >1 Then 
                  For X = 1 to strFolderCount-1
                    SYS.Keys("![Down]") 
                    Delay 1000
                  Next
               End If
               If strFolderCount = 1 And Ucase(strWithSeries) = Ucase("Yes") Then
                   Call sEdgeProcessor() 
                   Delay 5000 
                   strTemp = WPFObject("SourceSeriesTableView")
                   Set objSeriesPanel = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceSeriesViewControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("SourceSeriesGridControl").WPFObject("SourceSeriesTableView")
                   DescText = objSeriesPanel.DataContext.Item(0).SeriesId   
               End If
               'Delay 2000                        
               fCut() 
               Call sEdgeProcessor() 

            
    
'Select the Level3 Folder to Peast the Copied folder
  strTemp="WPFObject(""SourceTreeListView"")"   
  Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  LevelCnt = objGridControl.Nodes_2.Count
    For IntI= 0 to LevelCnt-1
      Leve2Cnt = objGridControl.Nodes_2.Item(IntI).Nodes.Count
      For IntJ = 0 to Leve2Cnt-1        
       If Ucase(objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Content.Description)=Ucase(strLevel2SecondSRC_Name) Then 
            Delay 1000 
            intRow=objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).get_RowHandle  
            Exit For
            Delay 200  
        End If   
        Leve3Cnt = objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Count
        For IntK = 0 to Leve3Cnt-1               
           'Copy the Selected Folder         
           If Ucase(objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Item(IntK).Content.Description)=Ucase(strLevel3SecondSRC_Name) Then 
                Delay 1000 
                intRow=objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Item(IntK).get_RowHandle  
                Exit For
                Delay 200  
           End If                
       Next 
      Next
     Next   
     objGridControl.Keys "^[Home]"
     Call objGridControl.ClearSelectionCore
     Call objGridControl.FocusViewAndRow(objGridControl,intRow)
     objGridControl.SetFocusOnCurrentItem        
     Call objGridControl.SelectRowCore(intRow) 
    ' nRowNumber(1) = IntJ
     'Delay 2000
      Call  fPaste(strPasteOption)
      Call sEdgeProcessor()             
           
    'nRowNumber(3) = intRow
   'fSelectLevel3 = nRowNumber
  If Err.Number > 0 Then
    Log.Warning("Error in 'fSelectLevel3', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Function  
'================================================================================================================================================================

'Function to Open Saved Workspace

Function fOpenSavedWorkspace()
  
  On Error Resume Next


  strTemp = "WPFObject(""ContentControl"", ""Source Workspace"", 1)"
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  
  'Click on Source Workspace Viewer button
  If objTemp.Exists Then 
    objTemp.Click 
    Call sEdgeProcessor()
    Delay 500
  End If
  
  
  'Open the Saved Workspace  
  strTemp = "WPFObject(""PendingChangeGridControl"")"
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  
  If objTemp.Exists Then 
    Call objTemp.DblClickCell(0, "Workspace Name")  
    Call sEdgeProcessor()
    Delay 500
    
    'Close the Source Workspace Viewer
    Call sCloseSWV()
  End If  
  
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'fOpenSavedWorkspace', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
    
End Function 

'================================================================================================================================================================

'Function to verify the saved workspace displayed in Source Workspace.

Function fVerifySavedWorkspace(strParameters)
'Function fVerifySavedWorkspace()

On Error Resume Next 
  
  Dim blnFlag, IntRowN(5), strLocalName(10)
  BlnFlag= False
  
  strLevel3FirstSRC_Name=getSplitValue(strParameters,"Level3FirstSRC_Name")
  strLevel3SecondSRC_Name=getSplitValue(strParameters,"Level3SecondSRC_Name")  
  strCategory=getSplitValue(strParameters,"CATEGORY")
  strFolderCount=getSplitValue(strParameters,"FolderCount")
  strWithSeries = getSplitValue(strParameters,"WITHSERIES")
 
   
'  strCategory = "Below"
'  strLevel2FirstSRC_Name = "CopyFolder-1" 
'  strLevel2SecondSRC_Name = "Level2FirstFolder" 
'  strFolderCount = 1
'  'strWithSeries ="Yes"
'  strEnvi = "Edge ( US Integration )"

'
''Expand All Source
'
'  Delay 2000 , "Please Wait"
'  strTemp = "WPFObject(""ContentControlEx"", ""Expand All"", 2)"
'  Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
'  If objTemp.Exists Then 
'     objTemp.Click  
'     Delay 200
'     Call sEdgeProcessor()
'  End If


'Expand All Source
  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.BarManager.ClickItem("[0]|Expand All")
  Call sEdgeProcessor()
  Delay 2000

 'Verify CutFolder is peasted above/below/inside of a respective folder
  strTemp="WPFObject(""SourceTreeListView"")"   
  Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  LevelCnt = objGridControl.Nodes_2.Count
    For IntI= 0 to LevelCnt-1
      Leve2Cnt = objGridControl.Nodes_2.Item(IntI).Nodes.Count
      For IntJ = 0 to Leve2Cnt-1                
        Leve3Cnt = objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Count        
        For IntK = 0 to Leve3Cnt-1               
           'Copy the Selected Folder
           Delay 2000 
           If Ucase(objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Item(IntK).Content.Description)=Ucase(strLevel3SecondSRC_Name) Then
              Select Case Ucase(strCategory) 
                Case Ucase("Above")
                    intRowCnt = IntK-strFolderCount  
                    IntRowN(0)= IntI
                    IntRowN(1)= IntJ
                    Exit For            
                Case Ucase("Below")  
                    intRowCnt = IntK+1            
                    IntRowN(0)= IntI
                    IntRowN(1)= IntJ
                    Exit For   
                Case Ucase("Inside")
                    intRowCnt = IntK
                    IntRowN(0)= IntI
                    IntRowN(1)= IntJ
                    Exit For 
               End Select
           End If
        Next
       Next
      Next 
  If Ucase(strCategory) <>  Ucase("Inside")Then   
      If Ucase(objGridControl.Nodes_2.Item(IntRowN(0)).Nodes.Item(IntRowN(1)).Nodes.Item(intRowCnt).Content.Description)=Ucase(strLevel3FirstSRC_Name)Then                
         BlnFlag = True        
         strLocalName(0) = objGridControl.Nodes_2.Item(IntRowN(0)).Nodes.Item(IntRowN(1)).Nodes.Item(intRowCnt).Content.Description
         If strFolderCount > 1 Then 
            For X=1 to strFolderCount-1                
                strLocalName(X) = objGridControl.Nodes_2.Item(IntRowN(0)).Nodes.Item(IntRowN(1)).Nodes.Item(intRowCnt+X).Content.Description
             Next
         End If  
         If strFolderCount = 1 And Ucase(strWithSeries) = Ucase("Yes") Then
             Delay 2000 , "Please Wait"
             strTemp = WPFObject("SourceSeriesTableView")
             Set objSeriesPanel = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceSeriesViewControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("SourceSeriesGridControl").WPFObject("SourceSeriesTableView")
             intRow=objGridControl.Nodes_2.Item(IntRowN(0)).Nodes.Item(IntRowN(1)).Nodes.Item(intRowCnt+X).get_RowHandle
             objGridControl.Keys "^[Home]"
            Call objGridControl.ClearSelectionCore
            Call objGridControl.FocusViewAndRow(objGridControl,intRow)
            objGridControl.SetFocusOnCurrentItem
            Call objGridControl.SelectRowCore(intRow)
            Call sEdgeProcessor()
            Delay 200
            intCurrentID = objSeriesPanel.DataContext.Item(0).SeriesId 
             
             If  intCurrentID = DescText Then 
                strTCRemarks = "Series Id is Copied Correctly  "
                strTestCaseResult="PASS"
             Else
                  strTCRemarks = "Series Id is not Copied Correctly  "
                  strTestCaseResult="FAIL"
                  Exit Function
             End If 
         End If                       
      End If 
  Else
      Leve4Cnt = objGridControl.Nodes_2.Item(IntRowN(0)).Nodes.Item(IntRowN(1)).Nodes.Item(intRowCnt).Nodes.Count
      For IntL= 0 to Leve4Cnt-1
        If Ucase(objGridControl.Nodes_2.Item(IntRowN(0)).Nodes.Item(IntRowN(1)).Nodes.Item(intRowCnt).Nodes.Item(IntL).Content.Description)=Ucase(strLevel3FirstSRC_Name)Then   
          BlnFlag = True
          strLocalName(0) = objGridControl.Nodes_2.Item(IntRowN(0)).Nodes.Item(IntRowN(1)).Nodes.Item(intRowCnt).Nodes.Item(IntL).Content.Description
        'For More than one FolderCount
          If strFolderCount > 1 Then 
              For X=1 to strFolderCount-1
                  strLocalName(X) = objGridControl.Nodes_2.Item(IntRowN(0)).Nodes.Item(IntRowN(1)).Nodes.Item(intRowCnt).Nodes.Item(IntL+X).Content.Description
              Next
          End If 
          'For Cut and Paste inside with series
          If strFolderCount = 1 And Ucase(strWithSeries) = Ucase("Yes") Then
               intRow=objGridControl.Nodes_2.Item(IntRowN(0)).Nodes.Item(IntRowN(1)).Nodes.Item(intRowCnt).Nodes.Item(IntL).get_RowHandle
               Call objGridControl.ClearSelectionCore
               Call objGridControl.FocusViewAndRow(objGridControl,intRow)
               objGridControl.SetFocusOnCurrentItem
               Call objGridControl.SelectRowCore(intRow)
               Delay 2000 , "Please Wait"
               Call sEdgeProcessor()
               strTemp = WPFObject("SourceSeriesTableView")
               Set objSeriesPanel = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("SourceSeriesViewControl").WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("SourceSeriesGridControl").WPFObject("SourceSeriesTableView")
               intCurrentID = objSeriesPanel.DataContext.Item(0).SeriesId 
               If  intCurrentID = DescText Then 
                  strTCRemarks = "Series Id is Copied Correctly  "
                  strTestCaseResult="PASS"
                  Exit For
               Else
                    strTCRemarks = "Series Id is not Copied Correctly  "
                    strTestCaseResult="FAIL"
                    Exit Function
               End If 
          End If 
        End If 
      Next
  End If

   IF BlnFlag = True Then
      strTCRemarks = strTCRemarks & "<br />" & "'Cut And Peast' Functionality is working as expected"
      strTestCaseResult = "PASS"
      Err.Clear
   Else
       strTCRemarks =  "'Cut And Peast' Functionality is not working as expected"
       strTestCaseResult="FAIL"
   End IF
   
     fVerifySavedWorkspace = intRowCnt 
     for I = 0 to 10 
      strName(I) = strLocalName(I) 
     Next
    
  If Err.Number > 0 Then
    Log.Warning("Error in 'fVerifySavedWorkspace', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Function 


'====================================================================================================================================================================================================

'Function to verify Level 2 workspace ,  saved workspace displayed in Source Workspace.

Function fVerifyLevel2SavedWorkspace(strParameters)
'Function fVerifyLevel2SavedWorkspace()

On Error Resume Next 
  
  Dim blnFlag, IntRowN(5)
  BlnFlag= False
  
  strLevel2FirstSRC_Name=getSplitValue(strParameters,"Level3FirstSRC_Name")
  strLevel2SecondSRC_Name=getSplitValue(strParameters,"Level3SecondSRC_Name")  
  strCategory=getSplitValue(strParameters,"CATEGORY")
  strFolderCount=getSplitValue(strParameters,"FolderCount")
  strWithSeries = getSplitValue(strParameters,"WITHSERIES")
   
'  strCategory = "Below"
'  strLevel2FirstSRC_Name = "CopyFolder-1" 
'  strLevel2SecondSRC_Name = "Level2FirstFolder" 
'  strFolderCount = 1
'  'strWithSeries ="Yes"
'  strEnvi = "Edge ( US Integration )"


'Expand All Source
'  Delay 5000 , "Please Wait"
'  strTemp = "WPFObject(""ContentControlEx"", ""Expand All"", 2)"
'  Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
'  If objTemp.Exists Then     
'     objTemp.Click  
'     Delay 200
'     Call sEdgeProcessor()
'  End If

'Expand All Source
  Call Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.BarManager.ClickItem("[0]|Expand All")
  Call sEdgeProcessor()
  Delay 2000


 'Verify CutFolder is peasted above/below/inside of a respective folder
  strTemp="WPFObject(""SourceTreeListView"")"   
  Set objGridControl = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  LevelCnt = objGridControl.Nodes_2.Count
    For IntI= 0 to LevelCnt-1
      Leve2Cnt = objGridControl.Nodes_2.Item(IntI).Nodes.Count
      For IntJ = 0 to Leve2Cnt-1                
        Leve3Cnt = objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Nodes.Count       
        If Ucase(objGridControl.Nodes_2.Item(IntI).Nodes.Item(IntJ).Content.Description)=Ucase(strLevel2SecondSRC_Name) Then
              Select Case Ucase(strCategory) 
                Case Ucase("Above")
                    intRowCnt = IntJ-strFolderCount  
                    IntRowN(0)= IntI                    
                    Exit For            
                Case Ucase("Below")  
                    intRowCnt = IntJ+1            
                    IntRowN(0)= IntI                  
                    Exit For   
                Case Ucase("Inside")
                    intRowCnt = IntJ
                    IntRowN(0)= IntI                   
                    Exit For 
               End Select
           End If
         Next
       Next 
  If Ucase(strCategory) <>  Ucase("Inside")Then   
      If Ucase(objGridControl.Nodes_2.Item(IntRowN(0)).Nodes.Item(intRowCnt).Content.Description)=Ucase(strLevel2FirstSRC_Name)Then                
         BlnFlag = True
         strName(0) = objGridControl.Nodes_2.Item(IntRowN(0)).Nodes.Item(intRowCnt).Content.Description                      
      End If 
  Else
      Leve4Cnt = objGridControl.Nodes_2.Item(IntRowN(0)).Nodes.Item(intRowCnt).Nodes.Count
      For IntL= 0 to Leve4Cnt-1
        If Ucase(objGridControl.Nodes_2.Item(IntRowN(0)).Nodes.Item(intRowCnt).Nodes.Item(IntL).Content.Description)=Ucase(strLevel2FirstSRC_Name)Then   
          BlnFlag = True
          strName(0) = objGridControl.Nodes_2.Item(IntRowN(0)).Nodes.Item(intRowCnt).Nodes.Item(IntL).Content.Description
        End If 
      Next
  End If

   IF BlnFlag = True Then
      strTCRemarks = strTCRemarks & "<br />" & "'Cut And Peast' Functionality is working as expected"
      strTestCaseResult = "PASS"
   Else
       strTCRemarks =  "'Cut And Peast' Functionality is not working as expected"
       strTestCaseResult="FAIL"
   End IF
   
   for I = 0 to 10 
      strName(I) = strLocalName(I) 
   Next
     fVerifyLevel2SavedWorkspace = intRowCnt 
  If Err.Number > 0 Then
    Log.Warning("Error in 'fVerifySavedWorkspace', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
 
End Function 
'==========================================================================================================================================================

'Testcase:TC_SOURCE_PRT56: Verify Find And Replace functionality in workspace.

Function fFindAndReplace(strParameters)
'Function fFindAndReplace()

On Error Resume Next 
  strFindText=getSplitValue(strParameters,"FindText")
  strReplaceText=getSplitValue(strParameters,"ReplaceText")  
  strFolderCount=getSplitValue(strParameters,"FolderCount")
  strLevel = getSplitValue(strParameters,"Level")
  strReplaceBtn = getSplitValue(strParameters,"ReplaceBtn")
  'strLevle3PartialName = getSplitValue(strParameters,"Levle3PartialName")
  blnFlag = False
  
  
'  strFin  dText = "Find"
'  strReplaceText="Replace" 
'  strFolderCount =3
'  strLevel="Three"
'  strReplaceBtn = "WPFObject(""Button"", ""Replace All"", 4)"
'  strReplaceBtn = "WPFObject(""Button"", ""Replace Selected"", 3)"
  
  ' Open for Edit Source
   Call sOpenSourceWorkSpace(strParameters)
   Call sEdgeProcessor() 


' 'Expand All Source
  Delay 2000 , "Please Wait"
  strTemp = "WPFObject(""ContentControlEx"", ""Expand All"", 2)"
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  If objTemp.Exists Then 
     objTemp.Click  
     Delay 200
  End If
   
  'Row number for level2 or level3 source to replace
  IntCount = sGetRowCount(strParameters)  
  
  
  
  'Select the required Row    
  strTemp = "WPFObject(""SourceTreeListView"")"
  Set objGridControl = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  
  Select Case strLevel
       Case "Two"
          intRow=objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).get_RowHandle
       Case "Three"
          Lev3Cnt = objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Count
          For I = 0 to Lev3Cnt-1
             If InStr(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(I).Content.Description ,strFindText) > 0 Then  
               intRow=objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(I).get_RowHandle
               Exit For
            End If
          Next          
  End Select
  
          Call objGridControl.ClearSelectionCore
          Call objGridControl.FocusViewAndRow(objGridControl,intRow)
          objGridControl.SetFocusOnCurrentItem
          Call objGridControl.SelectRowCore(intRow)
   
  'Click on Find&Replace Button in workspace
  Delay 2000 , "Please Wait"
  strTemp = "WPFObject(""ContentControlEx"", ""Find & Replace"", 2)"
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  If objTemp.Exists Then 
     objTemp.Click  
     Delay 200
  End If
  
'Enter the description of the existing source 
 Delay 500 , "Please Wait"
  strTemp = "WPFObject(""FindText"")"
  Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: SearchWindow", "Find").FindChild("Name", strTemp, 50, True)
  If objTemp.Exists Then 
     objTemp.Click 
     objTemp.SetText(strFindText) 
     Delay 200
  End If
  
'Enter the text to be replaced with in 'Replace with:' textbox   

 Delay 200 , "Please Wait"
 strTemp = "WPFObject(""ReplaceText"")"
 Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: SearchWindow", "Find").FindChild("Name", strTemp, 50, True)
 If objTemp.Exists Then 
   objTemp.Click 
   objTemp.SetText(strReplaceText) 
    Delay 200
 End If
 
 'Click on 'Replace'
 Delay 200 , "Please Wait"
 'strTemp = "WPFObject(""Button"", ""Replace"", 2)"
 
 strTemp = strReplaceBtn
 Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: SearchWindow", "Find").FindChild("Name", strTemp, 50, True)
 If objTemp.Exists Then 
   objTemp.Click 
   Call sEdgeProcessor() 
  If  Ucase(Trim(strTestCase_no)) <> Ucase(Trim("TC_SOURCE_PRT55"))Then 
   Set objDialog  = Sys.Process("EdgeClient").WPFObject("HwndSource: WindowContentHolder", "Information").WPFObject("WindowContentHolder", "Information", 1).WPFObject("NonLogicalDecorator", "", 1).WPFObject("ThemedManagedContentPresenter", "", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_ContentOffset").WPFObject("PART_InactiveContentBackground")
   If  objDialog.Exists then
    strText = objDialog.DataContext.Text
    strsplit =split(strText," ")
    strRequiredText = Split(strsplit(2),".")
    strRecordCnt = strRequiredText(1)
    Call Aliases.EdgeClient.HwndSource_WindowContentHolder9.WindowContentHolder.NonLogicalDecorator.ThemedManagedContentPresenter.Grid.Grid.PART_ContentOffset.Grid.PART_ContainerContent.DXMessageBox.Click(287, 86)
    Delay 200
   End If
  End If
 
 End If
 
 

 
 'Close the Find and Replace window
 Set objClose = Sys.Process("EdgeClient").WPFObject("HwndSource: SearchWindow", "Find").WPFObject("SearchWindow", "Find", 1).WPFObject("Grid", "", 1).WPFObject("Grid", "", 1).WPFObject("Header")
 Call objClose.Click  
 Sys.Keys("~[F4]")
 Call sEdgeProcessor() 
 
 Delay 2000
 
'Save the Workspace
 Call fSaveWorkspace() 
 Call sEdgeProcessor()         
 Call sCloseSWV() 
    
'Open the Saved Workspace
 Call fOpenSavedWorkspace()
 Call sEdgeProcessor() 
 
' 'Expand All Source
  Delay 2000 , "Please Wait"
  strTemp = "WPFObject(""ContentControlEx"", ""Expand All"", 2)"
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  If objTemp.Exists Then 
     objTemp.Click  
     Delay 200
  End If
  
  'Verify  Replaced Description is Displayed in Workspace.
  
  strTemp = "WPFObject(""SourceTreeListView"")"
  Set objGridControl = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  
  
  ' 'Expand All Source
  Delay 2000 , "Please Wait"
  strTemp = "WPFObject(""ContentControlEx"", ""Expand All"", 2)"
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
  If objTemp.Exists Then 
     objTemp.Click  
     Delay 200
  End If
  
  Select Case strLevel
       Case "Two"
          If Ucase(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Content.Description) = Ucase(strReplaceText) Then
            blnFlag = True 
            strText = "Level2"
          End If  
       Case "Three"     
          Cnt=0                    
          For I = 0 to Lev3Cnt-1
            'strModifiedText = strReplaceText & "-"&Cnt            
            If InStr(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(I).Content.Description ,strReplaceText)> 0  Then
              'blnFlag = True 
              'IntCount(2) = IntCount(2)+1
              Cnt = Cnt+1
              strText = "Level3 Folder/Folders"
            End If  
          Next
           If  strFolderCount > 1 And (CInt(strRecordCnt) >  1) And (Cnt > 1) Then
              blnFlag = True  
           End If

            If strFolderCount = 1 And CInt(strRecordCnt) = Cnt Then 
              blnFlag = True 
            End If
  End Select
  
 
        
   IF blnFlag = True  Then 
     strTCRemarks = "'Find And Replace' Functionality is working as expected for " & strText & " Folders"
     strTestCaseResult = "PASS"
   Else
       strTCRemarks = "'Find And Replace' Functionality is not working as expected for " & strText & " Folders"
       strTestCaseResult="FAIL"
   End IF 
  If Err.Number > 0 Then
    Log.Warning("Error in 'fFindAndReplace', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If    
End Function

'==========================================================================================================================================================

'Testcase:TC_SOURCE_PRT56: Updload the workspace and verify in Dispaly Viewer

Sub sUploadWorkspace(strParameters)
'Sub sUploadWorkspace()

On Error Resume Next 


  strSource_Name=getSplitValue(strParameters,"SOURCE")
  strLevel2src_Name=getSplitValue(strParameters,"Level2Source")
  strReplaceText=getSplitValue(strParameters,"ReplaceText")
  strLevel = getSplitValue(strParameters,"Level")  
  
  
'  strSource = "Test"
'  strLevel2Source=""
'  strReplaceText = "Level2Replace"
'  strLevel = "Two"


  BlnFlag = False
  
  'Upload the Workspace
    Call fUploadWorkSpace()
    Call sEdgeProcessor() 
    
   
    'Open Source Dispaly Viewer
    Call  sOpenSourceDispalyViewer()
    Call sEdgeProcessor()  
    
    
    'Row number for level2 or level3 source to replace
     IntCount = sGetRowCount(strParameters)  
     
    'Verify Replaced Folder displayed in Dispaly Viewer  
    strTemp = "WPFObject(""SourceTreeListView"")"
    Set objGridControl = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
     
  
   Select Case strLevel
       Case "Two"
           If Ucase(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Content.Description) = Ucase(strReplaceText) Then
              blnFlag = True              
           End If                  
       Case "Three"
           If Ucase(objGridControl.Nodes_2.Item(IntCount(0)).Nodes.Item(IntCount(1)).Nodes.Item(IntCount(2)).Content.Description) = Ucase(strReplaceText) Then             
              blnFlag = True               
           End If
       
  End Select
  
   IF blnFlag = True Then 
     strTCRemarks = "The Replaced Folder name is displayed in dispaly viewer"
     strTestCaseResult = "PASS"
   Else
     strTCRemarks = "The Replaced Folder name is not displayed in dispaly viewer"
     strTestCaseResult="FAIL"
   End IF
   
  If Err.Number > 0 Then
    Log.Warning("Error in 'sUploadWorkspace', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'==========================================================================================================================================================

'Testcase:TC_SOURCE_PRT59-61: Verify Assign Values-Macro cap flag, URL, Remark
Sub sAssignValue(strParameters)
'Sub sAssignValue()


On Error Resume Next
  Dim strTemp, objtemp, strCategory , intRow
  
   strSource_Name=getSplitValue(strParameters,"SOURCE")
   strLevel2src_Name=getSplitValue(strParameters,"Level2Source")
   strLevel3src_Name=getSplitValue(strParameters,"WORKSPACE")
   strMacroCapFalg=getSplitValue(strParameters,"MacroCapFalg")
   strRemark=getSplitValue(strParameters,"Remark")
   strURL=getSplitValue(strParameters,"URL")
   blnFlag = False
   
'   strSource_Name = "Test"
'   strLevel2src_Name = "PRT111"
'   strLevel3src_Name = "PRT222"
'   strMacroCapFalg = "Text"
'   strRemark = "Remark1"
'   strURL = "http://google.com"
   
   
'   ' Open for Edit Source
'    Call sOpenSourceWorkSpace(strParameters)
'   
'   ''Select Level3 Folder in Source Workspace for Edit Window
'     Call sGridSelection(strParameters)
'     Call sEdgeProcessor()


    Call sSelectLevel2EditSource(strParameters)
     
     
   'Click on Assign Values Button
   strTemp =  "WPFObject(""ContentControlEx"", ""Assign Values"", 2)"
   Call sObjClick(strTemp)
   
   
   'Set MacroCapFlag   
   Call sSetValues("Macro Cap Flag", strMacroCapFalg)
   strTemp = "WPFObject(""Button_Yes"")" 
   Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Confirm").FindChild("Name",strTemp,50,True)
   If objTemp.Exists Then 
      objTemp.Click
      strTCRemarks = "MacroCapFlag is Entered"
   End If
   
   
   'Set URL
   strTemp =  "WPFObject(""ContentControlEx"", ""Assign Values"", 2)"
   Call sObjClick(strTemp)
   Call sSetValues("URL", strURL)
   strTCRemarks = strTCRemarks & "<br />" & "Url is Entered"

    
   
   'Set Remark
   Call sObjClick(strTemp)
   Call sSetValues("Remark", strRemark)
   strTCRemarks = strTCRemarks & "<br />" & "Remark is Entered"

    'Upload Workspace
   Call fUploadWorkSpace()
   Call sEdgeProcessor()
   
   '' Open Source Disply View Module
    Call sOpenSourceDispalyViewer()
    intRow =  sGridSelection(strParameters)
    
    'Verify updated Assign Values
    strTemp= "WPFObject(""SourceTreeListView"")"
    Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    strCurrentMCF = objTemp.Nodes_2.Item(intRow(0)).Nodes.Item(intRow(1)).Nodes.Item(intRow(2)).Content.MacroCapFlag 
    strCurrentURL = objTemp.Nodes_2.Item(intRow(0)).Nodes.Item(intRow(1)).Nodes.Item(intRow(2)).Content.Url 
    strCurrentRemark = objTemp.Nodes_2.Item(intRow(0)).Nodes.Item(intRow(1)).Nodes.Item(intRow(2)).Content.Remark
    
    If Trim(Ucase(strCurrentMCF))= Trim(Ucase())And Trim(Ucase(strCurrentURL))= Trim(Ucase(strURL))_
        And Trim(Ucase(strCurrentRemark))= Trim(Ucase(strRemark)) Then 
          strTCRemarks = strTCRemarks & "<br />" & "All Assigned Values are updated correctly"
          strTestCaseResult = "PASS"
    Else
         strTCRemarks = strTCRemarks & "<br />" & "Assigned Values are not updated correctly"
         strTestCaseResult="FAIL"
    End If
    
    Set objTemp = Nothing  

   If Err.Number > 0 Then
    Log.Warning("Error in 'sAssignValue', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If  
End Sub
'********************************************************************************************************************************************************************

Sub sObjClick(strTemp)
On Error Resume Next
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  
  If objTemp.Exists Then 
    objTemp.Click
    'Call sEdgeProcessor()
    log.message "Selected Object " + strTemp + " is Clicked"
  Else
    log.message "Selected Object " + strTemp + " doesnot exists"
  End If
End Sub
'*********************************************************************************************************************************************************************

Sub sSetValues(Column, Value)

On Error Resume Next

Dim strColumn, strValue, strOk, strTemp 
Dim objColumn, objValue, objOk
  
   'Object Identification
   strColumn = "WPFObject(""ColumnDropDown"")"
   Set objColumn = Sys.Process("EdgeClient").WPFObject("HwndSource: AssignValuesForm", "Assign Values").FindChild("Name",strColumn,50,True)
   
   strValue = "WPFObject(""ValuesText"")"
   Set objValue =Sys.Process("EdgeClient").WPFObject("HwndSource: AssignValuesForm", "Assign Values").FindChild("Name",strValue,50,True)
   
   strOk = "WPFObject(""OkButton"")"
   Set objOk =Sys.Process("EdgeClient").WPFObject("HwndSource: AssignValuesForm", "Assign Values").FindChild("Name",strOk,50,True)
   
   'Enter the Given Values Click on Apply Button
   objColumn.Set_Text(Column)
   objValue.Set_text(Value)
   objOk.Click
   
 
   
   Set objColumn = Nothing 
   Set objValue = Nothing 
   Set objOk = Nothing 
  ' Set objTemp = Nothing 
End Sub

'*********************************************************************************************************************************************************************
'Testcase:TC_SOURCE_PRT62: Verify Is Publication checkbox has be checked 
Sub sIs_Publication1(strParameters)
 On Error Resume Next
  
  Dim strTemp, objTemp , IntRow, strStatus ,strCheck, IntCnt
  Delay 2000, "sIs_Publication  Function Started"
  
   strCheck=getSplitValue(strParameters,"Check")
   strText=getSplitValue(strParameters,"Text")
  
 ' Open the Level2 Folder and Select Level3 Folder
  Call sSelectLevel2EditSource(strParameters)
  
  IntRow = sGridSelection(strParameters)
  
  strTemp = "WPFObject(""SourceTreeListView"")" 
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  IntCnt= objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Nodes.Count
  DescText = objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Content.PublicationDescription   
  intDecCnt = 0
   
   'Verify Description of All Children Should be same as Level3 Description
     If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT63"))Then                
        For IntI = 0 to IntCnt-1
            strLevel4Desc = objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Nodes.Item(IntI).Content.PublicationDescription
            If Trim(Ucase(strLevel4Desc))= Trim(Ucase(DescText)) Then 
              intDecCnt = intDecCnt+1
            End If
        Next    
        If intDecCnt = IntCnt Then 
            strTCRemarks = "'Publication Description' of all Children of level3 is updated to'" & DescText &"' , Same as Level3 Publication Description"
            strTestCaseResult = "PASS"  
        Else
            strTCRemarks = "'Publication Description' of all Children of level3 is not updated to'" & DescText &"' , Same as Level3 Publication Description"
            strTestCaseResult = "FAIL"  
        End If
         
        'Clean Up:
        Call sCloseSWV()
        Call SourceWorkSpacevwr()
        
        Set objTemp = Nothing         
        Exit Sub
     End If
     
    'Verify Level4 Publication Description is modiifed and all other child Publication Description should be empty
     If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT64"))Then 
             'Check the First Level4 Folder IS Publication Check box and Get Publication Description
        objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Nodes.Item(0).Content.set_HasPublication(strCheck)      
        Delay 200
        DescText = objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Nodes.Item(0).Content.Description
        strLevel4Desc1 = objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Nodes.Item(0).Content.PublicationDescription
        DescText1 = objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Content.PublicationDescription    
        For  IntI = 1 to IntCnt-1
           strLevel4Desc = objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Nodes.Item(IntI).Content.PublicationDescription
           If Trim(Ucase(strLevel4Desc))= "" And DescText1 = "" Then 
                intDecCnt = intDecCnt+1
           End If       
        Next
        
        If Trim(Ucase(strLevel4Desc1)) = Ucase(trim(DescText)) and intDecCnt = IntCnt-1 Then
              strTCRemarks = "'Publication Description' of selected Child is  '" & DescText &"', same as the Source Description and all other Levle3 Child folderes are empty  And level3  'Is Publication' checkbox un-checked "
              strTestCaseResult = "PASS"  
        Else
              strTCRemarks = "'Publication Description' of selected Child is  '" & DescText &"', not same as the Level3 Source Description or all other Levle3 Child folderes are empty or level3  'Is Publication' checkbox un-checked "
              strTestCaseResult = "FAIL"  
         End If
         
          'Clean Up:
          Call sCloseSWV()
          Call SourceWorkSpacevwr()
        
          Set objTemp = Nothing         
          Exit Sub
          
       
     End if 
  
  'Click on Is_Publication check Box
   objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Content.set_HasPublication(strCheck)
  
  
  
   'Upload Workspace
   Call fUploadWorkSpace()
   Call sEdgeProcessor()
   
   '' Open Source Disply View Module
   Call sOpenSourceDispalyViewer()
   intRow =  sGridSelection(strParameters)   
   strTemp = "WPFObject(""SourceTreeListView"")" 
   Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
   Delay 200 
  
   
   strStatus = objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Content.HasPublication
   
   If strText= "Checked" And  strStatus = "Y" then 
     strTCRemarks = "Is Publication checkbox is " & strText
     strTestCaseResult = "PASS"     
   ElseIf strText= "UnChecked" And  strStatus = "N" then 
     strTCRemarks = "Is Publication checkbox is " & strText
     strTestCaseResult = "PASS" 
   Else   
      strTCRemarks = "Is Publication checkbox is not  " & strText
      strTestCaseResult = "FAIL"    
   End If
   
  If Err.Number > 0 Then
    Log.Warning("Error in 'sIs_Publication1', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Sub
'****************************************************************************************************************************************************************
Sub sSelectLevel2EditSource(strParameters)

On Error Resume Next
  Dim strTemp, objtemp, strCategory , intRow
  
   strSource_Name=getSplitValue(strParameters,"SOURCE")
   strLevel2src_Name=getSplitValue(strParameters,"Level2Source")
   strLevel3src_Name=getSplitValue(strParameters,"WORKSPACE")
  
   
   ' Open for Edit Source
    Call sOpenSourceWorkSpace(strParameters)
   
   ''Select Level3 Folder in Source Workspace for Edit Window
     Call sGridSelection(strParameters)
     Call sEdgeProcessor()

  If Err.Number > 0 Then
    Log.Warning("Error in 'sSelectLevel2EditSource' , Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
  
End Sub

'*********************************************************************************************************************************************************************
'Testcase:TC_SOURCE_PRT62: Verify Is Publication checkbox has be checked 
Sub sIs_Publication(strParameters)
'Sub sIs_Publication()
 On Error Resume Next
  
  Dim strTemp, objTemp , IntRow, strStatus ,strCheck, IntCnt, HierarchyPanel
  Delay 2000, "Is_Publication  Function Started"
  
   strCheck=getSplitValue(strParameters,"Check")
   strText=getSplitValue(strParameters,"Text")
   
   if strCheck = "Y" then
      check = cbChecked     
   Else
       check = cbUnchecked       
   End If
  
    If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT65"))Then
      ' Verify Level3 folder Is Publiation Status 
      Call sUplod_Verify(strParameters)
      Exit Sub
    End If
 
' ' Open the Level2 Folder and Select Level3 Folder
  Call sSelectLevel2EditSource(strParameters) 
  IntRow = sGridSelection(strParameters)
  
  strTemp = "WPFObject(""SourceTreeListView"")" 
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)  
  Set hierarchyPanel = Aliases.EdgeClient.HwndSource_Shell.Shell.Grid.ContentControl.Grid.PART_RibbonLayout.Part_WindowContent.Grid.ContentControl.PART_ContainerContent.BarManager.DockPanel.DockLayoutManager.LayoutGroup.LayoutPanel.LayoutPanelContentPresenter.Root.BarManager.AdornerDecorator.AdornedControl.Grid.DockPanel.SourceTreeListControl.SourceTreeListView.HierarchyPanel
 
  
  IntCnt= objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Nodes.Count
  DescText = objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Content.PublicationDescription   
  intDecCnt = 0
  
     
   
   'Verify Description of All Children Should be same as Level3 Description
     If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT63"))Then                
        For IntI = 0 to IntCnt-1
            strLevel4Desc = objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Nodes.Item(IntI).Content.PublicationDescription
            If Trim(Ucase(strLevel4Desc))= Trim(Ucase(DescText)) Then 
              intDecCnt = intDecCnt+1
            End If
        Next    
        If intDecCnt = IntCnt Then 
            strTCRemarks = "'Publication Description' of all Children of level3 is updated to'" & DescText &"' , Same as Level3 Publication Description"
            strTestCaseResult = "PASS"  
        Else
            strTCRemarks = "'Publication Description' of all Children of level3 is not updated to'" & DescText &"' , Same as Level3 Publication Description"
            strTestCaseResult = "FAIL"  
        End If
         
        'Clean Up:
        Call sCloseSWV()
        Call SourceWorkSpacevwr()
        
        Set objTemp = Nothing         
        Exit Sub
     End If
     
    'Verify Level4 Publication Description is modiifed and all other child Publication Description should be empty
     If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT64"))Then 
        Call hierarchyPanel.RowControl4.CellsControl.CheckBox.ClickButton(check)
        'objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Nodes.Item(0).Content.set_HasPublication(strCheck)      
        Delay 200
        DescText = objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Nodes.Item(0).Content.Description
        strLevel4Desc1 = objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Nodes.Item(0).Content.PublicationDescription
        DescText1 = objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Content.PublicationDescription    
        For  IntI = 1 to IntCnt-1
           strLevel4Desc = objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Nodes.Item(IntI).Content.PublicationDescription
           If Trim(Ucase(strLevel4Desc))= "" And DescText1 = "" Then 
                intDecCnt = intDecCnt+1
           End If       
        Next
        
        If Trim(Ucase(strLevel4Desc1)) = Ucase(trim(DescText)) and intDecCnt = IntCnt-1 Then
              strTCRemarks = "'Publication Description' of selected Child is  '" & DescText &"', same as the Source Description and all other Levle3 Child folderes are empty  And level3  'Is Publication' checkbox un-checked "
              strTestCaseResult = "PASS"  
        Else
              strTCRemarks = "'Publication Description' of selected Child is  '" & DescText &"', not same as the Level3 Source Description or all other Levle3 Child folderes are empty or level3  'Is Publication' checkbox un-checked "
              strTestCaseResult = "FAIL"  
        End If
        
        Exit Sub   
          
       
     End if 
  
  'Click on Is_Publication check Box
  ' objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Content.set_HasPublication(strCheck) 
  '  Call hierarchyPanel.RowControl3.CellsControl.CheckBox.ClickButton(check)
   Call hierarchyPanel.RowControl3.CellsControl.CheckBox.ClickButton(check)  
   
    'Verify The Status after Uploading  
    Call sUplod_Verify(strParameters) 
    
    'Repeat  step1 for same source folder and now, un-check the 'Is Publication' of level3 source folder
     
  If Err.Number > 0 Then
    Log.Warning("Error in 'sIs_Publication', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If

End Sub
'****************************************************************************************************************************************************************

Sub sUplod_Verify(strParameters)
On Error Resume Next

  Dim strCheck, strText
  
   strCheck=getSplitValue(strParameters,"Check")  
   strText=getSplitValue(strParameters,"Text")

  'Upload Workspace
   Call fUploadWorkSpace()
   Call sEdgeProcessor()
   
   '' Open Source Disply View Module
   Call sOpenSourceDispalyViewer()
   intRow =  sGridSelection(strParameters)   
   strTemp = "WPFObject(""SourceTreeListView"")" 
   Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
   Delay 200 
  
   
   strStatus = objTemp.Nodes_2.Item(IntRow(0)).Nodes.Item(IntRow(1)).Nodes.Item(IntRow(2)).Content.HasPublication
   
   If strText= "cbChecked" And  strStatus = "Y" then 
     strTCRemarks = "Is Publication checkbox is " & strText
     strTestCaseResult = "PASS"     
   ElseIf strText= "cbUnchecked" And  strStatus = "N" then 
     strTCRemarks = "Is Publication checkbox is " & strText
     strTestCaseResult = "PASS" 
   Else   
      strTCRemarks = "Is Publication checkbox is not  " & strText
      strTestCaseResult = "FAIL"    
   End If
  If Err.Number > 0 Then
    Log.Warning("Error in 'sUpload_Verify', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'****************************************************************************************************************************************************************
'Testcase:TC_SOURCE_PRT67& 68: Verify open subscription option should be disabled for source with view rights

Sub sSubscription(strParameters)
on Error Resume Next

Dim strTemp, objTemp
  
  strSource_Name=getSplitValue(strParameters,"SOURCE")
  strLevel2src_Name=getSplitValue(strParameters,"Level2Source")
 
   
  If Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT67"))Then
      
    '' Open Source Disply View Module
      Call sOpenSourceDispalyViewer()    
      Call sGridSelection(strParameters)
      
      'Verify Open Subscription option       
      strTemp = "WPFObject(""ContentControlEx"", ""Subscription"", 2)"
      Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      objTemp.Click
      strTemp = "WPFObject(""ContentControlEx"", ""Open Subscription"", 2)"
      Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      If objTemp.IsEnabled = False Then 
        strTCRemarks = "Open Subscription option is disabled for  Level2 source : '" & strSource_Name  & "-> " & strLevel2src_Name & "'  which don’t have subscription view right ."
        strTestCaseResult = "PASS"
      Else
        strTCRemarks = "Open Subscription option is not disabled for  Level2 source : '" & strSource_Name  & "-> " & strLevel2src_Name & "'  which don’t have subscription view right ."
        strTestCaseResult = "FAIL"
      End IF
      Exit Sub 
  End If
   
  If Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT68"))Then 
      blnFlag = True
      ' Open for Edit Source
      Call sOpenSourceWorkSpace(strParameters)
      strTemp = "WPFObject(""SourceTreeListControl"")"
      Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
     ' Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", "Edge ( US Integration )").WPFObject("Shell", "Edge ( US Integration )", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("BarManager", "", 1).WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("DockPanel", "", 3).
      
     IntColumnCount = objTemp.Columns_2.Count
     
     For IntI = 0 to IntColumnCount-1 
      strHeader = objTempColumns_2.Item(IntI).Header
      If strHeader = "Subscription" Then
        strTCRemarks = "Subscription column is observed in workspace"
        strTestCaseResult = "FAIL"
        blnFlag = False
        Exit Sub 
      End If
     Next   
     
     If  blnFlag = True Then 
        strTCRemarks = "Subscription column is not observed in workspace"
        strTestCaseResult = "PASS"
        Call sCloseSWV()
        Call SourceWorkSpacevwr()        
     End IF  
   End If
   
   Set objTemp = Nothing   
  If Err.Number > 0 Then
    Log.Warning("Error in 'sSubscription', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Sub

'****************************************************************************************************************************************************************
'Testcase:TC_SOURCE_PRT 69_70:  Verify Attvhaed /Detatch Series Functionality :
sub sAttachDetachSeries(strParameters)
  on Error Resume Next
  Dim strTemp, objTemp , intSeriesID, bnFlag 
  
  strSeriesID=getSplitValue(strParameters,"SERIESID")
  strCategory = getSplitValue(strParameters,"Category")
  bnFlag = False
  'Open for Edit Source:
  Call sOpenSourceWorkSpace(strParameters)
  Call sGridSelection(strParameters)
  Delay 2000
  Call sEdgeProcessor()
  strTemp = "WPFObject(""SourceSeriesGridControl"")" 
  Set objGrid = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  
  'Attach Series by clicking on Attach Series Button   
  
  If  Ucase(Trim(strCategory)) = Ucase(Trim("Attached")) Then  
    strTemp="WPFObject(""ContentControlEx"", ""Attach Series"", 2)"    
    'Click on Attach Series Button
    Call sObjClick(strTemp)
    strTemp="WPFObject(""SeriesIdTextEdit"")"
    Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true) 
    'Enter the Series ID
    If objTemp.Exists = True then
       objTemp.Text=strSeriesID
       Delay(300)
       strTemp="WPFObject(""OkButton"")"
       Call sObjClick(strTemp)
       Call sEdgeProcessor()
    End If  
  End If 
  
  'Detach Series By clicking on Detach Series Button 
  If  Ucase(Trim(strCategory)) = Ucase(Trim("Detached")) Then  
    intCount = objGrid.DataContext.Count      
    For I = 0 to intCount-1
      Call objGrid.ClickCell(I, 25)
      Call sEdgeProcessor()
      strCurrentSID = objGrid.DataContext.Item(I).SeriesId
      If strCurrentSID = strSeriesID Then         
        If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT71"))Then 
        'Verify Detached Button should be diabled for Primary Source.
        strTemp = "WPFObject(""ContentControlEx"", ""Detach Series"", 2)"
          Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
           If objTemp.isEnabled = False Then 
             strTCRemarks = "Detached Button is diabled for the Primary Source"
             log.Message "Detached Button is diabled for the Primary Source"
             strTestCaseResult = "PASS"
           Else
              strTCRemarks = "Detached Button is enabled for the Primary Source"
              log.Message "Detached Button is enabled for the Primary Source"
              strTestCaseResult = "FAIL"
           End If  
           Call sCloseSWV()
           Call SourceWorkSpacevwr() 
          Exit Sub    
        End If
        strTemp = "WPFObject(""ContentControlEx"", ""Detach Series"", 2)"
        Call sObjClick(strTemp)
        Delay 200 
        strTemp = "WPFObject(""DXMessageBox"", """", 1)"
        Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: WindowContentHolder", "Confirm").FindChild("Name",strTemp,50,True)
        If objTemp.Exists Then 
          Call objTemp.Click(247, 62)
          Exit For
        End If      
      End If
    Next
  End If
    
  'Upload Workspace
   Call fUploadWorkSpace()
   Call sEdgeProcessor()
   
   'Open for Edit Source:
  Call sOpenSourceWorkSpace(strParameters) 
  Call sGridSelection(strParameters) 
  Delay 2000
  Call sEdgeProcessor()
  strTemp = "WPFObject(""SourceSeriesGridControl"")" 
  Set objGrid = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  intCount = objGrid.DataContext.Count
  If  Ucase(Trim(strCategory)) = Ucase(Trim("Attached"))Then 
    For I = 0 to intCount-1
    strCurrentSID = objGrid.DataContext.Item(I).SeriesId
    Call sEdgeProcessor()
    If strCurrentSID = strSeriesID Then        
        blnFlag = True  
        Exit For      
    End If
    Next     
  End If
  
  'Verify Attached/Detached Series updated after upload workspace.
  If  Ucase(Trim(strCategory)) = Ucase(Trim("Detached"))Then
    If intCount <> 0 Then
      For I = 0 to intCount-1
        strCurrentSID = objGrid.DataContext.Item(I).SeriesId
        If strCurrentSID <> strSeriesID Then 
          blnFlag = True                  
        End If
      Next 
    Else
      blnFlag = True  
    End If
  End If
  
  If  blnFlag = True  Then
        strTCRemarks = "The Series :"& strCurrentSID  & " is "& strCategory &" To/from level 3 folder"
        log.Message "The Series :"& strCurrentSID  & " is "& strCategory &" To/from level 3 folder"
        strTestCaseResult = "PASS"
  Else
        strTCRemarks = "The Series :"& strCurrentSID  & " is not "& strCategory &" To/from level 3 folder"
        log.Message "The Series :"& strCurrentSID  & " is not "& strCategory &" To/from level 3 folder"
        strTestCaseResult = "FAIL"         
  End If

  Call sCloseSWV()
  Call SourceWorkSpacevwr() 
  
  Set objTemp = Nothing 
  Set objGrid = Nothing 

  If Err.Number > 0 Then
    Log.Warning("Error in 'sAttachDetachSeries', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If  
End Sub
'***********************************************************************************************************************************************************************
'Funcrtion to peaste Series'
Function  fPasteseries(strPasteOption)
'Function  fPasteseries()
On Error Resume Next
Delay 2000, "Please Wait"

'Paste the copied/Cut folder
   
   'strPasteOption = "WPFObject(""ContentControlEx"", ""Paste Below"", 2)" 
   strTemp = "WPFObject(""ContentControlEx"", ""Paste Series"", 2)"
   Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
   
   If objTemp.Exists Then 
      objTemp.Click
      strTemp = strPasteOption
      Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
      if objTemp.Exists Then 
        objTemp.Click
        Delay 200
      End If 
   End IF 
   
   
   Delay 5000, "Please Wait"


   'Click Ok for Copy with series
   
    strTemp = "WPFObject(""Button_OK"")"
   Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
 
   If objTemp.Exists Then 
      objTemp.Click
   End If 
     
End Function

'**************************************************************************************************************************************************************
'Function to select the Level2/Levle3 folder in workspace

Function sSelectFolders(IntRNumber, strTemp)
  on Error Resume Next
  Dim intRow
  
    'Set the Object
    Set objGrid = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)  
    intRow =objGrid.Nodes_2.Item(IntRNumber(0)).Nodes.Item(IntRNumber(1)).Nodes.Item(IntRNumber(2)).get_RowHandle
    objGrid.Keys "^[Home]"
    Call objGrid.ClearSelectionCore
    Call objGrid.FocusViewAndRow(objGrid,intRow)
    objGrid.SetFocusOnCurrentItem
    Call objGrid.SelectRowCore(intRow)
  
End Function
'**************************************************************************************************************************************************************
'Testcase:TC_SOURCE_PRT 72:  Verify Copy and Paste Series Functionality  

Sub sCopySeries(strParameters)

  On Error Resume Next
  Dim strTemp, strTemp1, objTemp, IntRNumber, intSeriesID(), intCurrentSeriesID()
  
    
  strSource_Name=getSplitValue(strParameters,"SOURCE")
  strLevel2src_Name=getSplitValue(strParameters,"Level2Source")    
  strFolderCount=getSplitValue(strParameters,"FolderCount")
  strPasteOption=getSplitValue(strParameters,"PasteOption")
  strCategory = getSplitValue(strParameters,"Category")
  strSID = getSplitValue(strParameters,"SeriesID")
  strMultiLevel = getSplitValue(strParameters,"MultiLevel")
  strText = getSplitValue(strParameters,"Text")
  strButton = getSplitValue(strParameters,"CutCopyButton")
  strCutoption  = getSplitValue(strParameters,"CutOption")
  
  
  
    
  If strCategory = "Above" Then
    nSeriesRow = 0
  End If
  
  If strCategory = "Below" Then
    nSeriesRow = 1
  End If

  
  'strFolderCount = 1
  intCnt = 0 
  Redim intSeriesID(strFolderCount), intCurrentSeriesID(strFolderCount)
  
 ' Open for Edit Source
   Call sOpenSourceWorkSpace(strParameters)
   Call sEdgeProcessor()   
' 

  'Call sOpenSourceWorkSpace(strParameters) 
  strLevel3src_Name=getSplitValue(strParameters,"Level3Source")   
  IntRNumber =  SelectLevel3Source(strSource_Name,strLevel2src_Name,strLevel3src_Name)
     
  
  Call sEdgeProcessor()
  
  
  
  strTemp = "WPFObject(""SourceTreeListView"")"
  Set objFirstGrid = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)

  
  
  strTemp1 = "WPFObject(""SourceSeriesGridControl"")" 
  Set objSecondGrid = Sys.Process("EdgeClient").FindChild("Name",strTemp1,50,True)
  intCount =  objSecondGrid.DataContext.Count   
  
  Redim intSeriesID(intCount)   
  For I = 0 to intCount-1
      Call objSecondGrid.ClickCell(I, 25)
      intSeriesID(I)= objSecondGrid.DataContext.Item(I).SeriesId       
      If (Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT73")) And Cstr(intSeriesID(I)) = strSID)  or Cint(strFolderCount) = 1 Then        
          'Click on Copy Series Button          
          Call sObjClick(strButton) 
          Exit For
       End If  
       
      If strFolderCount > 1 And Cstr(intSeriesID(I)) = strSID Then 
        For J = 1 to strFolderCount-1 
          SYS.Keys("![Down]")   
        Next 
        'Click on Copy Series Button
         Call sObjClick(strButton)  
        Exit For  
      End If
  Next  
  
  
  
  DescText = intSeriesID(0)
  
  'Select the Other Level3 Folder  
  If Ucase(strMultiLevel) = "YES" Then
    IntRNumber(1)= IntRNumber(1)+1 
  Else
     IntRNumber(2) = IntRNumber(2)+1 
  End If
  
  
   
   strTemp = "WPFObject(""SourceTreeListView"")"
   Call sSelectFolders(IntRNumber, strTemp) 
   Call sEdgeProcessor()
  
   strTemp1 = "WPFObject(""SourceSeriesGridControl"")" 
   Set objSecondGrid = Sys.Process("EdgeClient").FindChild("Name",strTemp1,50,True)
   Delay 2000
   
  'Select the series from new level3 folder 
   Call objSecondGrid.ClickCell(0, 25)
   
  
  'Paste Above/Below series
  call fPasteseries(strPasteOption)
  Delay 2000 , "Please wait , series is pasting ..."
  
  
 'upload and verify the copied series
 'Upload Workspace
  Call fUploadWorkSpace()
  Call sEdgeProcessor()
  
   If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT77")) Or Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT73"))Then 
      'Drop the Workspace.
    Call sCloseWithYes(1299)
    Delay 1000
    Call SourceWorkSpacevwr()
    Exit Sub       
   End If 
   
  'Open for Edit Source:
  Call sOpenSourceWorkSpace(strParameters)   
  strTemp = "WPFObject(""SourceTreeListView"")"  
  Call sSelectFolders(IntRNumber, strTemp) 
  Call sEdgeProcessor()
  Delay 2000 
  
  
  strTemp1 = "WPFObject(""SourceSeriesGridControl"")" 
  Set objSecondGrid = Sys.Process("EdgeClient").FindChild("Name",strTemp1,50,True)
  rowcnt =  objSecondGrid.DataContext.Count   
  
  For I =0 to rowcnt-1
    intCurrentSeriesID(I)= objSecondGrid.DataContext.Item(I).SeriesId
    If Cstr(intCurrentSeriesID(I)) = Cstr(intSeriesID(intCnt)) and I = nSeriesRow  Then
     Call objSecondGrid.ClickCell(I, 25)
     intCnt = intCnt+1
      If strFolderCount > 1  Then
       For J = 1 to strFolderCount-1 
          SYS.Keys("![Down]") 
          intCnt = intCnt+1  
        Next  
      End if     
      Delay 200   
      'Remove the Copied Series as Clean up procedure      
      If Ucase(strCutoption) <> "YES" Then
            strTemp = "WPFObject(""ContentControlEx"", ""Detach Series"", 2)"
            Call sObjClick(strTemp)       
            Delay 200 
            strTemp = "WPFObject(""DXMessageBox"", """", 1)"
            Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: WindowContentHolder", "Confirm").FindChild("Name",strTemp,50,True)
            If objTemp.Exists Then 
              Call objTemp.Click(247, 62)
            End If 
      End If
      If Ucase(strCutoption) = "YES" Then
        Call sObjClick(strButton) 
        strLevel3src_Name=getSplitValue(strParameters,"Level3Source")   
        IntRNumber = SelectLevel3Source(strSource_Name,strLevel2src_Name,strLevel3src_Name) 
        Call sEdgeProcessor()
        Delay 2000      
        strTemp = "WPFObject(""SourceSeriesGridControl"")" 
        Set objSecondGrid = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
        Delay 2000  
        Call objSecondGrid.ClickCell(0, 25)
'        If strCategory = "Above" Then
'          strPasteOption = "WPFObject(""ContentControlEx"", ""Paste Below"", 2"
'        Else
          
       ' End If
        Delay 2000 
        strPasteOption = "WPFObject(""ContentControlEx"", ""Paste Above"", 2)" 
        Call fPasteseries(strPasteOption)
        Delay 2000 , "Please wait , series is pasting ..."        
      End If
      
      If intCnt =  Cint(strFolderCount) Then  
        strTCRemarks = "The Copied/Cut  Series is Pasted " + strCategory +   " the other series from level3 folder." + strText + " and paste series functionality is verified"
        log.Message "The Copied Series are Pasted " + strCategory + " the other series from level3 folder." + strText + " and paste series functionality is verified"
        strTestCaseResult = "PASS"   
        Exit For     
      Else
        strTCRemarks = "The Copied/Cut  Series is not Pasted " + strCategory + " the other series from level3 folder." & "<br />" & strText + " and paste series functionality is not verified"
        log.Message "The Copied  Series are not Pasted " + strCategory + " the other series from level3 folder." & "<br />" & strText + " and paste series functionality is not verified"
        strTestCaseResult = "FAIL"    
      End If   
    End IF
  Next
  
  
  Delay 4000, "Please Wait.."
  
  'Upload the workspace
  Call fUploadWorkSpace() 
  Call sEdgeProcessor()
  
  Set objTemp = Nothing 
  Set objFirstGrid = Nothing 
  Set objSecondGrid = Nothing
  
  If Err.Number > 0 Then
    Log.Warning("Error in 'sCopySeries', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If 
  
End Sub
    
'******************************************************************************************************************************************************************

Sub sAddSeperator(strParameters)

  on Error Resume Next
  Dim strTemp, objSecondGrid, intRow
  
   intSeriesID = getSplitValue(strParameters,"SeriesID")
   
 ' Open for Edit Source
   Call sOpenSourceWorkSpace(strParameters)
   Call sEdgeProcessor()   
   
   'Call sOpenSourceWorkSpace(strParameters) 
  strLevel3src_Name=getSplitValue(strParameters,"Level3Source")   
  IntRNumber =  SelectLevel3Source(strSource_Name,strLevel2src_Name,strLevel3src_Name)
   
   strTemp = "WPFObject(""SourceSeriesGridControl"")" 
   Set objSecondGrid = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
   rowcnt =  objSecondGrid.DataContext.Count  

  
   'Select the Required Series and Add Seperators
    For I =0 to rowcnt-1
      intCurrentSeriesID(I)= objSecondGrid.DataContext.Item(I).SeriesId
      If Cstr(intCurrentSeriesID(I)) = intSeriesID  Then
        Call objSecondGrid.ClickCell(I, 25)           
        If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT86"))Then
          strTemp = "WPFObject(""ContentControlEx"", ""Add Separator"", 2)"
          Call sObjClick(strTemp) 
          nRow = I+1                   
        End If   
        If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT87"))Then
          'Click on Attach Series Button
          strTemp = "WPFObject(""ContentControlEx"", ""Attach Series"", 2)"
          Call sObjClick(strTemp)         
          strTemp="WPFObject(""SeriesIdTextEdit"")"
          Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true) 
          'Enter the Series ID
          If objTemp.Exists = True then
             SYS.Keys  "368765867"
             SYS.Keys "[Enter]"
             SYS.Keys "-"            
             Delay(300)
             strTemp="WPFObject(""OkButton"")"
             Call sObjClick(strTemp)
             Call sEdgeProcessor()
             nRow = I+2
          End If  
        End If      
        sEdgeProcessor()
        Delay 200 
        Exit For  
      End If
    Next
    
      
    'Upload the workspace
    Call fUploadWorkSpace() 
    Call sEdgeProcessor()
      
    'Open for Edit Source:
    Call sOpenSourceWorkSpace(strParameters)   
    strTemp = "WPFObject(""SourceTreeListView"")"  
    Call sSelectFolders(IntRNumber, strTemp) 
    Call sEdgeProcessor()
    Delay 2000 
      
    CurrentSerID = objSecondGrid.DataContext.Item(nRow).SeriesId
    If int(CurrentSerID) = 0 Then      
      strTCRemarks = "The sperator is added below the series"
      log.Message "The sperator is added below the series"
      strTestCaseResult = "PASS"
        
      'Detach the Series as a Clean up process 
      Call objSecondGrid.ClickCell(nRow, 25) 
      If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT87"))Then
        SYS.Keys("![Up]") 
      End If
      Call sDetach() 
    
    Else
      strTCRemarks = "The sperator is not added below the series"
      log.Message "The sperator is not added below the series"
      strTestCaseResult = "FAIL"   
    End If        
   
'verify by attaching - to add seperator
    
    
    
  Set objTemp = Nothing 
  Set objFirstGrid = Nothing 
  Set objSecondGrid = Nothing 

  If Err.Number > 0 Then
    Log.Warning("Error in 'sAddSeperator', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
      
End Sub

'###############################################################################################################################################################

'Function to Detach Series And Upload 
Function sDetach() 

  On Error Resume Next
         
         strTemp = "WPFObject(""ContentControlEx"", ""Detach Series"", 2)"
         Call sObjClick(strTemp)       
         Delay 200 
         strTemp = "WPFObject(""DXMessageBox"", """", 1)"
         Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: WindowContentHolder", "Confirm").FindChild("Name",strTemp,50,True)
         If objTemp.Exists Then 
          Call objTemp.Click(247, 62)
         End If 
         Call sEdgeProcessor()
         'Upload the workspace
          Call fUploadWorkSpace() 
          Call sEdgeProcessor()   

  If Err.Number > 0 Then
    Log.Warning("Error in 'sDetach', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
   
End Function
'#########################################################################################################################################################################
'Testcase :TC_SOURCE_PRT89:Verify Make Primary Functionality 

Sub sMakePrimary(strParameters)
  
   on Error Resume Next
   Dim strTemp, objTemp, intCurrentSeriesID
  
  
   strSeriesID = getSplitValue(strParameters,"SeriesID") 
  
   'Open for Edit Source
   Call sOpenSourceWorkSpace(strParameters)
   Call sEdgeProcessor()   
   
   'Call sOpenSourceWorkSpace(strParameters)   
   strLevel3src_Name=getSplitValue(strParameters,"Level3Source")  
   IntRNumber =  SelectLevel3Source(strSource_Name,strLevel2src_Name,strLevel3src_Name)
   
   strTemp = "WPFObject(""SourceSeriesGridControl"")" 
   Set objSecondGrid = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
    'Call Make Primary Fucntion 
    
    nRow =  fMakePrimary(strSeriesID)
    'Upload the Workspace
    Call fUploadWorkSpace()
    Call sEdgeProcessor() 
   
   ' Open the Same Workspace to verify our previous Action        
   'Open for Edit Source
   Call sOpenSourceWorkSpace(strParameters)
   Call sEdgeProcessor()     
   
    strTemp = "WPFObject(""SourceTreeListView"")"  
    Call sSelectFolders(IntRNumber, strTemp) 
    Call sEdgeProcessor()
    Delay 2000 
    Call objSecondGrid.ClickCell(nRow, 25) 
    intSeriesType = objSecondGrid.DataContext.Item(nRow).SourceSeriesTypeId
   If intSeriesType = 1 Then 
      strTCRemarks = "Series is updated to Primary Source" 
      log.message "Series is updated to Primary Source" 
      strTestCaseResult = "PASS"
   Else
      strTCRemarks = "Series is not updated to Primary Source" 
      log.message "Series is not updated to Primary Source" 
      strTestCaseResult = "FAIL"   
   End If
   
   'Write Clean Up Sets here    
   Set objSecondGrid = Nothing 
   Set objTemp= Nothing 
   
   
     'CleanUP    
    Call sCloseSWV()
    Delay 1000  
    Call SourceWorkSpacevwr()

  If Err.Number > 0 Then
    Log.Warning("Error in 'sMakePrimary', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
   
End Sub

'#########################################################################################################################################################################
'Testcase :TC_SOURCE_PRT90:Verify for Making the same series Primary twice
Sub sMakePrimaryAttach(strParameters)

   On Error Resume Next
   Dim strTemp, objTemp
  
   strSeriesID = getSplitValue(strParameters,"SeriesID") 
  
   'Open for Edit Source
   Call sOpenSourceWorkSpace(strParameters)
   Call sEdgeProcessor()   
   
   'Call sOpenSourceWorkSpace(strParameters)   
   strLevel3src_Name=getSplitValue(strParameters,"Level3Source")  
   IntRNumber =  SelectLevel3Source(strSource_Name,strLevel2src_Name,strLevel3src_Name)  

   'Attach the Sereis   
   Call fAttach (strSeriesID)
   
   'Select the Series And Make Primary    
   Call fMakePrimary(strSeriesID)
   IntRNumber(2) = IntRNumber(2)+1
   strTemp = "WPFObject(""SourceTreeListView"")"  
   Call sSelectFolders(IntRNumber, strTemp) 
   Call sEdgeProcessor()
   
   'Attache the Same Series to other level3 
   Call fAttach (strSeriesID)
   
   'Select the Series And Make Primary    
   Call fMakePrimary(strSeriesID)
   
   strTemp = "WPFObject(""TextBlock_Message"")"
   Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
   strText = objTemp.wText
   
   If strText = "Same Series cannot be made primary multiple times." Then       
      strTemp= "WPFObject(""Button_OK"")"
      Call sObjClick(strTemp)
      Call sEdgeProcessor()
      
      strTCRemarks = "Warning message" +strText + "is Displayed"
      log.message "Warning message" +strText + "is Displayed"
      strTestCaseResult = "PASS"
   Else
    
      strTCRemarks = "Warning message" +strText + "is notDisplayed"
      log.message "Warning message" +strText + "is not Displayed"
      strTestCaseResult = "FAIL"    
   End If
   
   
   'CleanUP    
  Call sCloseWithYes(1299)
  Delay 1000  
  Call SourceWorkSpacevwr()
  
  Set objTemp= Nothing  

   If Err.Number > 0 Then
    Log.Warning("Error in 'sMakePrimaryAttach', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
   
End Sub
'###########################################################################################################################################################
'Function to acctach Series
Function fAttach (strSeriesID)

    On Error Resume Next
    Dim objTemp
  
    strTemp="WPFObject(""ContentControlEx"", ""Attach Series"", 2)"    
    'Click on Attach Series Button
    Call sObjClick(strTemp)
    strTemp="WPFObject(""SeriesIdTextEdit"")"
    Set objTemp =Sys.Process("EdgeClient").FindChild("Name",strTemp,50,true) 
    'Enter the Series ID
    If objTemp.Exists = True then
       objTemp.Text=strSeriesID
       Delay(300)
       strTemp="WPFObject(""OkButton"")"
       Call sObjClick(strTemp)
       Call sEdgeProcessor()
    End If  

  If Err.Number > 0 Then
    Log.Warning("Error in 'sAttach', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
      
End Function 
'###########################################################################################################################################################
'Function to Select the series and Make Primary 

Function fMakePrimary(strSeriesID)

On Error Resume Next
Dim strTemp, objTemp, objSecondGrid

  strTemp = "WPFObject(""SourceSeriesGridControl"")" 
   Set objSecondGrid = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
   rowcnt =  objSecondGrid.DataContext.Count  

  
   'Select the Required Series and Add Seperators
    For I =0 to rowcnt-1
      intCurrentSeriesID = objSecondGrid.DataContext.Item(I).SeriesId
      If Cstr(intCurrentSeriesID) = strSeriesID  Then
        Call objSecondGrid.ClickCell(I, 25)         
        strTemp = "WPFObject(""ContentControlEx"", ""Make Primary"", 2)"
        Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True)
        If objTemp.IsEnabled Then 
           objTemp.Click
           If  Ucase(Trim(strTestCase_no)) <> Ucase(Trim("TC_SOURCE_PRT90"))Then
            Call sEdgeProcessor() 
           End If
           Delay 2000
           log.Message "Make Primary Button is cliked"           
           Exit For
        Else
         log.Message "Make Primary Button is not enabled."
         strTCRemarks = "Make Primary Button is not enabled."
         strTestCaseResult = "FAIL"   
         Exit Function 
       End If      
      End if
    Next 
    
    fMakePrimary = I 

  If Err.Number > 0 Then
    Log.Warning("Error in 'fMakePrimary', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
     
End Function

'###########################################################################################################################################################
'Testcase :TC_SOURCE_PRT91-95 :Verify for Making the same series Primary twice
Sub sSaveAndOpenSWV(strParameters)
'Sub sSaveAndOpenSWV()
  
  On Error Resume Next
  Dim strTemp, objTemp
  
  strOwner=getSplitValue(strParameters,"NAME")
  
  
'  strOwner = "Shilpa Bhopalapur"
'  strTestCase_no = "TC_SOURCE_PRT94_95"
'  DescText = "03-06-2019 10_40_13 AM"
'  strEnvi = "Edge ( US Integration )"
  
  'Open for Edit Source
   Call sOpenSourceWorkSpace(strParameters)
   Call sEdgeProcessor() 
   
      
   If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT91_92"))Then   
      'Close the Workspace
       Call sCloseSWV()
   
       'Open Source Workspace Viewer
       Call sOpenSourceWSViewer()
   
       'Verify the Opened Workapce   
        Call sOpenWSfromSWV()
        'strTemp = "WPFObject(""LayoutPanel"", """", 1)"
        Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1)
        strText = objTemp.Caption
        If strText = "Source Workspace (For Edit) - " +Desctext  Then
           log.Message "The workspace "+Desctext +" is opened" 
           strTCRemarks = "The workspace "+Desctext +" is opened"
           strTestCaseResult = "PASS"  
        Else
           log.Message "The workspace "+Desctext +" is not opened" 
           strTCRemarks = "The workspace "+Desctext +" is not opened"
           strTestCaseResult = "FAIL"    
        End If
       
       'Clean UP  
      Call sCloseSWV()
      Call SourceWorkSpacevwr()  
   End If
   
   If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT93"))Then
     'Amend some changes in workspace      
     strLevel3src_Name=getSplitValue(strParameters,"Level3Source")  
     IntRNumber =  SelectLevel3Source(strSource_Name,strLevel2src_Name,strLevel3src_Name) 
     
     strTemp = "WPFObject(""SourceTreeListView"")"
     Set objTemp = Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True) 
     
     strDesc = objTemp.Nodes_2.Item(IntRNumber(0)).Nodes.Item(IntRNumber(1)).Nodes.Item(IntRNumber(2)).Content.DescriptionLocal
     strnum = Right(strDesc,1)
     intnum = Cint(strnum)+ 1
     strDesc1 = Replace(strDesc,strnum,Cstr(intnum))
    ' Call objTemp.Nodes_2.Item(IntRNumber(0)).Nodes.Item(IntRNumber(1)).Nodes.Item(IntRNumber(2)).Content.set_Description(strDesc1)     
     Call objTemp.Nodes_2.Item(IntRNumber(0)).Nodes.Item(IntRNumber(1)).Nodes.Item(IntRNumber(2)).Content.set_DescriptionLocal(strDesc1)
     
    'Save the Workspace
     Call fSaveWorkspace()
     Call sCloseSWV()
     
    'Open Source Workspace Viewer
     Call sOpenSourceWSViewer()
     
     'Upload the Workspace
     blnFlag =  fUploadbySWV()
     Call sCloseSWV()
     
     If  blnFlag = True Then 
        log.Message "The workspace "+Desctext +" is Uploaded Sucesfully" 
        strTCRemarks = "The workspace "+Desctext +" is Uploaded Sucesfully"
        strTestCaseResult = "PASS" 
     Else
        log.Message "The workspace "+Desctext +" is not Uploaded Sucesfully" 
        strTCRemarks = "The workspace "+Desctext +" is not Uploaded Sucesfully"
        strTestCaseResult = "FAIL" 
     End If
   End If 
   
   If  Ucase(Trim(strTestCase_no)) = Ucase(Trim("TC_SOURCE_PRT94_95"))Then 
   
      blnFalg = False  
   
      'Close the Workspace
       Call sCloseSWV()
       Call sOwner(strParameters)     
     
       'Open Source Workspace Viewer
       Call sOpenSourceWSViewer()
       
       'To get the dispay name of the computer
        Set objSysInfo = CreateObject("ADSystemInfo")
        strUser = objSysInfo.UserName
        Set objUser = GetObject("LDAP://" & strUser)
        strFullName = objUser.Get("displayName")
        sDisplayName = Split(strFullName,",")
       
       'Click on Show Search Filter
       strTemp = "WPFObject(""ContentControlEx"", ""Show Search Filter"", 2)"
       Call sObjClick(strTemp)
       Delay 200 
      
       'Select the workspace Creater name from Created By Combo Box
       
        Set objStackPanel= Sys.Process("EdgeClient").WPFObject("HwndSource: Shell", ""& strEnvi &"").WPFObject("Shell", ""& strEnvi &"", 1).WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("Grid", "", 1).WPFObject("PART_RibbonLayout").WPFObject("Part_WindowContent").WPFObject("Grid", "", 1).WPFObject("ContentControl", "", 1).WPFObject("PART_ContainerContent").WPFObject("BarManager").WPFObject("DockPanel", "", 1).WPFObject("DockLayoutManager").WPFObject("LayoutGroup", "", 1).WPFObject("LayoutPanel", "", 1).WPFObject("LayoutPanelContentPresenter", "", 1).WPFObject("Root").WPFObject("AdornerDecorator", "", 1).WPFObject("AdornedControl", "", 1).WPFObject("Grid", "", 1).WPFObject("BarManager", "", 1).WPFObject("DockPanel", "", 1).WPFObject("Border", "", 1).WPFObject("SearchGrid").WPFObject("StackPanel", "", 1)             
        Set objCreatedBy = objStackPanel.WPFObject("StackPanel", "", 2).WPFObject("ComboBox", "", 1)
        Set objOwner = objStackPanel.WPFObject("StackPanel", "", 3).WPFObject("ComboBox", "", 1)
        'Set objApplyFilter = objStackPanel.WPFObject("StackPanel", "", 6).WPFObject("Button", "Apply Filter", 1)
       'strTemp= "WPFObject(""StackPanel"", """", 2).WPFObject(""ComboBox"", """", 1)"
      
       
       
       Call  objCreatedBy.Click
       Set objPopUpRoot = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1)
       intCount = objPopUpRoot.ChildCount
       For IntI = 0 to intCount+1
          strText = objPopUpRoot.WPFObject("ComboBoxItem", "", IntI+1).DataContext.Value.Description
          If Trim(Ucase(strText)) = Trim(Ucase(sDisplayName(0))) Then
            Call objPopUpRoot.WPFObject("ComboBoxItem", "", IntI+1).WPFObject("StackPanel", "", 1).WPFObject("CheckBox", "", 1).ClickButton(cbChecked)
            Call objCreatedBy.ClickItem(IntI)
            Exit For
          End IF
          SYS.Keys "[Down]"
       Next 
       
       'Select the Owner ComboBox
       
       Call objOwner.Click
       Set objPopUpRoot = Sys.Process("EdgeClient").WPFObject("HwndSource: PopupRoot", "").WPFObject("PopupRoot", "", 1).WPFObject("Decorator", "", 1).WPFObject("NonLogicalAdornerDecorator", "", 1)
       intCount = objPopUpRoot.ChildCount
       For IntI = 0 to intCount-1
          strText = objPopUpRoot.WPFObject("ComboBoxItem", "", IntI+1).DataContext.Value.Description
          If Trim(Ucase(strText)) = Trim(Ucase(strOwner)) Then
            Call objPopUpRoot.WPFObject("ComboBoxItem", "", IntI+1).WPFObject("StackPanel", "", 1).WPFObject("CheckBox", "", 1).ClickButton(cbChecked)
            Call objOwner.ClickItem(IntI)
            Exit For
          End IF
          SYS.Keys "[Down]"
       Next 
       
       
       'Clickon Apply Fileter button 
       
       strTemp = "WPFObject(""Button"", ""Apply Filter"", 1)"
       Call sObjClick(strTemp)
       Delay 200 
       
       strTemp = "WPFObject(""PendingChangeGridControl"")"
       Set objTemp= Sys.Process("EdgeClient").FindChild("Name", strTemp, 50, True) 
       
       nRowcnt = objTemp.DataContext.SourceCollection.Count
       For I =0 to nRowcnt-1
        strText = objTemp.DataContext.SourceCollection.Item(I).ChangeName
        If Trim(Ucase(strText)) = Trim(Ucase(DescText))Then
          blnFalg = True
          Exit For    
        End If          
       Next
       
       If blnFalg = True then 
          log.Message strTCRemarks  &  "<br />" & "The Expected Workspace : "+ DescText + "  is filtered and displayed "
          strTCRemarks = strTCRemarks  &  "<br />" &  "The Expected Workspace : "+ DescText + "  is filtered and displayed "
          strTestCaseResult = "PASS" 
        
       Else
           log.Message strTCRemarks  &  "<br />" & "The Expected Workspace : "+ DescText + "  is not filtered and displayed "
           strTCRemarks = strTCRemarks  &  "<br />" & "The Expected Workspace : "+ DescText + "  is not filtered and displayed "
           strTestCaseResult = "FAIL" 
       End IF
        
       
       
       'Close SWV Window
       Call sCloseSWV()
   End If
   
  Set objTemp = Nothing 
  Set objCreatedBy = Nothing 
  Set objOwner = Nothing 


  If Err.Number > 0 Then
    Log.Warning("Error in 'sSaveAndOpenSWV', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If   
End Sub
'##############################################################################################################################################################3

Function sOpenWSfromSWV()
  on Error Resume Next
  Dim strTemp,objTemp

  
  strTemp = "WPFObject(""PendingChangeGridControl"")"
  Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
  
  'Select the Workspace
  Call objTemp.ClickCell(0 , "Workspace Name")  
  strTemp = "WPFObject(""ContentControlEx"", ""Open Workspace"", 2)"         
  Call sObjClick(strTemp)
  Call sEdgeProcessor()
  
  'Close the Layout 1
  Call sCloseSWV()
  
 
  If Err.Number > 0 Then
    Log.Warning("Error in 'sOpenWSfromSWV', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If 
End Function

'##################################################################################################################################################################Functio


Function fUploadbySWV()

  On Error Resume Next
  Dim strTemp, objTemp 
  
    strTemp = "WPFObject(""PendingChangeGridControl"")"
    Set objTemp = Sys.Process("EdgeClient").FindChild("Name",strTemp,50,True)
       
    'Select the Workspace
    Call objTemp.ClickCell(0 , "Workspace Name")
    
    'Click on Upload Workspace button
    strTemp = "WPFObject(""ContentControlEx"", ""Upload Workspace"", 2)"
    Call sObjClick(strTemp)   
    Delay 2000   
    
    'click on Yes , on Confirmation window     
    strTemp="WPFObject(""Button_Yes"")"
    Set objTemp = Sys.Process("EdgeClient").WPFObject("HwndSource: CustomMessageBoxWindow", "Please Confirm.").FindChild("Name",strTemp,50,True)
    If objTemp.Exists Then 
      objTemp.Click
    End If
    
    'Click on OK button on Upload Workspace Window 
    Set objTemp = Sys.Process("EdgeClient").Waitchild("WPFObject(""HwndSource: CustomMessageBoxWindow"", ""Upload Workspace"")",600000)
    If objTemp.Exists Then 
      Sys.Keys("O")
      Call sEdgeProcessor()   
    End If
    
    fUploadbySWV = True               
 
  If Err.Number > 0 Then
    Log.Warning("Error in 'fUploadbySWV', Error Description : " & Err.Description &" Error Number : "& Err.Number)
    Err.Clear
  End If
End Function
'#####################################################################################################################################33


